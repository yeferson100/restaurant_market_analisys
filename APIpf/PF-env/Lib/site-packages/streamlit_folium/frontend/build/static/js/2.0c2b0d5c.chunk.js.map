{"version":3,"sources":["../node_modules/underscore/modules/_setup.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/streamlit-component-lib/node_modules/react/index.js","../../src/event.mjs","../../src/event-target.mjs","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/OverloadYield.js","../node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/AsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js","../node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../node_modules/flatbuffers/js/flatbuffers.mjs","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../util/utf8.ts","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../io/interfaces.ts","../util/compat.ts","../util/buffer.ts","../io/adapters.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../vector.ts","../fb/Schema.ts","../fb/Message.ts","../enum.ts","../util/bit.ts","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../visitor.ts","../visitor/typecomparator.ts","../type.ts","../data.ts","../util/pretty.ts","../builder/valid.ts","../builder/buffer.ts","../builder.ts","../builder/bool.ts","../builder/null.ts","../builder/date.ts","../builder/decimal.ts","../builder/dictionary.ts","../builder/fixedsizebinary.ts","../util/math.ts","../builder/float.ts","../node_modules/@babel/runtime/helpers/esm/construct.js","../util/bn.ts","../builder/int.ts","../builder/time.ts","../builder/timestamp.ts","../builder/interval.ts","../builder/binary.ts","../builder/utf8.ts","../builder/run.ts","../vector/row.ts","../util/vector.ts","../vector/chunked.ts","../column.ts","../util/args.ts","../schema.ts","../builder/list.ts","../builder/fixedsizelist.ts","../builder/map.ts","../builder/struct.ts","../builder/union.ts","../visitor/set.ts","../fb/File.ts","../visitor/builderctor.ts","../builder/index.ts","../ipc/metadata/file.ts","../io/stream.ts","../io/file.ts","../util/int.ts","../visitor/vectorloader.ts","../visitor/typeassembler.ts","../ipc/metadata/json.ts","../ipc/metadata/message.ts","../ipc/message.ts","../visitor/vectorassembler.ts","../ipc/writer.ts","../util/recordbatch.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../vector/base.ts","../vector/binary.ts","../vector/bool.ts","../vector/date.ts","../vector/decimal.ts","../vector/dictionary.ts","../vector/fixedsizebinary.ts","../vector/fixedsizelist.ts","../vector/float.ts","../vector/interval.ts","../vector/int.ts","../vector/list.ts","../vector/map.ts","../vector/null.ts","../vector/struct.ts","../vector/timestamp.ts","../vector/time.ts","../vector/union.ts","../vector/utf8.ts","../util/fn.ts","../visitor/get.ts","../visitor/indexof.ts","../visitor/iterator.ts","../visitor/toarray.ts","../visitor/bytewidth.ts","../visitor/vectorctor.ts","../vector/index.ts","../table.ts","../recordbatch.ts","../ipc/reader.ts","../io/whatwg/builder.ts","../compute/predicate.ts","../compute/dataframe.ts","../Arrow.ts","../Arrow.dom.ts","../io/whatwg/iterable.ts","../io/whatwg/reader.ts","../io/whatwg/writer.ts","../node_modules/streamlit-component-lib/dist/ArrowTable.js","../node_modules/streamlit-component-lib/dist/streamlit.js","../node_modules/streamlit-component-lib/dist/StreamlitReact.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/underscore/modules/restArguments.js","../node_modules/underscore/modules/isObject.js","../node_modules/underscore/modules/isNull.js","../node_modules/underscore/modules/isUndefined.js","../node_modules/underscore/modules/isBoolean.js","../node_modules/underscore/modules/isElement.js","../node_modules/underscore/modules/_tagTester.js","../node_modules/underscore/modules/isString.js","../node_modules/underscore/modules/isNumber.js","../node_modules/underscore/modules/isDate.js","../node_modules/underscore/modules/isRegExp.js","../node_modules/underscore/modules/isError.js","../node_modules/underscore/modules/isSymbol.js","../node_modules/underscore/modules/isArrayBuffer.js","../node_modules/underscore/modules/isFunction.js","../node_modules/underscore/modules/_hasObjectTag.js","../node_modules/underscore/modules/_stringTagBug.js","../node_modules/underscore/modules/isDataView.js","../node_modules/underscore/modules/isArray.js","../node_modules/underscore/modules/_has.js","../node_modules/underscore/modules/isArguments.js","../node_modules/underscore/modules/isFinite.js","../node_modules/underscore/modules/isNaN.js","../node_modules/underscore/modules/constant.js","../node_modules/underscore/modules/_createSizePropertyCheck.js","../node_modules/underscore/modules/_shallowProperty.js","../node_modules/underscore/modules/_getByteLength.js","../node_modules/underscore/modules/_isBufferLike.js","../node_modules/underscore/modules/isTypedArray.js","../node_modules/underscore/modules/_getLength.js","../node_modules/underscore/modules/_collectNonEnumProps.js","../node_modules/underscore/modules/keys.js","../node_modules/underscore/modules/isEmpty.js","../node_modules/underscore/modules/isMatch.js","../node_modules/underscore/modules/underscore.js","../node_modules/underscore/modules/_toBufferView.js","../node_modules/underscore/modules/isEqual.js","../node_modules/underscore/modules/allKeys.js","../node_modules/underscore/modules/_methodFingerprint.js","../node_modules/underscore/modules/isMap.js","../node_modules/underscore/modules/isWeakMap.js","../node_modules/underscore/modules/isSet.js","../node_modules/underscore/modules/isWeakSet.js","../node_modules/underscore/modules/values.js","../node_modules/underscore/modules/pairs.js","../node_modules/underscore/modules/invert.js","../node_modules/underscore/modules/functions.js","../node_modules/underscore/modules/_createAssigner.js","../node_modules/underscore/modules/extend.js","../node_modules/underscore/modules/extendOwn.js","../node_modules/underscore/modules/defaults.js","../node_modules/underscore/modules/_baseCreate.js","../node_modules/underscore/modules/create.js","../node_modules/underscore/modules/clone.js","../node_modules/underscore/modules/tap.js","../node_modules/underscore/modules/toPath.js","../node_modules/underscore/modules/_toPath.js","../node_modules/underscore/modules/_deepGet.js","../node_modules/underscore/modules/get.js","../node_modules/underscore/modules/has.js","../node_modules/underscore/modules/identity.js","../node_modules/underscore/modules/matcher.js","../node_modules/underscore/modules/property.js","../node_modules/underscore/modules/_optimizeCb.js","../node_modules/underscore/modules/_baseIteratee.js","../node_modules/underscore/modules/iteratee.js","../node_modules/underscore/modules/_cb.js","../node_modules/underscore/modules/mapObject.js","../node_modules/underscore/modules/noop.js","../node_modules/underscore/modules/propertyOf.js","../node_modules/underscore/modules/times.js","../node_modules/underscore/modules/random.js","../node_modules/underscore/modules/now.js","../node_modules/underscore/modules/_createEscaper.js","../node_modules/underscore/modules/_escapeMap.js","../node_modules/underscore/modules/escape.js","../node_modules/underscore/modules/unescape.js","../node_modules/underscore/modules/_unescapeMap.js","../node_modules/underscore/modules/templateSettings.js","../node_modules/underscore/modules/template.js","../node_modules/underscore/modules/result.js","../node_modules/underscore/modules/uniqueId.js","../node_modules/underscore/modules/chain.js","../node_modules/underscore/modules/_executeBound.js","../node_modules/underscore/modules/partial.js","../node_modules/underscore/modules/bind.js","../node_modules/underscore/modules/_isArrayLike.js","../node_modules/underscore/modules/_flatten.js","../node_modules/underscore/modules/bindAll.js","../node_modules/underscore/modules/memoize.js","../node_modules/underscore/modules/delay.js","../node_modules/underscore/modules/defer.js","../node_modules/underscore/modules/throttle.js","../node_modules/underscore/modules/debounce.js","../node_modules/underscore/modules/wrap.js","../node_modules/underscore/modules/negate.js","../node_modules/underscore/modules/compose.js","../node_modules/underscore/modules/after.js","../node_modules/underscore/modules/before.js","../node_modules/underscore/modules/once.js","../node_modules/underscore/modules/findKey.js","../node_modules/underscore/modules/_createPredicateIndexFinder.js","../node_modules/underscore/modules/findIndex.js","../node_modules/underscore/modules/findLastIndex.js","../node_modules/underscore/modules/sortedIndex.js","../node_modules/underscore/modules/_createIndexFinder.js","../node_modules/underscore/modules/indexOf.js","../node_modules/underscore/modules/lastIndexOf.js","../node_modules/underscore/modules/find.js","../node_modules/underscore/modules/findWhere.js","../node_modules/underscore/modules/each.js","../node_modules/underscore/modules/map.js","../node_modules/underscore/modules/_createReduce.js","../node_modules/underscore/modules/reduce.js","../node_modules/underscore/modules/reduceRight.js","../node_modules/underscore/modules/filter.js","../node_modules/underscore/modules/reject.js","../node_modules/underscore/modules/every.js","../node_modules/underscore/modules/some.js","../node_modules/underscore/modules/contains.js","../node_modules/underscore/modules/invoke.js","../node_modules/underscore/modules/pluck.js","../node_modules/underscore/modules/where.js","../node_modules/underscore/modules/max.js","../node_modules/underscore/modules/min.js","../node_modules/underscore/modules/toArray.js","../node_modules/underscore/modules/sample.js","../node_modules/underscore/modules/shuffle.js","../node_modules/underscore/modules/sortBy.js","../node_modules/underscore/modules/_group.js","../node_modules/underscore/modules/groupBy.js","../node_modules/underscore/modules/indexBy.js","../node_modules/underscore/modules/countBy.js","../node_modules/underscore/modules/partition.js","../node_modules/underscore/modules/size.js","../node_modules/underscore/modules/_keyInObj.js","../node_modules/underscore/modules/pick.js","../node_modules/underscore/modules/omit.js","../node_modules/underscore/modules/initial.js","../node_modules/underscore/modules/first.js","../node_modules/underscore/modules/rest.js","../node_modules/underscore/modules/last.js","../node_modules/underscore/modules/compact.js","../node_modules/underscore/modules/flatten.js","../node_modules/underscore/modules/difference.js","../node_modules/underscore/modules/without.js","../node_modules/underscore/modules/uniq.js","../node_modules/underscore/modules/union.js","../node_modules/underscore/modules/intersection.js","../node_modules/underscore/modules/unzip.js","../node_modules/underscore/modules/zip.js","../node_modules/underscore/modules/object.js","../node_modules/underscore/modules/range.js","../node_modules/underscore/modules/chunk.js","../node_modules/underscore/modules/_chainResult.js","../node_modules/underscore/modules/mixin.js","../node_modules/underscore/modules/underscore-array-methods.js","../node_modules/underscore/modules/index-default.js","../node_modules/react-is/index.js","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/streamlit-component-lib/node_modules/react/cjs/react.production.min.js","../node_modules/object-assign/index.js","../node_modules/webpack/buildin/global.js"],"names":["VERSION","root","self","global","Function","ArrayProto","Array","prototype","ObjProto","Object","SymbolProto","Symbol","push","slice","toString","hasOwnProperty","supportsArrayBuffer","ArrayBuffer","supportsDataView","DataView","nativeIsArray","isArray","nativeKeys","keys","nativeCreate","create","nativeIsView","isView","_isNaN","isNaN","_isFinite","isFinite","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","MAX_ARRAY_INDEX","Math","pow","_slicedToArray","arr","i","_i","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","done","value","length","err","unsupportedIterableToArray","TypeError","module","exports","require","privateData","WeakMap","wrappers","pd","event","retv","get","console","assert","setCancelFlag","data","passiveListener","cancelable","canceled","preventDefault","error","Event","eventTarget","set","this","eventPhase","currentTarget","stopped","immediateStopped","timeStamp","Date","now","defineProperty","enumerable","key","defineRedirectDescriptor","configurable","defineCallDescriptor","apply","arguments","getWrapper","proto","wrapper","BaseEvent","CustomEvent","constructor","writable","isFunc","getOwnPropertyDescriptor","defineWrapper","getPrototypeOf","isStopped","setPassiveListener","type","target","composedPath","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","stopPropagation","stopImmediatePropagation","bubbles","Boolean","defaultPrevented","composed","srcElement","cancelBubble","returnValue","initEvent","window","setPrototypeOf","listenersMap","ATTRIBUTE","isObject","x","getListeners","listeners","defineEventAttribute","eventTargetPrototype","eventName","concat","node","listenerType","listener","prev","delete","newNode","passive","once","defineEventAttributeDescriptor","defineCustomEventTarget","eventNames","CustomEventTarget","EventTarget","types","Map","addEventListener","options","optionsIsObj","capture","undefined","removeEventListener","dispatchEvent","wrappedEvent","wrapEvent","handleEvent","setEventPhase","setCurrentTarget","_createForOfIteratorHelper","o","allowArrayLike","it","F","s","n","e","f","normalCompletion","didErr","step","_e2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","Promise","then","_asyncToGenerator","fn","args","_classCallCheck","instance","Constructor","_typeof","obj","_toPropertyKey","input","hint","prim","toPrimitive","res","String","Number","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_regeneratorRuntime","Op","hasOwn","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","record","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","name","mark","__proto__","awrap","async","iter","val","object","reverse","pop","skipTempReset","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_OverloadYield","kind","v","k","_awaitAsyncGenerator","AsyncGenerator","front","back","resume","overloaded","nextKey","settle","request","_wrapAsyncGenerator","_asyncGeneratorDelegate","inner","waiting","pump","_asyncIterator","sync","retry","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","r","ret","thr","flatbuffers","inRange","a","min","max","ToDictionary","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","buffer","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","position","offset","prep","size","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","len","existing_vtable","vt1","outer_loop","vt2","readInt16","j","root_table","opt_file_identifier","file_identifier","charCodeAt","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","utf8","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","fromCharCode","__offset","bb_pos","vtable_offset","__union","t","__string","opt_encoding","b","c","__indirect","__vector","__vector_len","__has_identifier","ident","Stream","tokens","endOfStream","read","shift","prepend","token","unshift","finished","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","encoding","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","count","temp","decode","byteOffset","byteLength","input_stream","code_points","indexOf","cp","codePointsToString","encode","opt_string","string","u","d","stringToCodePoints","_Buffer","Buffer","useNativeEncoders","decodeUtf8","decoder","_toUint8Array","toUint8Array","from","TextDecoderPolyfill","encodeUtf8","encoder","TextEncoderPolyfill","_setPrototypeOf","p","bind","_inherits","subClass","superClass","_getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","valueOf","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","Super","NewTarget","ITERATOR_DONE","freeze","ArrowJSON","_json","ReadableInterop","_getDOMStream","tee","_getNodeStream","pipe","pipeTo","duplex","pipeThrough","_DOMStream","toDOMStream","_nodeStream","toNodeStream","AsyncQueue","_ReadableInterop","_Symbol$asyncIterator","_super","_this","_values","resolvers","_closedPromise","_closedPromiseResolve","_cancel","_callee","reason","_context","return","_ensureOpen","_error","streamAdapters","_throw2","_callee2","_","_context2","abort","_x2","_return2","_callee3","_context3","close","_x3","_read","_callee4","_context4","_x4","_peek","_callee5","_context5","_x5","_this2","_ref","BigIntUnavailableError","BigIntUnavailable","asIntN","asUintN","BigInt","_ref2","BigIntCtor","BigIntAvailable","_ref3","BigInt64ArrayUnavailableError","BigInt64Array","BigInt64ArrayUnavailable","_ref4","BigInt64ArrayCtor","_ref5","BigUint64ArrayUnavailableError","BigUint64Array","BigUint64ArrayUnavailable","_ref6","BigUint64ArrayCtor","isNumber","isBoolean","isFunction","isPromise","isIterable","isAsyncIterable","isArrowJSON","isIteratorResult","isFileHandle","isFetchResponse","isReadableDOMStream","isReadableNodeStream","toArrayBufferViewIterator","SharedArrayBuf","SharedArrayBuffer","memcpy","source","targetByteOffset","sourceByteLength","targetByteLength","dst","src","joinUint8Arrays","chunks","sliced","xOffset","yOffset","xLen","yLen","y","_x6","_y","collapseContiguousByteRanges","reduce","index","Infinity","toArrayBufferView","ArrayBufferViewCtor","BYTES_PER_ELEMENT","toInt8Array","Int8Array","toInt16Array","Int16Array","toInt32Array","toBigInt64Array","toUint16Array","toUint32Array","Uint32Array","toBigUint64Array","toFloat32Array","toFloat64Array","toUint8ClampedArray","Uint8ClampedArray","ArrayCtor","buffers","t0","t1","_marked","toInt8ArrayIterator","toInt16ArrayIterator","toInt32ArrayIterator","toUint8ArrayIterator","toUint16ArrayIterator","toUint32ArrayIterator","toFloat32ArrayIterator","toFloat64ArrayIterator","toUint8ClampedArrayIterator","toArrayBufferViewAsyncIterator","_toArrayBufferViewAsyncIterator","_callee6","emit","_context8","t2","t3","t4","t5","t6","t7","t8","_context6","_context7","toInt8ArrayAsyncIterator","toInt16ArrayAsyncIterator","toInt32ArrayAsyncIterator","toUint8ArrayAsyncIterator","toUint16ArrayAsyncIterator","toUint32ArrayAsyncIterator","toFloat32ArrayAsyncIterator","toFloat64ArrayAsyncIterator","toUint8ClampedArrayAsyncIterator","rebaseValueOffsets","valueOffsets","compareArrayLike","fromIterable","fromAsyncIterable","_fromAsyncIterable","fromDOMStream","_fromDOMStream","fromNodeStream","_fromNodeStream","threw","cmd","bufferLength","byteRange","_yield","_yield$byteRange","_joinUint8Arrays","_joinUint8Arrays2","throw","_yield2","_yield$byteRange2","_joinUint8Arrays3","_joinUint8Arrays4","_yield3","_yield$byteRange3","_joinUint8Arrays5","_joinUint8Arrays6","AdaptiveByteReader","releaseLock","byobReader","defaultReader","supportsBYOB","reader","getBYOBReader","getDefaultReader","catch","readFromBYOBReader","mode","_readFromBYOBReader","readInto","_x7","_x8","_x9","_x10","_readInto","_callee8","_yield$reader$read","_context9","onEvent","_callee7","events","_yield4","_yield$_awaitAsyncGen","_yield$_awaitAsyncGen2","_yield$byteRange4","cleanup","_iterator","_step","_step$value","evt","destroy","_x11","_x12","_joinUint8Arrays7","_joinUint8Arrays8","race","map","_defineProperty","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","_objectSpread2","getOwnPropertyDescriptors","defineProperties","property","receiver","base","org","flatbuf","arrow","apache","AbstractVector","MetadataVersion","UnionMode","Precision","DateUnit","TimeUnit","IntervalUnit","Type","Endianness","Null","__init","builder","startNull","endNull","Struct_","startStruct_","endStruct_","List","startList","endList","LargeList","startLargeList","endLargeList","FixedSizeList","listSize","startFixedSizeList","addListSize","endFixedSizeList","keysSorted","startMap","addKeysSorted","endMap","Union","Sparse","typeIdsOffset","numElems","startUnion","addMode","addTypeIds","endUnion","Int","bitWidth","isSigned","startInt","addBitWidth","addIsSigned","endInt","FloatingPoint","HALF","precision","startFloatingPoint","addPrecision","endFloatingPoint","Utf8","startUtf8","endUtf8","Binary","startBinary","endBinary","LargeUtf8","startLargeUtf8","endLargeUtf8","LargeBinary","startLargeBinary","endLargeBinary","FixedSizeBinary","byteWidth","startFixedSizeBinary","addByteWidth","endFixedSizeBinary","Bool","startBool","endBool","Decimal","scale","startDecimal","addScale","endDecimal","MILLISECOND","unit","startDate","addUnit","endDate","Time","startTime","endTime","Timestamp","SECOND","optionalEncoding","timezoneOffset","startTimestamp","addTimezone","endTimestamp","Interval","YEAR_MONTH","startInterval","endInterval","Duration","startDuration","endDuration","KeyValue","keyOffset","valueOffset","startKeyValue","addKey","addValue","endKeyValue","DictionaryEncoding","id","indexTypeOffset","isOrdered","startDictionaryEncoding","addId","addIndexType","addIsOrdered","endDictionaryEncoding","Field","nameOffset","nullable","typeType","typeOffset","dictionaryOffset","childrenOffset","customMetadataOffset","startField","addName","addNullable","addTypeType","addType","addDictionary","addChildren","addCustomMetadata","endField","Schema","Little","endianness","fieldsOffset","startSchema","addEndianness","addFields","endSchema","NS7624605610262437867","MessageHeader","FieldNode","null_count","RecordBatch","nodesOffset","buffersOffset","startRecordBatch","addLength","addNodes","addBuffers","endRecordBatch","DictionaryBatch","dataOffset","isDelta","startDictionaryBatch","addData","addIsDelta","endDictionaryBatch","Message","V1","version","headerType","headerOffset","bodyLength","startMessage","addVersion","addHeaderType","addHeader","addBodyLength","endMessage","Schema_","BufferType","Message_","iterateBits","getBool","_data","_index","byte","bit","getBit","setBool","truncateBitmap","bitmap","alignedSize","packBools","xs","begin","byteIndex","remaining","popcnt_bit_range","lhs","rhs","_step2","sum","_iterator2","rhsInside","lhsInside","popcnt_array","cnt","pos","view","popcnt_uint32","getUint32","getUint16","getUint8","uint32","_toConsumableArray","arrayLikeToArray","Visitor","nodes","_len","_key","visit","_len2","_key2","getVisitFn","visitor","throwIfNotFound","dtype","Data","Vector","inferDType","DataType","visitNull","visitBool","visitInt","Int8","visitInt8","Int16","visitInt16","Int32","visitInt32","Int64","visitInt64","Uint8","visitUint8","Uint16","visitUint16","Uint32","visitUint32","Uint64","visitUint64","Float","visitFloat","Float16","visitFloat16","Float32","visitFloat32","Float64","visitFloat64","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","DateDay","visitDateDay","DateMillisecond","visitDateMillisecond","visitTimestamp","TimestampSecond","visitTimestampSecond","TimestampMillisecond","visitTimestampMillisecond","TimestampMicrosecond","visitTimestampMicrosecond","TimestampNanosecond","visitTimestampNanosecond","visitTime","TimeSecond","visitTimeSecond","TimeMillisecond","visitTimeMillisecond","TimeMicrosecond","visitTimeMicrosecond","TimeNanosecond","visitTimeNanosecond","visitDecimal","visitList","Struct","visitStruct","visitUnion","DenseUnion","visitDenseUnion","SparseUnion","visitSparseUnion","Dictionary","visitDictionary","visitInterval","IntervalDayTime","visitIntervalDayTime","IntervalYearMonth","visitIntervalYearMonth","visitFixedSizeList","visitMap","_node","typeId","SINGLE","DOUBLE","MICROSECOND","NANOSECOND","DAY","DAY_TIME","Dense","TypeComparator","_Visitor","schema","compareFields","fields","others","every","compareField","compareConstructor","compareAny","compareInt","compareFloat","compareDate","compareTimestamp","timezone","compareTime","compareUnion","typeIds","children","compareInterval","indices","dictionary","comparer","ArrayType","_DataType","Int_","_DataType2","_super2","_Int_","_super3","_Int_2","_super4","_Int_3","_super5","_Int_4","_super6","_Int_5","_super7","_Int_6","_super8","_Int_7","_super9","_Int_8","_super10","_DataType3","_super11","_Float","_super12","_Float2","_super13","_Float3","_super14","_DataType4","_super15","_DataType5","_super16","_DataType6","_super17","_DataType7","_super18","_this3","Date_","_DataType8","_super19","_this4","_Date_","_super20","_Date_2","_super21","Time_","_DataType9","_super22","_this5","Timestamp_","_DataType10","_super27","_this6","Interval_","_DataType11","_super32","_this7","_DataType12","_super35","child","_this8","valueType","_DataType13","_super36","_this9","join","Union_","_DataType14","_super37","_this10","typeIdToChildIndex","idx","_DataType15","_super40","_this11","_DataType16","_super41","_this12","Map_","_DataType17","_super42","_this13","atomicDictionaryId","getId","_DataType18","_super43","_this14","strideForType","nullCount","childData","floor","_nullCount","stride","nullBitmap","childStride","_sliceBuffers","clone","_sliceChildren","newLength","fill","VALIDITY","TYPE","OFFSET","DATA","valueOffsetsOrChildren","undf","valueToString","JSON","stringify","createIsValidFunction","nullValues","fnBody","noNaNs","valueToCase","roundLengthUpToNearest64Bytes","BPE","BufferBuilder","_resize","extra","reserved","array","sliceOrExtendArray","DataBufferBuilder","_BufferBuilder","reserve","BitmapBufferBuilder","_DataBufferBuilder","numValid","cur","_get","OffsetsBufferBuilder","_DataBufferBuilder2","WideBufferBuilder","_BufferBuilder2","_ArrayType64","buffer64","ArrayType64","nulls","_nulls","_isValid","new","flush","numInvalid","_offsets","_typeIds","reservedLength","reservedByteLength","setValid","isValid","setValue","_setValue","valid","numChildren","offsets","last","_options$queueingStra","queueingStrategy","_options$highWaterMar","highWaterMark","sizeProperty","numChunks","append","toVector","throughIterable","_options$queueingStra2","_options$highWaterMar2","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","throughAsyncIterable","FixedWidthBuilder","_Builder","opts","VariableWidthBuilder","_Builder2","_pendingLength","pending","_pending","current","_flush","pendingLength","_flushPending","BoolBuilder","NullBuilder","DateBuilder","_FixedWidthBuilder","DateDayBuilder","_DateBuilder","DateMillisecondBuilder","_DateBuilder2","DecimalBuilder","DictionaryBuilder","hashFn","_dictionaryOffset","_keysToIndices","valueToKey","keysToIndices","_dictionary","curr","FixedSizeBinaryBuilder","f64","u32","uint16ToFloat64","h","expo","sigf","sign","NaN","float64ToUint16","FloatBuilder","Float16Builder","_FloatBuilder","Float32Builder","_FloatBuilder2","Float64Builder","_FloatBuilder3","Parent","Class","bignumToString","bignumToBigInt","isArrowBigNumSymbol","for","BigNum","_construct","SignedBigNum","UnsignedBigNum","_len3","_key3","DecimalBigNum","_len4","_key4","bignumToNumber","bn","hi","lo","signed","words","number","decimalToString","digits","base64","base32","checks","toJSON","assign","memo","BN","num","IntBuilder","Int8Builder","_IntBuilder","Int16Builder","_IntBuilder2","Int32Builder","_IntBuilder3","Int64Builder","_IntBuilder4","toBigInt","Uint8Builder","_IntBuilder5","Uint16Builder","_IntBuilder6","Uint32Builder","_IntBuilder7","Uint64Builder","_IntBuilder8","TimeBuilder","TimeSecondBuilder","_TimeBuilder","TimeMillisecondBuilder","_TimeBuilder2","TimeMicrosecondBuilder","_TimeBuilder3","TimeNanosecondBuilder","_TimeBuilder4","TimestampBuilder","TimestampSecondBuilder","_TimestampBuilder","TimestampMillisecondBuilder","_TimestampBuilder2","TimestampMicrosecondBuilder","_TimestampBuilder3","TimestampNanosecondBuilder","_TimestampBuilder4","IntervalBuilder","IntervalDayTimeBuilder","_IntervalBuilder","IntervalYearMonthBuilder","_IntervalBuilder2","BinaryBuilder","_VariableWidthBuilder","Utf8Builder","Run","kParent","kRowIndex","kKeyToIdx","kIdxToVal","kCustomInspect","Row","_Symbol$iterator","parent","numKeys","ktoi","itov","getValue","getIndex","ki","vi","kr","vr","has","callbackfn","thisArg","callback","m","str","_Object$definePropert","MapRow","_Row","createRowProxy","getChildAt","StructRow","_Row2","defineRowProxyProperties","findIndex","tmp","row","_step3","getter","setter","_iterator3","getKey","RowProxyHandler","isExtensible","deleteProperty","preventExtensions","ownKeys","clampIndex","adjust","clampRange","end","_source$length","big0","isNaNFast","createElementComparator","search","typeofSearch","valueOfSearch","comparators","createSubElementsComparator","creatMapComparator","createArrayLikeComparator","createVectorComparator","createObjectComparator","compareArray","compareObject","vec","compareVector","lKeyItr","rKeyItr","rValItr","rVal","lKey","rKey","Chunked","_AbstractVector","vectors","calculateOffsets","_type","_chunks","_chunkOffsets","_length","_numChildren","chunk","isDictionary","_indices","flatten","_sliceInternal","columns","_children","vector","mid","isValidInternal","getInternal","element","indexOfInternal","toArray","arraySet","typedSet","chunkIndex","fromIndex","start","found","slices","chunkOffsets","chunkLength","chunkOffset","to","selectChunkArgs","Column","_Chunked","_field","SingleChunkColumn","metadata","column","rest","some","_Column","_chunk","selectArgs","Ctor","vals","_selectArgs","selectFieldArgs","_selectFieldArgs","_selectChunkArgs","selectVectorChildrenArgs","_selectVectorChildrenArgs","toKeysAndValues","_Object$entries$reduc","entries","_Object$entries$reduc2","fieldIndex","valueIndex","_ret","_keys$idx","_Symbol$toStringTag","dictionaries","generateDictionaryMap","compareSchemas","columnNames","names","columnIndices","curFields","mergeMaps","newFields","f2","newDictionaries","_Symbol$toStringTag2","_args","_args2","_args2$","_args2$2","_args2$3","_args2$4","_args$","_args$$name","_args$$type","_args$$nullable","_args$$metadata","_len5","_key5","_len6","_key6","m1","m2","ListBuilder","_run","run","FixedSizeListBuilder","childIndex","MapBuilder","StructBuilder","UnionBuilder","_valueToChildTypeId","childTypeId","_this$type","SparseUnionBuilder","_UnionBuilder","DenseUnionBuilder","_UnionBuilder2","SetVisitor","setEpochMsToMillisecondsLong","epochMs","setVariableWidthBytes","setDateDay","setEpochMsToDays","setDateMillisecond","setNumeric","setFloat16","setNumericX2","values64","long","setTimestampSecond","_ref9","setTimestampMillisecond","_ref10","setTimestampMicrosecond","_ref11","setEpochMsToMicrosecondsLong","setTimestampNanosecond","_ref12","setEpochMsToNanosecondsLong","setTimeSecond","_ref13","setTimeMillisecond","_ref14","setTimeMicrosecond","_ref15","setTimeNanosecond","_ref16","setDenseUnion","setSparseUnion","setIntervalDayTime","_ref18","setIntervalYearMonth","_ref19","_ref8","_ref7","_ref17","itr","_setStructVectorValue","_setStructArrayValue","_setStructObjectValue","GetBuilderCtor","newBuilder","getBuilderConstructor","defaultOptions","getChildOptions","_objectSpread","T","setVisitor","Footer","Block","schemaOffset","dictionariesOffset","recordBatchesOffset","startFooter","addSchema","addDictionaries","addRecordBatches","endFooter","metaDataLength","_Block","File_","_Footer","Footer_","V4","recordBatches","dictionaryBatches","_recordBatches","_dictionaryBatches","block","numRecordBatches","getRecordBatch","numDictionaries","getDictionaryBatch","buf","footer","getRootAsFooter","OffHeapFooter","startRecordBatchesVector","rb","FileBlock","startDictionariesVector","db","dictionaryBatchesOffset","finishFooterBuffer","_Footer_","_footer","recordBatchesLength","dictionariesLength","fileBlock","createBlock","AsyncByteQueue","_AsyncQueue","ByteStream","ByteStreamSource","peek","AsyncByteStream","AsyncByteStreamSource","body","closed","cancel","_args5","RandomAccessFile","_ByteStream","_this$readAt","readAt","getInt32","nBytes","AsyncRandomAccessFile","_AsyncByteStream","file","_handle","stat","_readInt","_yield$this$readAt","_seek","bytesRead","_yield$file$read","_readAt","_close","intAsHex","kPowersOfTen","BaseInt64","L","R","product","lessThan","_BaseInt","_times","_plus","out_buffer","fromString","out","posn","group","parseInt","substr","multiple","times","plus","left","right","_BaseInt2","this_high","other_high","negate","startsWith","Int128","L0","L1","L2","L3","R0","R1","R2","R3","multiply","sums","VectorLoader","nodesIndex","buffersIndex","nextFieldNode","readNullBitmap","readData","readOffsets","visitMany","readTypeIds","readDictionary","nextBufferRange","_ref20","JSONVectorLoader","_VectorLoader","sources","isTimestamp","isInt","isTime","isDate","convertArray","isDecimal","isBinary","isFixedSizeBinary","joined","binaryDataFromJSON","isBool","isUtf8","TypeAssembler","startTypeIdsVector","createTypeIdsVector","indexType","recordBatchFromJSON","fieldNodesFromJSON","buffersFromJSON","fieldChildrenFromJSON","fromJSON","fieldNodes","validity","BufferRegion","customMetadataFromJSON","_metadata","indexTypeFromJSON","typeFromJSON","_Field","_Schema","_Message","_KeyValue","_FieldNode","_Endianness","_RecordBatch","_DictionaryBatch","header","_version","_headerType","_createHeader","_bodyLength","msg","message","messageHeaderFromJSON","_message","getRootAsMessage","decodeMessageHeader","isSchema","isRecordBatch","isDictionaryBatch","finishMessageBuffer","_nodes","_buffers","_isDelta","_id","decodeFieldChildren","childrenLength","decodeCustomMetadata","customMetadataLength","customMetadata","decodeIndexType","decodeFieldType","typeIdsArray","typeAssembler","childOffsets","childrenVectorOffset","createChildrenVector","metadataOffset","createCustomMetadataVector","dictType","dictMeta","fieldOffsets","startFieldsVector","fieldsVectorOffset","createFieldsVector","platformIsLittleEndian","Big","_schema","fieldsLength","decodeSchemaFields","schemaFieldsFromJSON","recordBatch","startNodesVector","nodesVectorOffset","startBuffersVector","b_","buffersVectorOffset","batch","nodesLength","decodeFieldNodes","bufferRegions","buffersLength","decodeBuffers","dictionaryBatch","createFieldNode","createBuffer","setInt16","invalidMessageType","nullMessage","invalidMessageMetadata","expected","actual","invalidMessageBodyLength","MessageReader","readMetadataLength","readMetadata","throwIfNull","readMessage","PADDING","metadataLength","AsyncMessageReader","_readMessage","_readMessageBody","_readSchema","_args6","_readMetadataLength","_readMetadata","JSONMessageReader","_MessageReader","_body","_batchIndex","_dictionaryIndex","batches","flattenDataSources","MAGIC_STR","MAGIC","checkForMagicArrowString","magicLength","magicAndPadding","magicX2AndPadding","VectorAssembler","_byteLength","_bufferRegions","RangeError","isNull","addBuffer","_nullV","assembler","vectorChildren","_assembler$visitMany","_assembler$visitMany3","assembleFlatVector","assembleFlatListVector","firstOffset","lastOffset","assembleListVector","assembleNestedVector","maxChildTypeId","childLengths","shiftedOffsets","unshiftedOffsets","childLength","RecordBatchWriter","_position","_started","_sink","_dictionaryBlocks","_recordBatchBlocks","_dictionaryDeltaOffsets","autoDestroy","writeLegacyIpcFormat","_autoDestroy","_writeLegacyIpcFormat","writeAll","writeAllAsync","sink","isWritableNodeStream","objectMode","_writeFooter","compareTo","_writeSchema","payload","_InternalEmptyPlaceholderRecordBatch","_writeRecordBatch","flatbufferSize","prefixSize","nPaddingBytes","_write","of","_writePadding","write","_writeMessage","_VectorAssembler$asse","assemble","_writeDictionaries","_writeBodyBuffers","_VectorAssembler$asse2","padding","_step2$value","_writeDictionaryBatch","writableStrategy","readableStrategy","RecordBatchStreamWriter","_RecordBatchWriter","writer","RecordBatchFileWriter","_RecordBatchWriter2","_writeMagic","_step5","_iterator5","_writeAllAsync","noopBuf","nullBufs","bitmapLength","distributeVectorsIntoRecordBatches","vecs","batchArgs","numBatches","batchLength","numColumns","POSITIVE_INFINITY","distributeChildData","uniformlyDistributeChunksAcrossRecordBatches","_changeLengthAndBackfillNullBitmap","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","BaseVector","_bindDataAccessors","VectorName","isConcatSpreadable","BinaryVector","_BaseVector","BoolVector","vectorFromValuesWithType","DateVector","DateDayVector","_DateVector","DateMillisecondVector","_DateVector2","DecimalVector","DictionaryVector","FixedSizeBinaryVector","FixedSizeListVector","FloatVector","ArrowType","vectorTypeToDataType","InputType","arrayTypeToDataType","convertTo16Bit","Float16Vector","_FloatVector","Float32Vector","_FloatVector2","Float64Vector","_FloatVector3","typeCtor","dataCtor","IntervalVector","IntervalDayTimeVector","_IntervalVector","IntervalYearMonthVector","_IntervalVector2","IntVector","is64bit","convert32To64Bit","Int8Vector","_IntVector","Int16Vector","_IntVector2","Int32Vector","_IntVector3","Int64Vector","_IntVector4","_values64","Uint8Vector","_IntVector5","Uint16Vector","_IntVector6","Uint32Vector","_IntVector7","Uint64Vector","_IntVector8","ListVector","MapVector","_this$valueOffsets","NullVector","StructVector","_row","bound","TimestampVector","TimestampSecondVector","_TimestampVector","TimestampMillisecondVector","_TimestampVector2","TimestampMicrosecondVector","_TimestampVector3","TimestampNanosecondVector","_TimestampVector4","TimeVector","TimeSecondVector","_TimeVector","TimeMillisecondVector","_TimeVector2","TimeMicrosecondVector","_TimeVector3","TimeNanosecondVector","_TimeVector4","UnionVector","DenseUnionVector","_UnionVector","SparseUnionVector","_UnionVector2","Utf8Vector","partial0","partial2","GetVisitor","epochMillisecondsLongToMs","epochMillisecondsToDate","getVariableWidthBytes","getDateDay","epochDaysToMs","epochDaysToDate","getDateMillisecond","epochMillisecondsLongToDate","getNumeric","getFloat16","getBigInts","getTimestampSecond","getTimestampMillisecond","getTimestampMicrosecond","epochMicrosecondsLongToMs","getTimestampNanosecond","epochNanosecondsLongToMs","getTimeSecond","getTimeMillisecond","getTimeMicrosecond","getTimeNanosecond","getDenseUnion","getSparseUnion","getIntervalDayTime","getIntervalYearMonth","interval","int32s","_vector","decimal","IndexOfVisitor","indexOfValue","searchElement","indexOfNull","compare","indexOfUnion","IteratorVisitor","vectorIterator","getFn","getVisitor","nullByte","nullBit","nullableIterator","ToArrayVisitor","arrayOfVector","iteratorVisitor","variableWidthColumnErrorMessage","ByteWidthVisitor","____","visitFields","GetVectorConstructor","newDataType","_input","_input$values","_input$type","_input$nullValues","getVectorConstructor","_nullValues$input","_nullValues$input$val","_excluded","transform","indexOfVisitor","toArrayVisitor","getByteWidth","byteWidthVisitor","wrapNullableSet","VectorCtor","partialType0","getColumnAt","getColumnIndex","nameToIndex","selectAt","columnName","_this$_schema","_other$schema$fields$","newIdx","_memo","oldToNew","_other$schema$fields$2","_f","_fs","empty","fromStruct","tableFromIterable","tableFromAsyncIterable","RecordBatchReader","isSync","open","opening","_fromAsync","cols","_selectFieldArgs2","_selectFieldArgs3","selectColumnArgs","_StructVector","_dictionaries","DictionaryCollector","collect","fs","vs","l","batchData","ensureSameLengthData","readAllSync","impl","_impl","isFile","isAsync","isStream","readRecordBatch","RecordBatchStreamReader","RecordBatchJSONReaderImpl","fromArrowJSON","_fromFileHandle","fromFileHandle","_fromAsyncByteStream","fromAsyncByteStream","RecordBatchFileReader","RecordBatchFileReaderImpl","RecordBatchStreamReaderImpl","_callee15","_context16","fromByteStream","readAllAsync","_RecordBatchReader","_Symbol$iterator2","_Symbol$asyncIterator2","AsyncRecordBatchStreamReader","_RecordBatchReader2","_Symbol$iterator3","_Symbol$asyncIterator3","_RecordBatchStreamRea","AsyncRecordBatchFileReader","_AsyncRecordBatchStre","RecordBatchReaderImpl","_recordBatchIndex","_loadVectors","_RecordBatchReaderImp","_Symbol$iterator4","_reader","shouldAutoDestroy","readSchema","_readNextMessageAndValidate","readMessageBody","_loadRecordBatch","_loadDictionaryBatch","AsyncRecordBatchStreamReaderImpl","_RecordBatchReaderImp2","_Symbol$asyncIterator4","_open","_header2","_buffer2","_readNextMessageAndValidate2","_RecordBatchStreamRea2","_readFooter","_readDictionaryBatch","seek","AsyncRecordBatchFileReaderImpl","_AsyncRecordBatchStre2","_open2","_callee9","_readRecordBatch","_callee10","_context10","_readDictionaryBatch2","_callee11","_context11","_readFooter2","_callee12","_context12","_readNextMessageAndValidate3","_callee13","_context13","_RecordBatchStreamRea3","_context14","_readAllAsync","_callee14","_context15","_callee17","_context18","_callee16","_context17","_callee18","_yield$source$stat","_context19","BuilderTransform","_ReadableStream","_WritableStream","_numChunks","_finished","_bufferedSize","builderOptions","_controller","_builder","_getSize","chunkByteLength","_readableStrategy$hig","readableHighWaterMark","_writableStrategy$hig","writableHighWaterMark","ReadableStream","_maybeFlush","WritableStream","_writeValueAndReturnChunkSize","bufferedSize","controller","desiredSize","_enqueue","enqueue","Value","Literal","Equals","LTeq","GTeq","Not","ge","le","eq","_Value","Col","_Value2","colidx","Predicate","expr","And","Or","ComparisonPredicate","_Predicate","_bindLitLit","_bindLitCol","_bindColLit","_bindColCol","CombinationPredicate","_Predicate2","_CombinationPredicate","accum","_CombinationPredicate2","_ComparisonPredicate","_batch","rtrn","left_func","right_func","col","lit","col_func","lastDictionary","reverseLookup","lastKey","_ComparisonPredicate2","_ComparisonPredicate3","_Predicate3","func","countBy","DataFrame","scan","scanReverse","predicate","_Table","FilteredDataFrame","batchIndex","numRows","count_by","countByteLength","ceil","log","counts","CountByResult","_Table2","_DataFrame","_predicate","isBound","and","util_bn_","util_int_","util_bit_","util_math_","util_buffer_","util_vector_","bm","hwm","pull","asyncIterableAsReadableDOMStream","iterableAsReadableDOMStream","queue","readable","ComponentMessageType","ArrowTable","indexBuffer","columnsBuffer","styler","getCell","rowIndex","columnIndex","isBlankCell","headerRows","headerColumns","isIndexCell","isColumnsCell","classNames","content","dataColumnIndex","getContent","columnsTable","dataRowIndex","uuid","indexTable","displayValuesTable","dataTable","getColumnTypeId","nanosToDate","caption","displayValues","styles","numCols","rows","dataRows","dataColumns","serialize","nanos","__assign","Streamlit","API_VERSION","RENDER_EVENT","registeredMessageListener","setComponentReady","onMessageEvent","sendBackMsg","COMPONENT_READY","apiVersion","setFrameHeight","height","document","scrollHeight","lastFrameHeight","SET_FRAME_HEIGHT","setComponentValue","dataType","isBigIntArray","isTypedArray","SET_COMPONENT_VALUE","onRenderMessage","dataframeArgs","argsDataframeToObject","disabled","theme","_injectTheme","eventData","detail","argsDataframe","argsDataframeArrow","_a","toArrowTable","fromEntries","df","postMessage","isStreamlitMessage","style","createElement","head","appendChild","innerHTML","primaryColor","backgroundColor","secondaryBackgroundColor","textColor","font","__extends","extendStatics","__","StreamlitComponentBase","componentDidMount","componentDidUpdate","React","PureComponent","_unsupportedIterableToArray","minLen","test","_arrayLikeToArray","arr2","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","getOwnPropertyNames","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","restArguments","startIndex","isUndefined","isElement","nodeType","tagTester","tag","nodelist","childNodes","hasStringTagBug","hasObjectTag","isIE11","isDataView","getInt8","isArrayBuffer","isArguments","isSymbol","parseFloat","constant","createSizePropertyCheck","getSizeProperty","collection","shallowProperty","getByteLength","typedArrayPattern","isBufferLike","collectNonEnumProps","hash","contains","emulatedSet","nonEnumIdx","prop","isEmpty","getLength","isString","isMatch","attrs","_keys","_wrapped","toBufferView","bufferSource","tagDataView","aStack","bStack","deepEq","className","areArrays","aCtor","bCtor","isEqual","allKeys","ie11fingerprint","methods","weakMapMethods","forEachName","commonInit","mapTail","mapMethods","setMethods","pairs","invert","functions","sort","createAssigner","keysFunc","defaults","baseCreate","extendOwn","extend","tap","interceptor","toPath","path","deepGet","_has","identity","matcher","optimizeCb","argCount","accumulator","baseIteratee","iteratee","cb","mapObject","results","currentKey","noop","propertyOf","random","getTime","createEscaper","escaper","match","testRegexp","RegExp","replaceRegexp","replace","escapeMap","templateSettings","evaluate","interpolate","escape","noMatch","escapes","escapeRegExp","escapeChar","bareIdentifier","template","text","settings","oldSettings","argument","variable","fallback","idCounter","uniqueId","prefix","chain","_chain","executeBound","sourceFunc","boundFunc","callingContext","partial","boundArgs","placeholder","callArgs","depth","strict","output","isArrayLike","memoize","hasher","cache","address","wait","setTimeout","delay","throttle","timeout","previous","later","leading","throttled","_now","clearTimeout","trailing","debounce","immediate","passed","debounced","compose","after","before","findKey","createPredicateIndexFinder","dir","sortedIndex","createIndexFinder","predicateFind","item","findLastIndex","find","findWhere","each","createReduce","initial","reducer","list","guard","contextPath","pluck","where","computed","lastComputed","reStrSymbol","sample","rand","shuffle","sortBy","criteria","behavior","partition","pass","keyInObj","pick","first","compact","_flatten","otherArrays","difference","uniq","isSorted","seen","arrays","intersection","argsLength","unzip","range","chainResult","mixin","allExports","g","q","w","z","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","B","C","encodeURIComponent","D","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","E","refs","updater","G","H","isReactComponent","setState","forceUpdate","I","isPureReactComponent","J","K","ref","__self","__source","M","_owner","O","P","Q","keyPrefix","S","U","V","W","aa","X","N","Y","Z","ba","ReactCurrentDispatcher","ReactCurrentBatchConfig","suspense","ReactCurrentOwner","IsSomeRendererActing","Children","only","Component","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","createFactory","createRef","forwardRef","isValidElement","lazy","_ctor","_status","_result","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","propIsEnumerable","test1","test2","test3","split","letter","shouldUseNative","toObject"],"mappings":"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","file":"static/js/2.0c2b0d5c.chunk.js","sourcesContent":["// Current version.\nexport var VERSION = '1.13.6';\n\n// Establish the root object, `window` (`self`) in the browser, `global`\n// on the server, or `this` in some virtual machines. We use `self`\n// instead of `window` for `WebWorker` support.\nexport var root = (typeof self == 'object' && self.self === self && self) ||\n          (typeof global == 'object' && global.global === global && global) ||\n          Function('return this')() ||\n          {};\n\n// Save bytes in the minified (but not gzipped) version:\nexport var ArrayProto = Array.prototype, ObjProto = Object.prototype;\nexport var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n// Create quick reference variables for speed access to core prototypes.\nexport var push = ArrayProto.push,\n    slice = ArrayProto.slice,\n    toString = ObjProto.toString,\n    hasOwnProperty = ObjProto.hasOwnProperty;\n\n// Modern feature detection.\nexport var supportsArrayBuffer = typeof ArrayBuffer !== 'undefined',\n    supportsDataView = typeof DataView !== 'undefined';\n\n// All **ECMAScript 5+** native function implementations that we hope to use\n// are declared here.\nexport var nativeIsArray = Array.isArray,\n    nativeKeys = Object.keys,\n    nativeCreate = Object.create,\n    nativeIsView = supportsArrayBuffer && ArrayBuffer.isView;\n\n// Create references to these builtin functions because we override them.\nexport var _isNaN = isNaN,\n    _isFinite = isFinite;\n\n// Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\nexport var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\nexport var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n  'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n// The largest integer that can be represented exactly.\nexport var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap()\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap()\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event)\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    )\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            )\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault()\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    })\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true })\n\n    // Define accessors\n    const keys = Object.keys(event)\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key))\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation()\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        data.immediateStopped = true\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation()\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this))\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this))\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype)\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event)\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto)\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event)\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    })\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key)\n            const isFunc = typeof descriptor.value === \"function\"\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            )\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto)\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto)\n        wrappers.set(proto, wrapper)\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nexport function wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event))\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nexport function isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nexport function setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nexport function setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nexport function setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener\n}\n","import {\n    isStopped,\n    setCurrentTarget,\n    setEventPhase,\n    setPassiveListener,\n    wrapEvent,\n} from \"./event.mjs\"\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap()\n\n// Listener types\nconst CAPTURE = 1\nconst BUBBLE = 2\nconst ATTRIBUTE = 3\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget)\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this)\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this)\n\n            // Traverse to the tail while removing old value.\n            let prev = null\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next)\n                    } else {\n                        listeners.delete(eventName)\n                    }\n                } else {\n                    prev = node\n                }\n\n                node = node.next\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                }\n                if (prev === null) {\n                    listeners.set(eventName, newNode)\n                } else {\n                    prev.next = newNode\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    )\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this)\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    })\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i])\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map())\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length)\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i]\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this)\n        const optionsIsObj = isObject(options)\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        }\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName)\n        if (node === undefined) {\n            listeners.set(eventName, newNode)\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node\n            node = node.next\n        }\n\n        // Add it.\n        prev.next = newNode\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this)\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n\n        let prev = null\n        let node = listeners.get(eventName)\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n                return\n            }\n\n            prev = node\n            node = node.next\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this)\n        const eventName = event.type\n        let node = listeners.get(eventName)\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event)\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n            } else {\n                prev = node\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            )\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent)\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err)\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent)\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next\n        }\n        setPassiveListener(wrappedEvent, null)\n        setEventPhase(wrappedEvent, 0)\n        setCurrentTarget(wrappedEvent, null)\n\n        return !wrappedEvent.defaultPrevented\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype)\n}\n\nexport { defineEventAttribute, EventTarget }\nexport default EventTarget\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","export default function _OverloadYield(value, kind) {\n  this.v = value, this.k = kind;\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function _awaitAsyncGenerator(value) {\n  return new OverloadYield(value, 0);\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function AsyncGenerator(gen) {\n  var front, back;\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg),\n        value = result.value,\n        overloaded = value instanceof OverloadYield;\n      Promise.resolve(overloaded ? value.v : value).then(function (arg) {\n        if (overloaded) {\n          var nextKey = \"return\" === key ? \"return\" : \"next\";\n          if (!value.k || arg.done) return resume(nextKey, arg);\n          arg = gen[nextKey](arg).value;\n        }\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: !0\n        });\n        break;\n      case \"throw\":\n        front.reject(value);\n        break;\n      default:\n        front.resolve({\n          value: value,\n          done: !1\n        });\n    }\n    (front = front.next) ? resume(front.key, front.arg) : back = null;\n  }\n  this._invoke = function (key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n      back ? back = back.next = request : (front = back = request, resume(key, arg));\n    });\n  }, \"function\" != typeof gen[\"return\"] && (this[\"return\"] = void 0);\n}\nAsyncGenerator.prototype[\"function\" == typeof Symbol && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n}, AsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n}, AsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n}, AsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};","import AsyncGenerator from \"./AsyncGenerator.js\";\nexport default function _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function _asyncGeneratorDelegate(inner) {\n  var iter = {},\n    waiting = !1;\n  function pump(key, value) {\n    return waiting = !0, value = new Promise(function (resolve) {\n      resolve(inner[key](value));\n    }), {\n      done: !1,\n      value: new OverloadYield(value, 1)\n    };\n  }\n  return iter[\"undefined\" != typeof Symbol && Symbol.iterator || \"@@iterator\"] = function () {\n    return this;\n  }, iter.next = function (value) {\n    return waiting ? (waiting = !1, value) : pump(\"next\", value);\n  }, \"function\" == typeof inner[\"throw\"] && (iter[\"throw\"] = function (value) {\n    if (waiting) throw waiting = !1, value;\n    return pump(\"throw\", value);\n  }), \"function\" == typeof inner[\"return\"] && (iter[\"return\"] = function (value) {\n    return waiting ? (waiting = !1, value) : pump(\"return\", value);\n  }), iter;\n}","export default function _asyncIterator(iterable) {\n  var method,\n    async,\n    sync,\n    retry = 2;\n  for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) {\n    if (async && null != (method = iterable[async])) return method.call(iterable);\n    if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));\n    async = \"@@asyncIterator\", sync = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(s) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var done = r.done;\n    return Promise.resolve(r.value).then(function (value) {\n      return {\n        value: value,\n        done: done\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) {\n    this.s = s, this.n = s.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(value) {\n      var ret = this.s[\"return\"];\n      return void 0 === ret ? Promise.resolve({\n        value: value,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(value) {\n      var thr = this.s[\"return\"];\n      return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(s);\n}","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier) {\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\n  this.addOffset(root_table);\n  this.bb.setPosition(this.space);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from './buffer';\nimport {\n    TextDecoder as TextDecoderPolyfill,\n    TextEncoder as TextEncoderPolyfill,\n} from 'text-encoding-utf-8';\n\n/** @ignore @suppress {missingRequire} */\nconst _Buffer = typeof Buffer === 'function' ? Buffer : null;\n/** @ignore */\nconst useNativeEncoders = typeof TextDecoder === 'function' && typeof TextEncoder === 'function';\n\n/** @ignore */\nexport const decodeUtf8 = ((TextDecoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const decoder = new TextDecoder('utf-8');\n        return (buffer?: ArrayBuffer | ArrayBufferView) => decoder.decode(buffer);\n    }\n    return (input: ArrayBufferLike | ArrayBufferView) => {\n        const { buffer, byteOffset, length } = toUint8Array(input);\n        return _Buffer.from(buffer, byteOffset, length).toString();\n    };\n})(typeof TextDecoder !== 'undefined' ? TextDecoder : TextDecoderPolyfill);\n\n/** @ignore */\nexport const encodeUtf8 = ((TextEncoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const encoder = new TextEncoder();\n        return (value?: string) => encoder.encode(value);\n    }\n    return (input = '') => toUint8Array(_Buffer.from(input, 'utf8'));\n})(typeof TextEncoder !== 'undefined' ? TextEncoder : TextEncoderPolyfill);\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\n\n/** @ignore */\nexport const ITERATOR_DONE: any = Object.freeze({ done: true, value: void (0) });\n\n/** @ignore */\nexport type FileHandle = import('fs').promises.FileHandle;\n/** @ignore */\nexport type ArrowJSONLike = { schema: any; batches?: any[]; dictionaries?: any[]; };\n/** @ignore */\nexport type ReadableDOMStreamOptions = { type: 'bytes' | undefined, autoAllocateChunkSize?: number, highWaterMark?: number };\n\n/** @ignore */\nexport class ArrowJSON {\n    // @ts-ignore\n    constructor(private _json: ArrowJSONLike) {}\n    public get schema(): any { return this._json['schema']; }\n    public get batches(): any[] { return (this._json['batches'] || []) as any[]; }\n    public get dictionaries(): any[] { return (this._json['dictionaries'] || []) as any[]; }\n}\n\n/** @ignore */\nexport interface Readable<T> {\n\n    readonly closed: Promise<void>;\n    cancel(reason?: any): Promise<void>;\n\n    read(size?: number | null): Promise<T | null>;\n    peek(size?: number | null): Promise<T | null>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(size?: number | null): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nexport interface Writable<T> {\n    readonly closed: Promise<void>;\n    close(): void;\n    write(chunk: T): void;\n    abort(reason?: any): void;\n}\n\n/** @ignore */\nexport interface ReadableWritable<TReadable, TWritable> extends Readable<TReadable>, Writable<TWritable> {\n    [Symbol.asyncIterator](): AsyncIterableIterator<TReadable>;\n    toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<TReadable>;\n    toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n}\n\n/** @ignore */\nexport abstract class ReadableInterop<T> {\n\n    public abstract toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<T>;\n    public abstract toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n\n    public tee(): [ReadableStream<T>, ReadableStream<T>] {\n        return this._getDOMStream().tee();\n    }\n    public pipe<R extends NodeJS.WritableStream>(writable: R, options?: { end?: boolean; }) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    public pipeTo(writable: WritableStream<T>, options?: PipeOptions) { return this._getDOMStream().pipeTo(writable, options); }\n    public pipeThrough<R extends ReadableStream<any>>(duplex: { writable: WritableStream<T>, readable: R }, options?: PipeOptions) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n\n    protected _DOMStream?: ReadableStream<T>;\n    private _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n\n    protected _nodeStream?: import('stream').Readable;\n    private _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\n\n/** @ignore */\ntype Resolution<T> = { resolve: (value?: T | PromiseLike<T>) => void; reject: (reason?: any) => void; };\n\n/** @ignore */\nexport class AsyncQueue<TReadable = Uint8Array, TWritable = TReadable> extends ReadableInterop<TReadable>\n    implements AsyncIterableIterator<TReadable>, ReadableWritable<TReadable, TWritable> {\n\n    protected _values: TWritable[] = [];\n    protected _error?: { error: any; };\n    protected _closedPromise: Promise<void>;\n    protected _closedPromiseResolve?: (value?: any) => void;\n    protected resolvers: Resolution<IteratorResult<TReadable>>[] = [];\n\n    constructor() {\n        super();\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public write(value: TWritable) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift()!.resolve({ done: false, value } as any));\n        }\n    }\n    public abort(value?: any) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift()!.reject({ done: true, value }));\n        }\n    }\n    public close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift()!.resolve(ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n\n    public [Symbol.asyncIterator]() { return this; }\n    public toDOMStream(options?: ReadableDOMStreamOptions) {\n        return streamAdapters.toDOMStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public toNodeStream(options?: import('stream').ReadableOptions) {\n        return streamAdapters.toNodeStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public async throw(_?: any) { await this.abort(_); return ITERATOR_DONE; }\n    public async return(_?: any) { await this.close(); return ITERATOR_DONE; }\n\n    public async read(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'peek')).value; }\n    public next(..._args: any[]): Promise<IteratorResult<TReadable>> {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift()! } as any);\n        } else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        } else if (!this._closedPromiseResolve) {\n            return Promise.resolve(ITERATOR_DONE);\n        } else {\n            return new Promise<IteratorResult<TReadable>>((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n\n    protected _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`${this} is closed`);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ReadableInterop, ArrowJSONLike } from '../io/interfaces';\n\n/** @ignore */\ntype FSReadStream = import('fs').ReadStream;\n/** @ignore */\ntype FileHandle = import('fs').promises.FileHandle;\n\n/** @ignore */\nexport interface Subscription {\n    unsubscribe: () => void;\n}\n\n/** @ignore */\nexport interface Observer<T> {\n    closed?: boolean;\n    next: (value: T) => void;\n    error: (err: any) => void;\n    complete: () => void;\n}\n\n/** @ignore */\nexport interface Observable<T> {\n    subscribe: (observer: Observer<T>) => Subscription;\n}\n\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [<any> BigIntUnavailable, false];\n})() as [BigIntConstructor, boolean];\n\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [<any> BigInt64ArrayUnavailable, false];\n})() as [BigInt64ArrayConstructor, boolean];\n\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [<any> BigUint64ArrayUnavailable, false];\n})() as [BigUint64ArrayConstructor, boolean];\n\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n\n/** @ignore */ const isNumber = (x: any) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x: any) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x: any) => typeof x === 'function';\n/** @ignore */\nexport const isObject = (x: any): x is Object => x != null && Object(x) === x;\n\n/** @ignore */\nexport const isPromise = <T = any>(x: any): x is PromiseLike<T> => {\n    return isObject(x) && isFunction(x.then);\n};\n\n/** @ignore */\nexport const isObservable = <T = any>(x: any): x is Observable<T> => {\n    return isObject(x) && isFunction(x.subscribe);\n};\n\n/** @ignore */\nexport const isIterable = <T = any>(x: any): x is Iterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n\n/** @ignore */\nexport const isAsyncIterable = <T = any>(x: any): x is AsyncIterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n\n/** @ignore */\nexport const isArrowJSON = (x: any): x is ArrowJSONLike  => {\n    return isObject(x) && isObject(x['schema']);\n};\n\n/** @ignore */\nexport const isArrayLike = <T = any>(x: any): x is ArrayLike<T> => {\n    return isObject(x) && isNumber(x['length']);\n};\n\n/** @ignore */\nexport const isIteratorResult = <T = any>(x: any): x is IteratorResult<T> => {\n    return isObject(x) && ('done' in x) && ('value' in x);\n};\n\n/** @ignore */\nexport const isUnderlyingSink = <T = any>(x: any): x is UnderlyingSink<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n\n/** @ignore */\nexport const isFileHandle = (x: any): x is FileHandle => {\n    return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n\n/** @ignore */\nexport const isFSReadStream = (x: any): x is FSReadStream => {\n    return isReadableNodeStream(x) && isNumber((<any> x)['bytesRead']);\n};\n\n/** @ignore */\nexport const isFetchResponse = (x: any): x is Response => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n\n/** @ignore */\nexport const isWritableDOMStream = <T = any>(x: any): x is WritableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableDOMStream = <T = any>(x: any): x is ReadableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isWritableNodeStream = (x: any): x is NodeJS.WritableStream => {\n    return isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableNodeStream = (x: any): x is NodeJS.ReadableStream => {\n    return isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !(x instanceof ReadableInterop);\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport { encodeUtf8 } from '../util/utf8';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks: Uint8Array[]) {\n    let result = chunks[0] ? [chunks[0]] : [];\n    let xOffset: number, yOffset: number, xLen: number, yLen: number;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n\n/** @ignore */\nexport function memcpy<TTarget extends ArrayBufferView, TSource extends ArrayBufferView>(target: TTarget, source: TSource, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\n\n/** @ignore */\nexport function joinUint8Arrays(chunks: Uint8Array[], size?: number | null): [Uint8Array, Uint8Array[], number] {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    let result = collapseContiguousByteRanges(chunks);\n    let byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source: Uint8Array, sliced: Uint8Array, buffer: Uint8Array | void;\n    let offset = 0, index = -1, length = Math.min(size || Infinity, byteLength);\n    for (let n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            } else if (sliced.length === source.length) { index++; }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\n\n/** @ignore */\nexport type ArrayBufferViewInput = ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined  |\n                    IteratorResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> |\n          ReadableStreamReadResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> ;\n\n/** @ignore */\nexport function toArrayBufferView<T extends TypedArray>(ArrayBufferViewCtor: TypedArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView<T extends BigIntArray>(ArrayBufferViewCtor: BigIntArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView(ArrayBufferViewCtor: any, input: ArrayBufferViewInput) {\n\n    let value: any = isIteratorResult(input) ? input.value : input;\n\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) { return new ArrayBufferViewCtor(0); }\n    if (typeof value === 'string') { value = encodeUtf8(value); }\n    if (value instanceof ArrayBuffer) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof SharedArrayBuf) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof ByteBuffer) { return toArrayBufferView(ArrayBufferViewCtor, value.bytes()); }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT);\n}\n\n/** @ignore */ export const toInt8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int8Array, input);\n/** @ignore */ export const toInt16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int16Array, input);\n/** @ignore */ export const toInt32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int32Array, input);\n/** @ignore */ export const toBigInt64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigInt64Array, input);\n/** @ignore */ export const toUint8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8Array, input);\n/** @ignore */ export const toUint16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint16Array, input);\n/** @ignore */ export const toUint32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint32Array, input);\n/** @ignore */ export const toBigUint64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigUint64Array, input);\n/** @ignore */ export const toFloat32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float32Array, input);\n/** @ignore */ export const toFloat64Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArray = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewIteratorInput = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nexport function* toArrayBufferViewIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewIteratorInput) {\n\n    const wrap = function*<T>(x: T) { yield x; };\n    const buffers: Iterable<ArrayBufferViewInput> =\n                   (typeof source === 'string') ? wrap(source)\n                 : (ArrayBuffer.isView(source)) ? wrap(source)\n              : (source instanceof ArrayBuffer) ? wrap(source)\n           : (source instanceof SharedArrayBuf) ? wrap(source)\n    : !isIterable<ArrayBufferViewInput>(source) ? wrap(source) : source;\n\n    yield* pump((function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewAsyncIteratorInput = AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput> | PromiseLike<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nexport async function* toArrayBufferViewAsyncIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewAsyncIteratorInput): AsyncIterableIterator<T> {\n\n    // if a Promise, unwrap the Promise and iterate the resolved value\n    if (isPromise<ArrayBufferViewInput>(source)) {\n        return yield* toArrayBufferViewAsyncIterator(ArrayCtor, await source);\n    }\n\n    const wrap = async function*<T>(x: T) { yield await x; };\n    const emit = async function* <T extends Iterable<any>>(source: T) {\n        yield* pump((function*(it: Iterator<any>) {\n            let r: IteratorResult<any> = <any> null;\n            do {\n                r = it.next(yield r && r.value);\n            } while (!r.done);\n        })(source[Symbol.iterator]()));\n    };\n\n    const buffers: AsyncIterable<ArrayBufferViewInput> =\n                        (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n                      : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n                   : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n          : isIterable<ArrayBufferViewInput>(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n    : !isAsyncIterable<ArrayBufferViewInput>(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                                                     : source; // otherwise if AsyncIterable, use it\n\n    yield* pump((async function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = await it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.asyncIterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n\n/** @ignore */\nexport function rebaseValueOffsets(offset: number, length: number, valueOffsets: Int32Array) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\n\n/** @ignore */\nexport function compareArrayLike<T extends ArrayLike<any>>(a: T, b: T) {\n    let i = 0, n = a.length;\n    if (n !== b.length) { return false; }\n    if (n > 0) {\n        do { if (a[i] !== b[i]) { return false; } } while (++i < n);\n    }\n    return true;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport {\n    toUint8Array,\n    joinUint8Arrays,\n    ArrayBufferViewInput,\n    toUint8ArrayIterator,\n    toUint8ArrayAsyncIterator\n} from '../util/buffer';\n\nimport { ReadableDOMStreamOptions } from './interfaces';\n\n/** @ignore */\nexport default {\n    fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n        return pump(fromIterable<T>(source));\n    },\n    fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromAsyncIterable<T>(source));\n    },\n    fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromDOMStream<T>(source));\n    },\n    fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: import('stream').ReadableOptions): import('stream').Readable {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nfunction* fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayIterator(source)[Symbol.iterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength) ?\n                it.next(undefined) : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return());\n    }\n}\n\n/** @ignore */\nasync function* fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source AsyncIterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it.next(undefined)\n                : await it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (await it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (await it.return());\n    }\n}\n\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nasync function* fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done = false, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we establish the ReadableStream lock\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the reader and lock the stream\n    let it = new AdaptiveByteReader(source);\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it['read'](undefined)\n                : await it['read'](size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(toUint8Array(buffer));\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (await it['cancel'](e));\n    } finally {\n        (threw === false) ? (await it['cancel']())\n            : source['locked'] && it.releaseLock();\n    }\n}\n\n/** @ignore */\nclass AdaptiveByteReader<T extends ArrayBufferViewInput> {\n\n    private supportsBYOB: boolean;\n    private byobReader: ReadableStreamBYOBReader | null = null;\n    private defaultReader: ReadableStreamDefaultReader<T> | null = null;\n    private reader: ReadableStreamBYOBReader | ReadableStreamDefaultReader<T> | null;\n\n    constructor(private source: ReadableStream<T>) {\n        try {\n            this.supportsBYOB = !!(this.reader = this.getBYOBReader());\n        } catch (e) {\n            this.supportsBYOB = !!!(this.reader = this.getDefaultReader());\n        }\n    }\n\n    get closed(): Promise<void> {\n        return this.reader ? this.reader['closed'].catch(() => {}) : Promise.resolve();\n    }\n\n    releaseLock(): void {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = this.byobReader = this.defaultReader = null;\n    }\n\n    async cancel(reason?: any): Promise<void> {\n        const { reader, source } = this;\n        reader && (await reader['cancel'](reason).catch(() => {}));\n        source && (source['locked'] && this.releaseLock());\n    }\n\n    async read(size?: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n        if (size === 0) {\n            return { done: this.reader == null, value: new Uint8Array(0) };\n        }\n        const result = !this.supportsBYOB || typeof size !== 'number'\n            ? await this.getDefaultReader().read()\n            : await this.readFromBYOBReader(size);\n        !result.done && (result.value = toUint8Array(result as ReadableStreamReadResult<Uint8Array>));\n        return result as ReadableStreamReadResult<Uint8Array>;\n    }\n\n    private getDefaultReader() {\n        if (this.byobReader) { this.releaseLock(); }\n        if (!this.defaultReader) {\n            this.defaultReader = this.source['getReader']();\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.defaultReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.defaultReader);\n    }\n\n    private getBYOBReader() {\n        if (this.defaultReader) { this.releaseLock(); }\n        if (!this.byobReader) {\n            this.byobReader = this.source['getReader']({ mode: 'byob' });\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.byobReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.byobReader);\n    }\n\n    // This strategy plucked from the example in the streams spec:\n    // https://streams.spec.whatwg.org/#example-manual-read-bytes\n    private async readFromBYOBReader(size: number) {\n        return await readInto(this.getBYOBReader(), new ArrayBuffer(size), 0, size);\n    }\n}\n\n/** @ignore */\nasync function readInto(reader: ReadableStreamBYOBReader, buffer: ArrayBufferLike, offset: number, size: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n    if (offset >= size) {\n        return { done: false, value: new Uint8Array(buffer, 0, size) };\n    }\n    const { done, value } = await reader.read(new Uint8Array(buffer, offset, size - offset));\n    if (((offset += value.byteLength) < size) && !done) {\n        return await readInto(reader, value.buffer, offset, size);\n    }\n    return { done, value: new Uint8Array(value.buffer, 0, offset) };\n}\n\n/** @ignore */\ntype EventName = 'end' | 'error' | 'readable';\n/** @ignore */\ntype Event = [EventName, (_: any) => void, Promise<[EventName, Error | null]>];\n/** @ignore */\nconst onEvent = <T extends string>(stream: NodeJS.ReadableStream, event: T) => {\n    let handler = (_: any) => resolve([event, _]);\n    let resolve: (value?: [T, any] | PromiseLike<[T, any]>) => void;\n    return [event, handler, new Promise<[T, any]>(\n        (r) => (resolve = r) && stream['once'](event, handler)\n    )] as Event;\n};\n\n/** @ignore */\nasync function* fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n\n    let events: Event[] = [];\n    let event: EventName = 'error';\n    let done = false, err: Error | null = null;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array | Buffer | string;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we\n    // add the listener for the source stream's 'readable' event.\n    ({ cmd, size } = yield <any> null);\n\n    // ignore stdin if it's a TTY\n    if ((stream as any)['isTTY']) { return yield new Uint8Array(0); }\n\n    try {\n        // initialize the stream event handlers\n        events[0] = onEvent(stream, 'end');\n        events[1] = onEvent(stream, 'error');\n\n        do {\n            events[2] = onEvent(stream, 'readable');\n\n            // wait on the first message event from the stream\n            [event, err] = await Promise.race(events.map((x) => x[2]));\n\n            // if the stream emitted an Error, rethrow it\n            if (event === 'error') { break; }\n            if (!(done = event === 'end')) {\n                // If the size is NaN, request to read everything in the stream's internal buffer\n                if (!isFinite(size - bufferLength)) {\n                    buffer = toUint8Array(stream['read'](undefined));\n                } else {\n                    buffer = toUint8Array(stream['read'](size - bufferLength));\n                    // If the byteLength is 0, then the requested amount is more than the stream has\n                    // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                    // continue emitting readable events, so request to read everything the stream\n                    // has in its internal buffer right now.\n                    if (buffer.byteLength < (size - bufferLength)) {\n                        buffer = toUint8Array(stream['read'](undefined));\n                    }\n                }\n                // if chunk is not null or empty, push it onto the queue\n                if (buffer.byteLength > 0) {\n                    buffers.push(buffer);\n                    bufferLength += buffer.byteLength;\n                }\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } finally {\n        await cleanup(events, event === 'error' ? err : null);\n    }\n\n    function cleanup<T extends Error | null | void>(events: Event[], err?: T) {\n        buffer = buffers = <any> null;\n        return new Promise<T>(async (resolve, reject) => {\n            for (const [evt, fn] of events) {\n                stream['off'](evt, fn);\n            }\n            try {\n                // Some stream implementations don't call the destroy callback,\n                // because it's really a node-internal API. Just calling `destroy`\n                // here should be enough to conform to the ReadableStream contract\n                const destroy = (stream as any)['destroy'];\n                destroy && destroy.call(stream, err);\n                err = undefined;\n            } catch (e) { err = e || err; } finally {\n                err != null ? reject(err) : resolve();\n            }\n        });\n    }\n}\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { DataType } from './type';\nimport { Chunked } from './vector/chunked';\n\n/** @ignore */\nexport interface Clonable<R extends AbstractVector> {\n    clone(...args: any[]): R;\n}\n\n/** @ignore */\nexport interface Sliceable<R extends AbstractVector> {\n    slice(begin?: number, end?: number): R;\n}\n\n/** @ignore */\nexport interface Applicative<T extends DataType, R extends Chunked> {\n    concat(...others: Vector<T>[]): R;\n    readonly [Symbol.isConcatSpreadable]: boolean;\n}\n\nexport interface AbstractVector<T extends DataType = any>\n    extends Clonable<Vector<T>>,\n            Sliceable<Vector<T>>,\n            Applicative<T, Chunked<T>> {\n\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\nexport abstract class AbstractVector<T extends DataType = any> implements Iterable<T['TValue'] | null> {\n\n    public abstract readonly data: Data<T>;\n    public abstract readonly type: T;\n    public abstract readonly typeId: T['TType'];\n    public abstract readonly length: number;\n    public abstract readonly stride: number;\n    public abstract readonly nullCount: number;\n    public abstract readonly byteLength: number;\n    public abstract readonly numChildren: number;\n\n    public abstract readonly ArrayType: T['ArrayType'];\n\n    public abstract isValid(index: number): boolean;\n    public abstract get(index: number): T['TValue'] | null;\n    public abstract set(index: number, value: T['TValue'] | null): void;\n    public abstract indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n    public abstract [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n\n    public abstract toArray(): T['TArray'];\n    public abstract getChildAt<R extends DataType = any>(index: number): Vector<R> | null;\n}\n\nexport { AbstractVector as Vector };\n","/* tslint:disable:class-name */\n\n// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MetadataVersion {\n        /**\n         * 0.1.0\n         */\n        V1 = 0,\n\n        /**\n         * 0.2.0\n         */\n        V2 = 1,\n\n        /**\n         * 0.3.0 -> 0.7.1\n         */\n        V3 = 2,\n\n        /**\n         * >= 0.8.0\n         */\n        V4 = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum UnionMode {\n        Sparse = 0,\n        Dense = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Precision {\n        HALF = 0,\n        SINGLE = 1,\n        DOUBLE = 2\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum DateUnit {\n        DAY = 0,\n        MILLISECOND = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum TimeUnit {\n        SECOND = 0,\n        MILLISECOND = 1,\n        MICROSECOND = 2,\n        NANOSECOND = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum IntervalUnit {\n        YEAR_MONTH = 0,\n        DAY_TIME = 1\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Type {\n        NONE = 0,\n        Null = 1,\n        Int = 2,\n        FloatingPoint = 3,\n        Binary = 4,\n        Utf8 = 5,\n        Bool = 6,\n        Decimal = 7,\n        Date = 8,\n        Time = 9,\n        Timestamp = 10,\n        Interval = 11,\n        List = 12,\n        Struct_ = 13,\n        Union = 14,\n        FixedSizeBinary = 15,\n        FixedSizeList = 16,\n        Map = 17,\n        Duration = 18,\n        LargeBinary = 19,\n        LargeUtf8 = 20,\n        LargeList = 21\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Endianness {\n        Little = 0,\n        Big = 1\n    }\n}\n\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Null {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Null\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Null {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Null= obj\n         * @returns Null\n         */\n        static getRootAsNull(bb: flatbuffers.ByteBuffer, obj?: Null): Null {\n            return (obj || new Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startNull(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Null.startNull(builder);\n            return Null.endNull(builder);\n        }\n    }\n}\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Struct_ {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Struct_\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Struct_ {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Struct_= obj\n         * @returns Struct_\n         */\n        static getRootAsStruct_(bb: flatbuffers.ByteBuffer, obj?: Struct_): Struct_ {\n            return (obj || new Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startStruct_(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Struct_.startStruct_(builder);\n            return Struct_.endStruct_(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class List {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns List\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): List {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param List= obj\n         * @returns List\n         */\n        static getRootAsList(bb: flatbuffers.ByteBuffer, obj?: List): List {\n            return (obj || new List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            List.startList(builder);\n            return List.endList(builder);\n        }\n    }\n}\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeList= obj\n         * @returns LargeList\n         */\n        static getRootAsLargeList(bb: flatbuffers.ByteBuffer, obj?: LargeList): LargeList {\n            return (obj || new LargeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeList.startLargeList(builder);\n            return LargeList.endLargeList(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeList= obj\n         * @returns FixedSizeList\n         */\n        static getRootAsFixedSizeList(bb: flatbuffers.ByteBuffer, obj?: FixedSizeList): FixedSizeList {\n            return (obj || new FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of list items per value\n         *\n         * @returns number\n         */\n        listSize(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeList(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number listSize\n         */\n        static addListSize(builder: flatbuffers.Builder, listSize: number) {\n            builder.addFieldInt32(0, listSize, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeList(builder: flatbuffers.Builder, listSize: number): flatbuffers.Offset {\n            FixedSizeList.startFixedSizeList(builder);\n            FixedSizeList.addListSize(builder, listSize);\n            return FixedSizeList.endFixedSizeList(builder);\n        }\n    }\n}\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Map {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Map\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Map {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Map= obj\n         * @returns Map\n         */\n        static getRootAsMap(bb: flatbuffers.ByteBuffer, obj?: Map): Map {\n            return (obj || new Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Set to true if the keys within each value are sorted\n         *\n         * @returns boolean\n         */\n        keysSorted(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMap(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean keysSorted\n         */\n        static addKeysSorted(builder: flatbuffers.Builder, keysSorted: boolean) {\n            builder.addFieldInt8(0, +keysSorted, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMap(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createMap(builder: flatbuffers.Builder, keysSorted: boolean): flatbuffers.Offset {\n            Map.startMap(builder);\n            Map.addKeysSorted(builder, keysSorted);\n            return Map.endMap(builder);\n        }\n    }\n}\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Union {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Union\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Union {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Union= obj\n         * @returns Union\n         */\n        static getRootAsUnion(bb: flatbuffers.ByteBuffer, obj?: Union): Union {\n            return (obj || new Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.UnionMode\n         */\n        mode(): org.apache.arrow.flatbuf.UnionMode {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n        }\n\n        /**\n         * @param number index\n         * @returns number\n         */\n        typeIds(index: number): number | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n        }\n\n        /**\n         * @returns number\n         */\n        typeIdsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns Int32Array\n         */\n        typeIdsArray(): Int32Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUnion(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.UnionMode mode\n         */\n        static addMode(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode) {\n            builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeIdsOffset\n         */\n        static addTypeIds(builder: flatbuffers.Builder, typeIdsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, typeIdsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<number> data\n         * @returns flatbuffers.Offset\n         */\n        static createTypeIdsVector(builder: flatbuffers.Builder, data: number[] | Int32Array): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addInt32(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startTypeIdsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUnion(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUnion(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode, typeIdsOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Union.startUnion(builder);\n            Union.addMode(builder, mode);\n            Union.addTypeIds(builder, typeIdsOffset);\n            return Union.endUnion(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Int {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Int\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Int {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Int= obj\n         * @returns Int\n         */\n        static getRootAsInt(bb: flatbuffers.ByteBuffer, obj?: Int): Int {\n            return (obj || new Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns boolean\n         */\n        isSigned(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInt(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(0, bitWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isSigned\n         */\n        static addIsSigned(builder: flatbuffers.Builder, isSigned: boolean) {\n            builder.addFieldInt8(1, +isSigned, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInt(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInt(builder: flatbuffers.Builder, bitWidth: number, isSigned: boolean): flatbuffers.Offset {\n            Int.startInt(builder);\n            Int.addBitWidth(builder, bitWidth);\n            Int.addIsSigned(builder, isSigned);\n            return Int.endInt(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FloatingPoint {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FloatingPoint\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FloatingPoint {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FloatingPoint= obj\n         * @returns FloatingPoint\n         */\n        static getRootAsFloatingPoint(bb: flatbuffers.ByteBuffer, obj?: FloatingPoint): FloatingPoint {\n            return (obj || new FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Precision\n         */\n        precision(): org.apache.arrow.flatbuf.Precision {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFloatingPoint(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Precision precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision) {\n            builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFloatingPoint(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFloatingPoint(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision): flatbuffers.Offset {\n            FloatingPoint.startFloatingPoint(builder);\n            FloatingPoint.addPrecision(builder, precision);\n            return FloatingPoint.endFloatingPoint(builder);\n        }\n    }\n}\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Utf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Utf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Utf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Utf8= obj\n         * @returns Utf8\n         */\n        static getRootAsUtf8(bb: flatbuffers.ByteBuffer, obj?: Utf8): Utf8 {\n            return (obj || new Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Utf8.startUtf8(builder);\n            return Utf8.endUtf8(builder);\n        }\n    }\n}\n/**\n * Opaque binary data\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Binary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Binary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Binary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Binary= obj\n         * @returns Binary\n         */\n        static getRootAsBinary(bb: flatbuffers.ByteBuffer, obj?: Binary): Binary {\n            return (obj || new Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Binary.startBinary(builder);\n            return Binary.endBinary(builder);\n        }\n    }\n}\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeUtf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeUtf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeUtf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeUtf8= obj\n         * @returns LargeUtf8\n         */\n        static getRootAsLargeUtf8(bb: flatbuffers.ByteBuffer, obj?: LargeUtf8): LargeUtf8 {\n            return (obj || new LargeUtf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeUtf8.startLargeUtf8(builder);\n            return LargeUtf8.endLargeUtf8(builder);\n        }\n    }\n}\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeBinary= obj\n         * @returns LargeBinary\n         */\n        static getRootAsLargeBinary(bb: flatbuffers.ByteBuffer, obj?: LargeBinary): LargeBinary {\n            return (obj || new LargeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeBinary.startLargeBinary(builder);\n            return LargeBinary.endLargeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeBinary= obj\n         * @returns FixedSizeBinary\n         */\n        static getRootAsFixedSizeBinary(bb: flatbuffers.ByteBuffer, obj?: FixedSizeBinary): FixedSizeBinary {\n            return (obj || new FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of bytes per value\n         *\n         * @returns number\n         */\n        byteWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number byteWidth\n         */\n        static addByteWidth(builder: flatbuffers.Builder, byteWidth: number) {\n            builder.addFieldInt32(0, byteWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeBinary(builder: flatbuffers.Builder, byteWidth: number): flatbuffers.Offset {\n            FixedSizeBinary.startFixedSizeBinary(builder);\n            FixedSizeBinary.addByteWidth(builder, byteWidth);\n            return FixedSizeBinary.endFixedSizeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Bool {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Bool\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Bool {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Bool= obj\n         * @returns Bool\n         */\n        static getRootAsBool(bb: flatbuffers.ByteBuffer, obj?: Bool): Bool {\n            return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBool(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Bool.startBool(builder);\n            return Bool.endBool(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Decimal {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Decimal\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Decimal {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Decimal= obj\n         * @returns Decimal\n         */\n        static getRootAsDecimal(bb: flatbuffers.ByteBuffer, obj?: Decimal): Decimal {\n            return (obj || new Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Total number of decimal digits\n         *\n         * @returns number\n         */\n        precision(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Number of digits after the decimal point \".\"\n         *\n         * @returns number\n         */\n        scale(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDecimal(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: number) {\n            builder.addFieldInt32(0, precision, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number scale\n         */\n        static addScale(builder: flatbuffers.Builder, scale: number) {\n            builder.addFieldInt32(1, scale, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDecimal(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDecimal(builder: flatbuffers.Builder, precision: number, scale: number): flatbuffers.Offset {\n            Decimal.startDecimal(builder);\n            Decimal.addPrecision(builder, precision);\n            Decimal.addScale(builder, scale);\n            return Decimal.endDecimal(builder);\n        }\n    }\n}\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Date {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Date\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Date {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Date= obj\n         * @returns Date\n         */\n        static getRootAsDate(bb: flatbuffers.ByteBuffer, obj?: Date): Date {\n            return (obj || new Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.DateUnit\n         */\n        unit(): org.apache.arrow.flatbuf.DateUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDate(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.DateUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDate(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDate(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit): flatbuffers.Offset {\n            Date.startDate(builder);\n            Date.addUnit(builder, unit);\n            return Date.endDate(builder);\n        }\n    }\n}\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Time {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Time\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Time {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Time= obj\n         * @returns Time\n         */\n        static getRootAsTime(bb: flatbuffers.ByteBuffer, obj?: Time): Time {\n            return (obj || new Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 32;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTime(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(1, bitWidth, 32);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTime(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTime(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, bitWidth: number): flatbuffers.Offset {\n            Time.startTime(builder);\n            Time.addUnit(builder, unit);\n            Time.addBitWidth(builder, bitWidth);\n            return Time.endTime(builder);\n        }\n    }\n}\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Timestamp {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Timestamp\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Timestamp {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Timestamp= obj\n         * @returns Timestamp\n         */\n        static getRootAsTimestamp(bb: flatbuffers.ByteBuffer, obj?: Timestamp): Timestamp {\n            return (obj || new Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n        }\n\n        /**\n         * The time zone is a string indicating the name of a time zone, one of:\n         *\n         * * As used in the Olson time zone database (the \"tz database\" or\n         *   \"tzdata\"), such as \"America/New_York\"\n         * * An absolute time zone offset of the form +XX:XX or -XX:XX, such as +07:30\n         *\n         * Whether a timezone string is present indicates different semantics about\n         * the data:\n         *\n         * * If the time zone is null or equal to an empty string, the data is \"time\n         *   zone naive\" and shall be displayed *as is* to the user, not localized\n         *   to the locale of the user. This data can be though of as UTC but\n         *   without having \"UTC\" as the time zone, it is not considered to be\n         *   localized to any time zone\n         *\n         * * If the time zone is set to a valid value, values can be displayed as\n         *   \"localized\" to that time zone, even though the underlying 64-bit\n         *   integers are identical to the same data stored in UTC. Converting\n         *   between time zones is a metadata-only operation and does not change the\n         *   underlying values\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        timezone(): string | null;\n        timezone(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        timezone(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTimestamp(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset timezoneOffset\n         */\n        static addTimezone(builder: flatbuffers.Builder, timezoneOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, timezoneOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTimestamp(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTimestamp(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, timezoneOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Timestamp.startTimestamp(builder);\n            Timestamp.addUnit(builder, unit);\n            Timestamp.addTimezone(builder, timezoneOffset);\n            return Timestamp.endTimestamp(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Interval {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Interval\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Interval {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Interval= obj\n         * @returns Interval\n         */\n        static getRootAsInterval(bb: flatbuffers.ByteBuffer, obj?: Interval): Interval {\n            return (obj || new Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.IntervalUnit\n         */\n        unit(): org.apache.arrow.flatbuf.IntervalUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInterval(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.IntervalUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInterval(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInterval(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit): flatbuffers.Offset {\n            Interval.startInterval(builder);\n            Interval.addUnit(builder, unit);\n            return Interval.endInterval(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Duration {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Duration\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Duration {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Duration= obj\n         * @returns Duration\n         */\n        static getRootAsDuration(bb: flatbuffers.ByteBuffer, obj?: Duration): Duration {\n            return (obj || new Duration).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDuration(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDuration(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDuration(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit): flatbuffers.Offset {\n            Duration.startDuration(builder);\n            Duration.addUnit(builder, unit);\n            return Duration.endDuration(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class KeyValue {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns KeyValue\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): KeyValue {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param KeyValue= obj\n         * @returns KeyValue\n         */\n        static getRootAsKeyValue(bb: flatbuffers.ByteBuffer, obj?: KeyValue): KeyValue {\n            return (obj || new KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        key(): string | null;\n        key(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        key(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        value(): string | null;\n        value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        value(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startKeyValue(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset keyOffset\n         */\n        static addKey(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, keyOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset valueOffset\n         */\n        static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, valueOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endKeyValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createKeyValue(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n            KeyValue.startKeyValue(builder);\n            KeyValue.addKey(builder, keyOffset);\n            KeyValue.addValue(builder, valueOffset);\n            return KeyValue.endKeyValue(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryEncoding {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryEncoding\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryEncoding {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryEncoding= obj\n         * @returns DictionaryEncoding\n         */\n        static getRootAsDictionaryEncoding(bb: flatbuffers.ByteBuffer, obj?: DictionaryEncoding): DictionaryEncoding {\n            return (obj || new DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * The known dictionary id in the application where this data is used. In\n         * the file or streaming formats, the dictionary ids are found in the\n         * DictionaryBatch messages\n         *\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * The dictionary indices are constrained to be positive integers. If this\n         * field is null, the indices must be signed int32\n         *\n         * @param org.apache.arrow.flatbuf.Int= obj\n         * @returns org.apache.arrow.flatbuf.Int|null\n         */\n        indexType(obj?: org.apache.arrow.flatbuf.Int): org.apache.arrow.flatbuf.Int | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * By default, dictionaries are not ordered, or the order does not have\n         * semantic meaning. In some statistical, applications, dictionary-encoding\n         * is used to represent ordered categorical data, and we provide a way to\n         * preserve that metadata here\n         *\n         * @returns boolean\n         */\n        isOrdered(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryEncoding(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset indexTypeOffset\n         */\n        static addIndexType(builder: flatbuffers.Builder, indexTypeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, indexTypeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isOrdered\n         */\n        static addIsOrdered(builder: flatbuffers.Builder, isOrdered: boolean) {\n            builder.addFieldInt8(2, +isOrdered, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryEncoding(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryEncoding(builder: flatbuffers.Builder, id: flatbuffers.Long, indexTypeOffset: flatbuffers.Offset, isOrdered: boolean): flatbuffers.Offset {\n            DictionaryEncoding.startDictionaryEncoding(builder);\n            DictionaryEncoding.addId(builder, id);\n            DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n            DictionaryEncoding.addIsOrdered(builder, isOrdered);\n            return DictionaryEncoding.endDictionaryEncoding(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Field {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Field\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Field {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Field= obj\n         * @returns Field\n         */\n        static getRootAsField(bb: flatbuffers.ByteBuffer, obj?: Field): Field {\n            return (obj || new Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Name is not required, in i.e. a List\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        name(): string | null;\n        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        name(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * Whether or not this field can contain nulls. Should be true in general.\n         *\n         * @returns boolean\n         */\n        nullable(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Type\n         */\n        typeType(): org.apache.arrow.flatbuf.Type {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n        }\n\n        /**\n         * This is the type of the decoded value if the field is dictionary encoded.\n         *\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        type<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * Present only if the field is dictionary encoded.\n         *\n         * @param org.apache.arrow.flatbuf.DictionaryEncoding= obj\n         * @returns org.apache.arrow.flatbuf.DictionaryEncoding|null\n         */\n        dictionary(obj?: org.apache.arrow.flatbuf.DictionaryEncoding): org.apache.arrow.flatbuf.DictionaryEncoding | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * children apply only to nested data types like Struct, List and Union. For\n         * primitive types children will have length 0.\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        children(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        childrenLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * User-defined metadata\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startField(builder: flatbuffers.Builder) {\n            builder.startObject(7);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nameOffset\n         */\n        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, nameOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean nullable\n         */\n        static addNullable(builder: flatbuffers.Builder, nullable: boolean) {\n            builder.addFieldInt8(1, +nullable, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Type typeType\n         */\n        static addTypeType(builder: flatbuffers.Builder, typeType: org.apache.arrow.flatbuf.Type) {\n            builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeOffset\n         */\n        static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, typeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionaryOffset\n         */\n        static addDictionary(builder: flatbuffers.Builder, dictionaryOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, dictionaryOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset childrenOffset\n         */\n        static addChildren(builder: flatbuffers.Builder, childrenOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(5, childrenOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createChildrenVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startChildrenVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(6, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endField(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createField(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, nullable: boolean, typeType: org.apache.arrow.flatbuf.Type, typeOffset: flatbuffers.Offset, dictionaryOffset: flatbuffers.Offset, childrenOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Field.startField(builder);\n            Field.addName(builder, nameOffset);\n            Field.addNullable(builder, nullable);\n            Field.addTypeType(builder, typeType);\n            Field.addType(builder, typeOffset);\n            Field.addDictionary(builder, dictionaryOffset);\n            Field.addChildren(builder, childrenOffset);\n            Field.addCustomMetadata(builder, customMetadataOffset);\n            return Field.endField(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Buffer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Buffer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Buffer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The relative offset into the shared memory page where the bytes for this\n         * buffer starts\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The absolute length (in bytes) of the memory buffer. The memory is found\n         * from offset (inclusive) to offset + length (non-inclusive).\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param flatbuffers.Long length\n         * @returns flatbuffers.Offset\n         */\n        static createBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Long, length: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(length);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Schema {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Schema\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Schema {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Schema= obj\n         * @returns Schema\n         */\n        static getRootAsSchema(bb: flatbuffers.ByteBuffer, obj?: Schema): Schema {\n            return (obj || new Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * endianness of the buffer\n         * it is Little Endian by default\n         * if endianness doesn't match the underlying system then the vectors need to be converted\n         *\n         * @returns org.apache.arrow.flatbuf.Endianness\n         */\n        endianness(): org.apache.arrow.flatbuf.Endianness {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        fields(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        fieldsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startSchema(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Endianness endianness\n         */\n        static addEndianness(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness) {\n            builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset fieldsOffset\n         */\n        static addFields(builder: flatbuffers.Builder, fieldsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, fieldsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createFieldsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startFieldsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endSchema(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishSchemaBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createSchema(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness, fieldsOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Schema.startSchema(builder);\n            Schema.addEndianness(builder, endianness);\n            Schema.addFields(builder, fieldsOffset);\n            Schema.addCustomMetadata(builder, customMetadataOffset);\n            return Schema.endSchema(builder);\n        }\n    }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\nexport namespace org.apache.arrow.flatbuf {\n    export import Schema = NS7624605610262437867.org.apache.arrow.flatbuf.Schema;\n}\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MessageHeader {\n        NONE = 0,\n        Schema = 1,\n        DictionaryBatch = 2,\n        RecordBatch = 3,\n        Tensor = 4,\n        SparseTensor = 5\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values [[1, 2, 3], null, [4], [5, 6], null]\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FieldNode {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FieldNode\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FieldNode {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The number of value slots in the Arrow array at this level of a nested\n         * tree\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The number of observed nulls. Fields with null_count == 0 may choose not\n         * to write their physical validity bitmap out as a materialized buffer,\n         * instead setting the length of the bitmap buffer to 0.\n         *\n         * @returns flatbuffers.Long\n         */\n        nullCount(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         * @param flatbuffers.Long null_count\n         * @returns flatbuffers.Offset\n         */\n        static createFieldNode(builder: flatbuffers.Builder, length: flatbuffers.Long, null_count: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(null_count);\n            builder.writeInt64(length);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class RecordBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns RecordBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): RecordBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param RecordBatch= obj\n         * @returns RecordBatch\n         */\n        static getRootAsRecordBatch(bb: flatbuffers.ByteBuffer, obj?: RecordBatch): RecordBatch {\n            return (obj || new RecordBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * number of records / rows. The arrays in the batch should all have this\n         * length\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * Nodes correspond to the pre-ordered flattened logical schema\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.FieldNode= obj\n         * @returns org.apache.arrow.flatbuf.FieldNode\n         */\n        nodes(index: number, obj?: org.apache.arrow.flatbuf.FieldNode): org.apache.arrow.flatbuf.FieldNode | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.FieldNode).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        nodesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Buffers correspond to the pre-ordered flattened buffer tree\n         *\n         * The number of buffers appended to this list depends on the schema. For\n         * example, most primitive arrays will have 2 buffers, 1 for the validity\n         * bitmap and 1 for the values. For struct arrays, there will only be a\n         * single buffer for the validity (nulls) bitmap\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Buffer= obj\n         * @returns org.apache.arrow.flatbuf.Buffer\n         */\n        buffers(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Buffer): NS7624605610262437867.org.apache.arrow.flatbuf.Buffer | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Buffer).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        buffersLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startRecordBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         */\n        static addLength(builder: flatbuffers.Builder, length: flatbuffers.Long) {\n            builder.addFieldInt64(0, length, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nodesOffset\n         */\n        static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, nodesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset buffersOffset\n         */\n        static addBuffers(builder: flatbuffers.Builder, buffersOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, buffersOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startBuffersVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endRecordBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createRecordBatch(builder: flatbuffers.Builder, length: flatbuffers.Long, nodesOffset: flatbuffers.Offset, buffersOffset: flatbuffers.Offset): flatbuffers.Offset {\n            RecordBatch.startRecordBatch(builder);\n            RecordBatch.addLength(builder, length);\n            RecordBatch.addNodes(builder, nodesOffset);\n            RecordBatch.addBuffers(builder, buffersOffset);\n            return RecordBatch.endRecordBatch(builder);\n        }\n    }\n}\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryBatch= obj\n         * @returns DictionaryBatch\n         */\n        static getRootAsDictionaryBatch(bb: flatbuffers.ByteBuffer, obj?: DictionaryBatch): DictionaryBatch {\n            return (obj || new DictionaryBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.RecordBatch= obj\n         * @returns org.apache.arrow.flatbuf.RecordBatch|null\n         */\n        data(obj?: org.apache.arrow.flatbuf.RecordBatch): org.apache.arrow.flatbuf.RecordBatch | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.RecordBatch).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * If isDelta is true the values in the dictionary are to be appended to a\n         * dictionary with the indicated id\n         *\n         * @returns boolean\n         */\n        isDelta(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dataOffset\n         */\n        static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, dataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isDelta\n         */\n        static addIsDelta(builder: flatbuffers.Builder, isDelta: boolean) {\n            builder.addFieldInt8(2, +isDelta, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryBatch(builder: flatbuffers.Builder, id: flatbuffers.Long, dataOffset: flatbuffers.Offset, isDelta: boolean): flatbuffers.Offset {\n            DictionaryBatch.startDictionaryBatch(builder);\n            DictionaryBatch.addId(builder, id);\n            DictionaryBatch.addData(builder, dataOffset);\n            DictionaryBatch.addIsDelta(builder, isDelta);\n            return DictionaryBatch.endDictionaryBatch(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Message {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Message\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Message {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Message= obj\n         * @returns Message\n         */\n        static getRootAsMessage(bb: flatbuffers.ByteBuffer, obj?: Message): Message {\n            return (obj || new Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MessageHeader\n         */\n        headerType(): org.apache.arrow.flatbuf.MessageHeader {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MessageHeader.NONE;\n        }\n\n        /**\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        header<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue): NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMessage(builder: flatbuffers.Builder) {\n            builder.startObject(5);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MessageHeader headerType\n         */\n        static addHeaderType(builder: flatbuffers.Builder, headerType: org.apache.arrow.flatbuf.MessageHeader) {\n            builder.addFieldInt8(1, headerType, org.apache.arrow.flatbuf.MessageHeader.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset headerOffset\n         */\n        static addHeader(builder: flatbuffers.Builder, headerOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, headerOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long bodyLength\n         */\n        static addBodyLength(builder: flatbuffers.Builder, bodyLength: flatbuffers.Long) {\n            builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMessage(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishMessageBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createMessage(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, headerType: org.apache.arrow.flatbuf.MessageHeader, headerOffset: flatbuffers.Offset, bodyLength: flatbuffers.Long, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Message.startMessage(builder);\n            Message.addVersion(builder, version);\n            Message.addHeaderType(builder, headerType);\n            Message.addHeader(builder, headerOffset);\n            Message.addBodyLength(builder, bodyLength);\n            Message.addCustomMetadata(builder, customMetadataOffset);\n            return Message.endMessage(builder);\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport * as Schema_ from './fb/Schema';\nimport * as Message_ from './fb/Message';\n\nexport import ArrowType = Schema_.org.apache.arrow.flatbuf.Type;\nexport import DateUnit = Schema_.org.apache.arrow.flatbuf.DateUnit;\nexport import TimeUnit = Schema_.org.apache.arrow.flatbuf.TimeUnit;\nexport import Precision = Schema_.org.apache.arrow.flatbuf.Precision;\nexport import UnionMode = Schema_.org.apache.arrow.flatbuf.UnionMode;\nexport import IntervalUnit = Schema_.org.apache.arrow.flatbuf.IntervalUnit;\nexport import MessageHeader = Message_.org.apache.arrow.flatbuf.MessageHeader;\nexport import MetadataVersion = Schema_.org.apache.arrow.flatbuf.MetadataVersion;\n\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport enum Type {\n    /** The default placeholder type */\n    NONE            =  0,\n    /** A NULL type having no physical storage */\n    Null            =  1,\n    /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n    Int             =  2,\n    /** 2, 4, or 8-byte floating point value */\n    Float           =  3,\n    /** Variable-length bytes (no guarantee of UTF8-ness) */\n    Binary          =  4,\n    /** UTF8 variable-length string as List<Char> */\n    Utf8            =  5,\n    /** Boolean as 1 bit, LSB bit-packed ordering */\n    Bool            =  6,\n    /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n    Decimal         =  7,\n    /** int32_t days or int64_t milliseconds since the UNIX epoch */\n    Date            =  8,\n    /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n    Time            =  9,\n    /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n    Timestamp       = 10,\n    /** YEAR_MONTH or DAY_TIME interval in SQL style */\n    Interval        = 11,\n    /** A list of some logical data type */\n    List            = 12,\n    /** Struct of logical types */\n    Struct          = 13,\n    /** Union of logical types */\n    Union           = 14,\n    /** Fixed-size binary. Each value occupies the same number of bytes */\n    FixedSizeBinary = 15,\n    /** Fixed-size list. Each value occupies the same number of bytes */\n    FixedSizeList   = 16,\n    /** Map of named logical types */\n    Map             = 17,\n\n    /** Dictionary aka Category type */\n    Dictionary            = -1,\n    Int8                  = -2,\n    Int16                 = -3,\n    Int32                 = -4,\n    Int64                 = -5,\n    Uint8                 = -6,\n    Uint16                = -7,\n    Uint32                = -8,\n    Uint64                = -9,\n    Float16               = -10,\n    Float32               = -11,\n    Float64               = -12,\n    DateDay               = -13,\n    DateMillisecond       = -14,\n    TimestampSecond       = -15,\n    TimestampMillisecond  = -16,\n    TimestampMicrosecond  = -17,\n    TimestampNanosecond   = -18,\n    TimeSecond            = -19,\n    TimeMillisecond       = -20,\n    TimeMicrosecond       = -21,\n    TimeNanosecond        = -22,\n    DenseUnion            = -23,\n    SparseUnion           = -24,\n    IntervalDayTime       = -25,\n    IntervalYearMonth     = -26,\n}\n\nexport enum BufferType {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    OFFSET = 0,\n\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    DATA = 1,\n\n    /**\n     * Bit vector indicating if each value is null\n     */\n    VALIDITY = 2,\n\n    /**\n     * Type vector used in Union type\n     */\n    TYPE = 3\n  }\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function getBool(_data: any, _index: number, byte: number, bit: number) {\n    return (byte & 1 << bit) !== 0;\n}\n\n/** @ignore */\nexport function getBit(_data: any, _index: number, byte: number, bit: number): 0 | 1 {\n    return (byte & 1 << bit) >> bit as (0 | 1);\n}\n\n/** @ignore */\nexport function setBool(bytes: Uint8Array, index: number, value: any) {\n    return value ?\n        !!(bytes[index >> 3] |=  (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false ;\n}\n\n/** @ignore */\nexport function truncateBitmap(offset: number, length: number, bitmap: Uint8Array) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(iterateBits(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n\n/** @ignore */\nexport function packBools(values: Iterable<any>) {\n    let xs: number[] = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) { xs[i++] = byte; }\n    let b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n\n/** @ignore */\nexport function* iterateBits<T>(bytes: Uint8Array, begin: number, length: number, context: any,\n                                get: (context: any, index: number, byte: number, bit: number) => T) {\n    let bit = begin % 8;\n    let byteIndex = begin >> 3;\n    let index = 0, remaining = length;\n    for (; remaining > 0; bit = 0) {\n        let byte = bytes[byteIndex++];\n        do {\n            yield get(context, index++, byte, bit);\n        } while (--remaining > 0 && ++bit < 8);\n    }\n}\n\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data: Uint8Array, lhs: number, rhs: number): number {\n    if (rhs - lhs <= 0) { return 0; }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of iterateBits(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n        // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n        popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3)\n    );\n}\n\n/** @ignore */\nexport function popcnt_array(arr: ArrayBufferView, byteOffset?: number, byteLength?: number) {\n    let cnt = 0, pos = byteOffset! | 0;\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len =  byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n\n/** @ignore */\nexport function popcnt_uint32(uint32: number): number {\n    let i = uint32 | 0;\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { Type, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from './enum';\nimport { DataType, Float, Int, Date_, Interval, Time, Timestamp, Union, } from './type';\n\nexport abstract class Visitor {\n    public visitMany(nodes: any[], ...args: any[][]) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    public visit(...args: any[]) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    public getVisitFn(node: any, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    public visitNull            (_node: any, ..._args: any[]): any { return null; }\n    public visitBool            (_node: any, ..._args: any[]): any { return null; }\n    public visitInt             (_node: any, ..._args: any[]): any { return null; }\n    public visitFloat           (_node: any, ..._args: any[]): any { return null; }\n    public visitUtf8            (_node: any, ..._args: any[]): any { return null; }\n    public visitBinary          (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeBinary (_node: any, ..._args: any[]): any { return null; }\n    public visitDate            (_node: any, ..._args: any[]): any { return null; }\n    public visitTimestamp       (_node: any, ..._args: any[]): any { return null; }\n    public visitTime            (_node: any, ..._args: any[]): any { return null; }\n    public visitDecimal         (_node: any, ..._args: any[]): any { return null; }\n    public visitList            (_node: any, ..._args: any[]): any { return null; }\n    public visitStruct          (_node: any, ..._args: any[]): any { return null; }\n    public visitUnion           (_node: any, ..._args: any[]): any { return null; }\n    public visitDictionary      (_node: any, ..._args: any[]): any { return null; }\n    public visitInterval        (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeList   (_node: any, ..._args: any[]): any { return null; }\n    public visitMap             (_node: any, ..._args: any[]): any { return null; }\n}\n\n/** @ignore */\nfunction getVisitFn<T extends DataType>(visitor: Visitor, node: any, throwIfNotFound = true) {\n    let fn: any = null;\n    let dtype: T['TType'] = Type.NONE;\n    // tslint:disable\n    if      (node instanceof Data    ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof Vector  ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof DataType) { dtype = inferDType(node      as T); }\n    else if (typeof (dtype = node) !== 'number') { dtype = Type[node] as any as T['TType']; }\n\n    switch (dtype) {\n        case Type.Null:                 fn = visitor.visitNull; break;\n        case Type.Bool:                 fn = visitor.visitBool; break;\n        case Type.Int:                  fn = visitor.visitInt; break;\n        case Type.Int8:                 fn = visitor.visitInt8 || visitor.visitInt; break;\n        case Type.Int16:                fn = visitor.visitInt16 || visitor.visitInt; break;\n        case Type.Int32:                fn = visitor.visitInt32 || visitor.visitInt; break;\n        case Type.Int64:                fn = visitor.visitInt64 || visitor.visitInt; break;\n        case Type.Uint8:                fn = visitor.visitUint8 || visitor.visitInt; break;\n        case Type.Uint16:               fn = visitor.visitUint16 || visitor.visitInt; break;\n        case Type.Uint32:               fn = visitor.visitUint32 || visitor.visitInt; break;\n        case Type.Uint64:               fn = visitor.visitUint64 || visitor.visitInt; break;\n        case Type.Float:                fn = visitor.visitFloat; break;\n        case Type.Float16:              fn = visitor.visitFloat16 || visitor.visitFloat; break;\n        case Type.Float32:              fn = visitor.visitFloat32 || visitor.visitFloat; break;\n        case Type.Float64:              fn = visitor.visitFloat64 || visitor.visitFloat; break;\n        case Type.Utf8:                 fn = visitor.visitUtf8; break;\n        case Type.Binary:               fn = visitor.visitBinary; break;\n        case Type.FixedSizeBinary:      fn = visitor.visitFixedSizeBinary; break;\n        case Type.Date:                 fn = visitor.visitDate; break;\n        case Type.DateDay:              fn = visitor.visitDateDay || visitor.visitDate; break;\n        case Type.DateMillisecond:      fn = visitor.visitDateMillisecond || visitor.visitDate; break;\n        case Type.Timestamp:            fn = visitor.visitTimestamp; break;\n        case Type.TimestampSecond:      fn = visitor.visitTimestampSecond || visitor.visitTimestamp; break;\n        case Type.TimestampMillisecond: fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp; break;\n        case Type.TimestampMicrosecond: fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp; break;\n        case Type.TimestampNanosecond:  fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp; break;\n        case Type.Time:                 fn = visitor.visitTime; break;\n        case Type.TimeSecond:           fn = visitor.visitTimeSecond || visitor.visitTime; break;\n        case Type.TimeMillisecond:      fn = visitor.visitTimeMillisecond || visitor.visitTime; break;\n        case Type.TimeMicrosecond:      fn = visitor.visitTimeMicrosecond || visitor.visitTime; break;\n        case Type.TimeNanosecond:       fn = visitor.visitTimeNanosecond || visitor.visitTime; break;\n        case Type.Decimal:              fn = visitor.visitDecimal; break;\n        case Type.List:                 fn = visitor.visitList; break;\n        case Type.Struct:               fn = visitor.visitStruct; break;\n        case Type.Union:                fn = visitor.visitUnion; break;\n        case Type.DenseUnion:           fn = visitor.visitDenseUnion || visitor.visitUnion; break;\n        case Type.SparseUnion:          fn = visitor.visitSparseUnion || visitor.visitUnion; break;\n        case Type.Dictionary:           fn = visitor.visitDictionary; break;\n        case Type.Interval:             fn = visitor.visitInterval; break;\n        case Type.IntervalDayTime:      fn = visitor.visitIntervalDayTime || visitor.visitInterval; break;\n        case Type.IntervalYearMonth:    fn = visitor.visitIntervalYearMonth || visitor.visitInterval; break;\n        case Type.FixedSizeList:        fn = visitor.visitFixedSizeList; break;\n        case Type.Map:                  fn = visitor.visitMap; break;\n    }\n    if (typeof fn === 'function') return fn;\n    if (!throwIfNotFound) return () => null;\n    throw new Error(`Unrecognized type '${Type[dtype]}'`);\n}\n\n/** @ignore */\nfunction inferDType<T extends DataType>(type: T): Type {\n    switch (type.typeId) {\n        case Type.Null: return Type.Null;\n        case Type.Int:\n            const { bitWidth, isSigned } = (type as any as Int);\n            switch (bitWidth) {\n                case  8: return isSigned ? Type.Int8  : Type.Uint8 ;\n                case 16: return isSigned ? Type.Int16 : Type.Uint16;\n                case 32: return isSigned ? Type.Int32 : Type.Uint32;\n                case 64: return isSigned ? Type.Int64 : Type.Uint64;\n            }\n            return Type.Int;\n        case Type.Float:\n            switch((type as any as Float).precision) {\n                case Precision.HALF: return Type.Float16;\n                case Precision.SINGLE: return Type.Float32;\n                case Precision.DOUBLE: return Type.Float64;\n            }\n            return Type.Float;\n        case Type.Binary: return Type.Binary;\n        case Type.Utf8: return Type.Utf8;\n        case Type.Bool: return Type.Bool;\n        case Type.Decimal: return Type.Decimal;\n        case Type.Time:\n            switch ((type as any as Time).unit) {\n                case TimeUnit.SECOND: return Type.TimeSecond;\n                case TimeUnit.MILLISECOND: return Type.TimeMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimeMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimeNanosecond;\n            }\n            return Type.Time;\n        case Type.Timestamp:\n            switch ((type as any as Timestamp).unit) {\n                case TimeUnit.SECOND: return Type.TimestampSecond;\n                case TimeUnit.MILLISECOND: return Type.TimestampMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimestampMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimestampNanosecond;\n            }\n            return Type.Timestamp;\n        case Type.Date:\n            switch ((type as any as Date_).unit) {\n                case DateUnit.DAY: return Type.DateDay;\n                case DateUnit.MILLISECOND: return Type.DateMillisecond;\n            }\n            return Type.Date;\n        case Type.Interval:\n            switch ((type as any as Interval).unit) {\n                case IntervalUnit.DAY_TIME: return Type.IntervalDayTime;\n                case IntervalUnit.YEAR_MONTH: return Type.IntervalYearMonth;\n            }\n            return Type.Interval;\n        case Type.Map: return Type.Map;\n        case Type.List: return Type.List;\n        case Type.Struct: return Type.Struct;\n        case Type.Union:\n            switch ((type as any as Union).mode) {\n                case UnionMode.Dense: return Type.DenseUnion;\n                case UnionMode.Sparse: return Type.SparseUnion;\n            }\n            return Type.Union;\n        case Type.FixedSizeBinary: return Type.FixedSizeBinary;\n        case Type.FixedSizeList: return Type.FixedSizeList;\n        case Type.Dictionary: return Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${Type[type.typeId]}'`);\n}\n\nexport interface Visitor {\n    visitNull                  (node: any, ...args: any[]): any;\n    visitBool                  (node: any, ...args: any[]): any;\n    visitInt                   (node: any, ...args: any[]): any;\n    visitInt8?                 (node: any, ...args: any[]): any;\n    visitInt16?                (node: any, ...args: any[]): any;\n    visitInt32?                (node: any, ...args: any[]): any;\n    visitInt64?                (node: any, ...args: any[]): any;\n    visitUint8?                (node: any, ...args: any[]): any;\n    visitUint16?               (node: any, ...args: any[]): any;\n    visitUint32?               (node: any, ...args: any[]): any;\n    visitUint64?               (node: any, ...args: any[]): any;\n    visitFloat                 (node: any, ...args: any[]): any;\n    visitFloat16?              (node: any, ...args: any[]): any;\n    visitFloat32?              (node: any, ...args: any[]): any;\n    visitFloat64?              (node: any, ...args: any[]): any;\n    visitUtf8                  (node: any, ...args: any[]): any;\n    visitBinary                (node: any, ...args: any[]): any;\n    visitFixedSizeBinary       (node: any, ...args: any[]): any;\n    visitDate                  (node: any, ...args: any[]): any;\n    visitDateDay?              (node: any, ...args: any[]): any;\n    visitDateMillisecond?      (node: any, ...args: any[]): any;\n    visitTimestamp             (node: any, ...args: any[]): any;\n    visitTimestampSecond?      (node: any, ...args: any[]): any;\n    visitTimestampMillisecond? (node: any, ...args: any[]): any;\n    visitTimestampMicrosecond? (node: any, ...args: any[]): any;\n    visitTimestampNanosecond?  (node: any, ...args: any[]): any;\n    visitTime                  (node: any, ...args: any[]): any;\n    visitTimeSecond?           (node: any, ...args: any[]): any;\n    visitTimeMillisecond?      (node: any, ...args: any[]): any;\n    visitTimeMicrosecond?      (node: any, ...args: any[]): any;\n    visitTimeNanosecond?       (node: any, ...args: any[]): any;\n    visitDecimal               (node: any, ...args: any[]): any;\n    visitList                  (node: any, ...args: any[]): any;\n    visitStruct                (node: any, ...args: any[]): any;\n    visitUnion                 (node: any, ...args: any[]): any;\n    visitDenseUnion?           (node: any, ...args: any[]): any;\n    visitSparseUnion?          (node: any, ...args: any[]): any;\n    visitDictionary            (node: any, ...args: any[]): any;\n    visitInterval              (node: any, ...args: any[]): any;\n    visitIntervalDayTime?      (node: any, ...args: any[]): any;\n    visitIntervalYearMonth?    (node: any, ...args: any[]): any;\n    visitFixedSizeList         (node: any, ...args: any[]): any;\n    visitMap                   (node: any, ...args: any[]): any;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Visitor.prototype as any).visitInt8 = null;\n(Visitor.prototype as any).visitInt16 = null;\n(Visitor.prototype as any).visitInt32 = null;\n(Visitor.prototype as any).visitInt64 = null;\n(Visitor.prototype as any).visitUint8 = null;\n(Visitor.prototype as any).visitUint16 = null;\n(Visitor.prototype as any).visitUint32 = null;\n(Visitor.prototype as any).visitUint64 = null;\n(Visitor.prototype as any).visitFloat16 = null;\n(Visitor.prototype as any).visitFloat32 = null;\n(Visitor.prototype as any).visitFloat64 = null;\n(Visitor.prototype as any).visitDateDay = null;\n(Visitor.prototype as any).visitDateMillisecond = null;\n(Visitor.prototype as any).visitTimestampSecond = null;\n(Visitor.prototype as any).visitTimestampMillisecond = null;\n(Visitor.prototype as any).visitTimestampMicrosecond = null;\n(Visitor.prototype as any).visitTimestampNanosecond = null;\n(Visitor.prototype as any).visitTimeSecond = null;\n(Visitor.prototype as any).visitTimeMillisecond = null;\n(Visitor.prototype as any).visitTimeMicrosecond = null;\n(Visitor.prototype as any).visitTimeNanosecond = null;\n(Visitor.prototype as any).visitDenseUnion = null;\n(Visitor.prototype as any).visitSparseUnion = null;\n(Visitor.prototype as any).visitIntervalDayTime = null;\n(Visitor.prototype as any).visitIntervalYearMonth = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface TypeComparator extends Visitor {\n    visit<T extends DataType>(type: T, other?: DataType | null): other is T;\n    visitMany<T extends DataType>(nodes: T[], others?: DataType[] | null): boolean[];\n    getVisitFn<T extends DataType>(node: VectorType<T> |  Data<T> | T): (other?: DataType | null) => other is T;\n    visitNull                 <T extends Null>                 (type: T, other?: DataType | null): other is T;\n    visitBool                 <T extends Bool>                 (type: T, other?: DataType | null): other is T;\n    visitInt                  <T extends Int>                  (type: T, other?: DataType | null): other is T;\n    visitInt8                 <T extends Int8>                 (type: T, other?: DataType | null): other is T;\n    visitInt16                <T extends Int16>                (type: T, other?: DataType | null): other is T;\n    visitInt32                <T extends Int32>                (type: T, other?: DataType | null): other is T;\n    visitInt64                <T extends Int64>                (type: T, other?: DataType | null): other is T;\n    visitUint8                <T extends Uint8>                (type: T, other?: DataType | null): other is T;\n    visitUint16               <T extends Uint16>               (type: T, other?: DataType | null): other is T;\n    visitUint32               <T extends Uint32>               (type: T, other?: DataType | null): other is T;\n    visitUint64               <T extends Uint64>               (type: T, other?: DataType | null): other is T;\n    visitFloat                <T extends Float>                (type: T, other?: DataType | null): other is T;\n    visitFloat16              <T extends Float16>              (type: T, other?: DataType | null): other is T;\n    visitFloat32              <T extends Float32>              (type: T, other?: DataType | null): other is T;\n    visitFloat64              <T extends Float64>              (type: T, other?: DataType | null): other is T;\n    visitUtf8                 <T extends Utf8>                 (type: T, other?: DataType | null): other is T;\n    visitBinary               <T extends Binary>               (type: T, other?: DataType | null): other is T;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (type: T, other?: DataType | null): other is T;\n    visitDate                 <T extends Date_>                (type: T, other?: DataType | null): other is T;\n    visitDateDay              <T extends DateDay>              (type: T, other?: DataType | null): other is T;\n    visitDateMillisecond      <T extends DateMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestamp            <T extends Timestamp>            (type: T, other?: DataType | null): other is T;\n    visitTimestampSecond      <T extends TimestampSecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (type: T, other?: DataType | null): other is T;\n    visitTime                 <T extends Time>                 (type: T, other?: DataType | null): other is T;\n    visitTimeSecond           <T extends TimeSecond>           (type: T, other?: DataType | null): other is T;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (type: T, other?: DataType | null): other is T;\n    visitDecimal              <T extends Decimal>              (type: T, other?: DataType | null): other is T;\n    visitList                 <T extends List>                 (type: T, other?: DataType | null): other is T;\n    visitStruct               <T extends Struct>               (type: T, other?: DataType | null): other is T;\n    visitUnion                <T extends Union>                (type: T, other?: DataType | null): other is T;\n    visitDenseUnion           <T extends DenseUnion>           (type: T, other?: DataType | null): other is T;\n    visitSparseUnion          <T extends SparseUnion>          (type: T, other?: DataType | null): other is T;\n    visitDictionary           <T extends Dictionary>           (type: T, other?: DataType | null): other is T;\n    visitInterval             <T extends Interval>             (type: T, other?: DataType | null): other is T;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (type: T, other?: DataType | null): other is T;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (type: T, other?: DataType | null): other is T;\n    visitFixedSizeList        <T extends FixedSizeList>        (type: T, other?: DataType | null): other is T;\n    visitMap                  <T extends Map_>                 (type: T, other?: DataType | null): other is T;\n}\n\n/** @ignore */\nexport class TypeComparator extends Visitor {\n    compareSchemas<T extends { [key: string]: DataType }>(schema: Schema<T>, other?: Schema | null): other is Schema<T> {\n        return (schema === other) || (\n            other instanceof schema.constructor &&\n            instance.compareFields(schema.fields, other.fields)\n        );\n    }\n    compareFields<T extends { [key: string]: DataType }>(fields: Field<T[keyof T]>[], others?: Field[] | null): others is Field<T[keyof T]>[] {\n        return (fields === others) || (\n            Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => instance.compareField(f, others[i]))\n        );\n    }\n    compareField<T extends DataType = any>(field: Field<T>, other?: Field | null): other is Field<T> {\n        return (field === other) || (\n            other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            instance.visit(field.type, other.type)\n        );\n    }\n}\n\nfunction compareConstructor<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return other instanceof type.constructor;\n}\n\nfunction compareAny<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return (type === other) || compareConstructor(type, other);\n}\n\nfunction compareInt<T extends Int>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned\n    );\n}\n\nfunction compareFloat<T extends Float>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.precision === other.precision\n    );\n}\n\nfunction compareFixedSizeBinary<T extends FixedSizeBinary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth\n    );\n}\n\nfunction compareDate<T extends Date_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareTimestamp<T extends Timestamp>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone\n    );\n}\n\nfunction compareTime<T extends Time>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth\n    );\n}\n\nfunction compareList<T extends List>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareStruct<T extends Struct>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareUnion<T extends Union>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareDictionary<T extends Dictionary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        instance.visit(<any> type.indices, other.indices) &&\n        instance.visit(type.dictionary, other.dictionary)\n    );\n}\n\nfunction compareInterval<T extends Interval>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareFixedSizeList<T extends FixedSizeList>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareMap<T extends Map_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nTypeComparator.prototype.visitNull                 =             compareAny;\nTypeComparator.prototype.visitBool                 =             compareAny;\nTypeComparator.prototype.visitInt                  =             compareInt;\nTypeComparator.prototype.visitInt8                 =             compareInt;\nTypeComparator.prototype.visitInt16                =             compareInt;\nTypeComparator.prototype.visitInt32                =             compareInt;\nTypeComparator.prototype.visitInt64                =             compareInt;\nTypeComparator.prototype.visitUint8                =             compareInt;\nTypeComparator.prototype.visitUint16               =             compareInt;\nTypeComparator.prototype.visitUint32               =             compareInt;\nTypeComparator.prototype.visitUint64               =             compareInt;\nTypeComparator.prototype.visitFloat                =           compareFloat;\nTypeComparator.prototype.visitFloat16              =           compareFloat;\nTypeComparator.prototype.visitFloat32              =           compareFloat;\nTypeComparator.prototype.visitFloat64              =           compareFloat;\nTypeComparator.prototype.visitUtf8                 =             compareAny;\nTypeComparator.prototype.visitBinary               =             compareAny;\nTypeComparator.prototype.visitFixedSizeBinary      = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate                 =            compareDate;\nTypeComparator.prototype.visitDateDay              =            compareDate;\nTypeComparator.prototype.visitDateMillisecond      =            compareDate;\nTypeComparator.prototype.visitTimestamp            =       compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond      =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond  =       compareTimestamp;\nTypeComparator.prototype.visitTime                 =            compareTime;\nTypeComparator.prototype.visitTimeSecond           =            compareTime;\nTypeComparator.prototype.visitTimeMillisecond      =            compareTime;\nTypeComparator.prototype.visitTimeMicrosecond      =            compareTime;\nTypeComparator.prototype.visitTimeNanosecond       =            compareTime;\nTypeComparator.prototype.visitDecimal              =             compareAny;\nTypeComparator.prototype.visitList                 =            compareList;\nTypeComparator.prototype.visitStruct               =          compareStruct;\nTypeComparator.prototype.visitUnion                =           compareUnion;\nTypeComparator.prototype.visitDenseUnion           =           compareUnion;\nTypeComparator.prototype.visitSparseUnion          =           compareUnion;\nTypeComparator.prototype.visitDictionary           =      compareDictionary;\nTypeComparator.prototype.visitInterval             =        compareInterval;\nTypeComparator.prototype.visitIntervalDayTime      =        compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth    =        compareInterval;\nTypeComparator.prototype.visitFixedSizeList        =   compareFixedSizeList;\nTypeComparator.prototype.visitMap                  =             compareMap;\n\n/** @ignore */\nexport const instance = new TypeComparator();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport { Field } from './schema';\nimport { flatbuffers } from 'flatbuffers';\nimport { TypedArrayConstructor } from './interfaces';\nimport { VectorType as V, TypeToDataType } from './interfaces';\nimport { instance as comparer } from './visitor/typecomparator';\n\nimport Long = flatbuffers.Long;\nimport {\n    Type,\n    Precision, UnionMode,\n    DateUnit, TimeUnit, IntervalUnit\n} from './enum';\n\n/** @ignore */\nexport type TimeBitWidth = 32 | 64;\n/** @ignore */\nexport type IntBitWidth = 8 | 16 | 32 | 64;\n/** @ignore */\nexport type IsSigned = { 'true': true; 'false': false };\n/** @ignore */\nexport type RowLike<T extends { [key: string]: DataType }> =\n      ( Iterable<[string, T[keyof T]['TValue'] | null]> )\n    & { [P in keyof T]: T[P]['TValue'] | null }\n    & { get<K extends keyof T>(key: K): T[K]['TValue'] | null; }\n    & { set<K extends keyof T>(key: K, val: T[K]['TValue'] | null): void; }\n    ;\n\n/** @ignore */\nexport type MapLike<K extends DataType = any, V extends DataType = any> =\n      { [P in K['TValue']]: V['TValue'] | null }\n    & ( Map<K['TValue'], V['TValue'] | null> )\n    ;\n\nexport interface DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n    readonly TType: TType;\n    readonly TArray: any;\n    readonly TValue: any;\n    readonly ArrayType: any;\n    readonly children: Field<TChildren[keyof TChildren]>[];\n}\n\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport abstract class DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n\n    // @ts-ignore\n    public [Symbol.toStringTag]: string;\n\n    /** @nocollapse */ static            isNull (x: any): x is Null            { return x && x.typeId === Type.Null;            }\n    /** @nocollapse */ static             isInt (x: any): x is Int_            { return x && x.typeId === Type.Int;             }\n    /** @nocollapse */ static           isFloat (x: any): x is Float           { return x && x.typeId === Type.Float;           }\n    /** @nocollapse */ static          isBinary (x: any): x is Binary          { return x && x.typeId === Type.Binary;          }\n    /** @nocollapse */ static            isUtf8 (x: any): x is Utf8            { return x && x.typeId === Type.Utf8;            }\n    /** @nocollapse */ static            isBool (x: any): x is Bool            { return x && x.typeId === Type.Bool;            }\n    /** @nocollapse */ static         isDecimal (x: any): x is Decimal         { return x && x.typeId === Type.Decimal;         }\n    /** @nocollapse */ static            isDate (x: any): x is Date_           { return x && x.typeId === Type.Date;            }\n    /** @nocollapse */ static            isTime (x: any): x is Time_           { return x && x.typeId === Type.Time;            }\n    /** @nocollapse */ static       isTimestamp (x: any): x is Timestamp_      { return x && x.typeId === Type.Timestamp;       }\n    /** @nocollapse */ static        isInterval (x: any): x is Interval_       { return x && x.typeId === Type.Interval;        }\n    /** @nocollapse */ static            isList (x: any): x is List            { return x && x.typeId === Type.List;            }\n    /** @nocollapse */ static          isStruct (x: any): x is Struct          { return x && x.typeId === Type.Struct;          }\n    /** @nocollapse */ static           isUnion (x: any): x is Union_          { return x && x.typeId === Type.Union;           }\n    /** @nocollapse */ static isFixedSizeBinary (x: any): x is FixedSizeBinary { return x && x.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static   isFixedSizeList (x: any): x is FixedSizeList   { return x && x.typeId === Type.FixedSizeList;   }\n    /** @nocollapse */ static             isMap (x: any): x is Map_            { return x && x.typeId === Type.Map;             }\n    /** @nocollapse */ static      isDictionary (x: any): x is Dictionary      { return x && x.typeId === Type.Dictionary;      }\n\n    public get typeId(): TType { return <any> Type.NONE; }\n    public compareTo(other: DataType): other is TypeToDataType<TType> {\n        return comparer.visit(this, other);\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: DataType) => {\n        (<any> proto).children = null;\n        (<any> proto).ArrayType = Array;\n        return proto[Symbol.toStringTag] = 'DataType';\n    })(DataType.prototype);\n}\n\n/** @ignore */\nexport interface Null extends DataType<Type.Null> { TArray: void; TValue: null; }\n/** @ignore */\nexport class Null extends DataType<Type.Null> {\n    public toString() { return `Null`; }\n    public get typeId() { return Type.Null as Type.Null; }\n    protected static [Symbol.toStringTag] = ((proto: Null) => {\n        return proto[Symbol.toStringTag] = 'Null';\n    })(Null.prototype);\n}\n\n/** @ignore */\ntype Ints = Type.Int | Type.Int8 | Type.Int16 | Type.Int32 | Type.Int64 | Type.Uint8 | Type.Uint16 | Type.Uint32 | Type.Uint64;\n/** @ignore */\ntype IType = {\n    [Type.Int   ]: { bitWidth: IntBitWidth; isSigned: true | false; TArray: IntArray;    TValue: number | bigint | Int32Array | Uint32Array; };\n    [Type.Int8  ]: { bitWidth:           8; isSigned: true;         TArray: Int8Array;   TValue: number; };\n    [Type.Int16 ]: { bitWidth:          16; isSigned: true;         TArray: Int16Array;  TValue: number; };\n    [Type.Int32 ]: { bitWidth:          32; isSigned: true;         TArray: Int32Array;  TValue: number; };\n    [Type.Int64 ]: { bitWidth:          64; isSigned: true;         TArray: Int32Array;  TValue: bigint | Int32Array | Uint32Array; };\n    [Type.Uint8 ]: { bitWidth:           8; isSigned: false;        TArray: Uint8Array;  TValue: number; };\n    [Type.Uint16]: { bitWidth:          16; isSigned: false;        TArray: Uint16Array; TValue: number; };\n    [Type.Uint32]: { bitWidth:          32; isSigned: false;        TArray: Uint32Array; TValue: number; };\n    [Type.Uint64]: { bitWidth:          64; isSigned: false;        TArray: Uint32Array; TValue: bigint | Int32Array | Uint32Array; };\n};\n\n/** @ignore */\ninterface Int_<T extends Ints = Ints> extends DataType<T> { TArray: IType[T]['TArray']; TValue: IType[T]['TValue']; }\n/** @ignore */\nclass Int_<T extends Ints = Ints> extends DataType<T> {\n    constructor(public readonly isSigned: IType[T]['isSigned'],\n                public readonly bitWidth: IType[T]['bitWidth']) {\n        super();\n    }\n    public get typeId() { return Type.Int as T; }\n    public get ArrayType(): TypedArrayConstructor<IType[T]['TArray']> {\n        switch (this.bitWidth) {\n            case  8: return this.isSigned ?  Int8Array :  Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n    protected static [Symbol.toStringTag] = ((proto: Int_) => {\n        (<any> proto).isSigned = null;\n        (<any> proto).bitWidth = null;\n        return proto[Symbol.toStringTag] = 'Int';\n    })(Int_.prototype);\n}\n\nexport { Int_ as Int };\n\n/** @ignore */\nexport class Int8 extends Int_<Type.Int8> { constructor() { super(true, 8); } }\n/** @ignore */\nexport class Int16 extends Int_<Type.Int16> { constructor() { super(true, 16); } }\n/** @ignore */\nexport class Int32 extends Int_<Type.Int32> { constructor() { super(true, 32); } }\n/** @ignore */\nexport class Int64 extends Int_<Type.Int64> { constructor() { super(true, 64); } }\n/** @ignore */\nexport class Uint8 extends Int_<Type.Uint8> { constructor() { super(false, 8); } }\n/** @ignore */\nexport class Uint16 extends Int_<Type.Uint16> { constructor() { super(false, 16); } }\n/** @ignore */\nexport class Uint32 extends Int_<Type.Uint32> { constructor() { super(false, 32); } }\n/** @ignore */\nexport class Uint64 extends Int_<Type.Uint64> { constructor() { super(false, 64); } }\n\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n\n/** @ignore */\ntype Floats = Type.Float | Type.Float16 | Type.Float32 | Type.Float64;\n/** @ignore */\ntype FType = {\n    [Type.Float  ]: { precision: Precision;        TArray: FloatArray;    TValue: number; };\n    [Type.Float16]: { precision: Precision.HALF;   TArray: Uint16Array;   TValue: number; };\n    [Type.Float32]: { precision: Precision.SINGLE; TArray: Float32Array;  TValue: number; };\n    [Type.Float64]: { precision: Precision.DOUBLE; TArray: Float64Array;  TValue: number; };\n};\n\n/** @ignore */\nexport interface Float<T extends Floats = Floats> extends DataType<T> { TArray: FType[T]['TArray']; TValue: number; }\n/** @ignore */\nexport class Float<T extends Floats = Floats> extends DataType<T> {\n    constructor(public readonly precision: Precision) {\n        super();\n    }\n    public get typeId() { return Type.Float as T; }\n    public get ArrayType(): TypedArrayConstructor<FType[T]['TArray']> {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `Float${(this.precision << 5) || 16}`; }\n    protected static [Symbol.toStringTag] = ((proto: Float) => {\n        (<any> proto).precision = null;\n        return proto[Symbol.toStringTag] = 'Float';\n    })(Float.prototype);\n}\n\n/** @ignore */\nexport class Float16 extends Float<Type.Float16> { constructor() { super(Precision.HALF); } }\n/** @ignore */\nexport class Float32 extends Float<Type.Float32> { constructor() { super(Precision.SINGLE); } }\n/** @ignore */\nexport class Float64 extends Float<Type.Float64> { constructor() { super(Precision.DOUBLE); } }\n\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n\n/** @ignore */\nexport interface Binary extends DataType<Type.Binary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Binary extends DataType<Type.Binary> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Binary as Type.Binary; }\n    public toString() { return `Binary`; }\n    protected static [Symbol.toStringTag] = ((proto: Binary) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Binary';\n    })(Binary.prototype);\n}\n\n/** @ignore */\nexport interface Utf8 extends DataType<Type.Utf8> { TArray: Uint8Array; TValue: string; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Utf8 extends DataType<Type.Utf8> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Utf8 as Type.Utf8; }\n    public toString() { return `Utf8`; }\n    protected static [Symbol.toStringTag] = ((proto: Utf8) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Utf8';\n    })(Utf8.prototype);\n}\n\n/** @ignore */\nexport interface Bool extends DataType<Type.Bool> { TArray: Uint8Array; TValue: boolean; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Bool extends DataType<Type.Bool> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Bool as Type.Bool; }\n    public toString() { return `Bool`; }\n    protected static [Symbol.toStringTag] = ((proto: Bool) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Bool';\n    })(Bool.prototype);\n}\n\n/** @ignore */\nexport interface Decimal extends DataType<Type.Decimal> { TArray: Uint32Array; TValue: Uint32Array; ArrayType: TypedArrayConstructor<Uint32Array>; }\n/** @ignore */\nexport class Decimal extends DataType<Type.Decimal> {\n    constructor(public readonly scale: number,\n                public readonly precision: number) {\n        super();\n    }\n    public get typeId() { return Type.Decimal as Type.Decimal; }\n    public toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n    protected static [Symbol.toStringTag] = ((proto: Decimal) => {\n        (<any> proto).scale = null;\n        (<any> proto).precision = null;\n        (<any> proto).ArrayType = Uint32Array;\n        return proto[Symbol.toStringTag] = 'Decimal';\n    })(Decimal.prototype);\n}\n\n/** @ignore */\nexport type Dates = Type.Date | Type.DateDay | Type.DateMillisecond;\n/** @ignore */\nexport interface Date_<T extends Dates = Dates> extends DataType<T> { TArray: Int32Array; TValue: Date; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nexport class Date_<T extends Dates = Dates> extends DataType<T> {\n    constructor(public readonly unit: DateUnit) {\n        super();\n    }\n    public get typeId() { return Type.Date as T; }\n    public toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Date_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Date';\n    })(Date_.prototype);\n}\n\n/** @ignore */\nexport class DateDay extends Date_<Type.DateDay> { constructor() { super(DateUnit.DAY); } }\n/** @ignore */\nexport class DateMillisecond extends Date_<Type.DateMillisecond> { constructor() { super(DateUnit.MILLISECOND); } }\n\n/** @ignore */\ntype Times = Type.Time | Type.TimeSecond | Type.TimeMillisecond | Type.TimeMicrosecond | Type.TimeNanosecond;\n/** @ignore */\ntype TimesType = {\n    [Type.Time           ]: { unit: TimeUnit;             TValue: number | Int32Array };\n    [Type.TimeSecond     ]: { unit: TimeUnit.SECOND;      TValue: number;             };\n    [Type.TimeMillisecond]: { unit: TimeUnit.MILLISECOND; TValue: number;             };\n    [Type.TimeMicrosecond]: { unit: TimeUnit.MICROSECOND; TValue: Int32Array;         };\n    [Type.TimeNanosecond ]: { unit: TimeUnit.NANOSECOND;  TValue: Int32Array;         };\n};\n\n/** @ignore */\ninterface Time_<T extends Times = Times> extends DataType<T> { TArray: Int32Array; TValue: TimesType[T]['TValue']; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Time_<T extends Times = Times> extends DataType<T> {\n    constructor(public readonly unit: TimesType[T]['unit'],\n                public readonly bitWidth: TimeBitWidth) {\n        super();\n    }\n    public get typeId() { return Type.Time as T; }\n    public toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Time_) => {\n        (<any> proto).unit = null;\n        (<any> proto).bitWidth = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Time';\n    })(Time_.prototype);\n}\n\nexport { Time_ as Time };\n\n/** @ignore */\nexport class TimeSecond extends Time_<Type.TimeSecond> { constructor() { super(TimeUnit.SECOND, 32); } }\n/** @ignore */\nexport class TimeMillisecond extends Time_<Type.TimeMillisecond> { constructor() { super(TimeUnit.MILLISECOND, 32); } }\n/** @ignore */\nexport class TimeMicrosecond extends Time_<Type.TimeMicrosecond> { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n/** @ignore */\nexport class TimeNanosecond extends Time_<Type.TimeNanosecond> { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\n/** @ignore */\ntype Timestamps = Type.Timestamp | Type.TimestampSecond | Type.TimestampMillisecond | Type.TimestampMicrosecond | Type.TimestampNanosecond;\n/** @ignore */\ninterface Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> { TArray: Int32Array; TValue: number; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\n    constructor(public readonly unit: TimeUnit,\n                public readonly timezone?: string | null) {\n        super();\n    }\n    public get typeId() { return Type.Timestamp as T; }\n    public toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Timestamp_) => {\n        (<any> proto).unit = null;\n        (<any> proto).timezone = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Timestamp';\n    })(Timestamp_.prototype);\n}\n\nexport { Timestamp_ as Timestamp };\n\n/** @ignore */\nexport class TimestampSecond extends Timestamp_<Type.TimestampSecond> { constructor(timezone?: string | null) { super(TimeUnit.SECOND, timezone); } }\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_<Type.TimestampMillisecond> { constructor(timezone?: string | null) { super(TimeUnit.MILLISECOND, timezone); } }\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_<Type.TimestampMicrosecond> { constructor(timezone?: string | null) { super(TimeUnit.MICROSECOND, timezone); } }\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_<Type.TimestampNanosecond> { constructor(timezone?: string | null) { super(TimeUnit.NANOSECOND, timezone); } }\n\n/** @ignore */\ntype Intervals = Type.Interval | Type.IntervalDayTime | Type.IntervalYearMonth;\n/** @ignore */\ninterface Interval_<T extends Intervals = Intervals> extends DataType<T> { TArray: Int32Array; TValue: Int32Array; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Interval_<T extends Intervals = Intervals> extends DataType<T> {\n    constructor(public readonly unit: IntervalUnit) {\n        super();\n    }\n    public get typeId() { return Type.Interval as T; }\n    public toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Interval_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Interval';\n    })(Interval_.prototype);\n}\n\nexport { Interval_ as Interval };\n\n/** @ignore */\nexport class IntervalDayTime extends Interval_<Type.IntervalDayTime> { constructor() { super(IntervalUnit.DAY_TIME); } }\n/** @ignore */\nexport class IntervalYearMonth extends Interval_<Type.IntervalYearMonth> { constructor() { super(IntervalUnit.YEAR_MONTH); } }\n\n/** @ignore */\nexport interface List<T extends DataType = any> extends DataType<Type.List, { [0]: T }>  { TArray: IterableArrayLike<T>; TValue: V<T>; }\n/** @ignore */\nexport class List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\n    constructor(child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public readonly children: Field<T>[];\n    public get typeId() { return Type.List as Type.List; }\n    public toString() { return `List<${this.valueType}>`; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    protected static [Symbol.toStringTag] = ((proto: List) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'List';\n    })(List.prototype);\n}\n\n/** @ignore */\nexport interface Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct> { TArray: IterableArrayLike<RowLike<T>>; TValue: RowLike<T>; dataTypes: T; }\n/** @ignore */\nexport class Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct, T> {\n    public readonly children: Field<T[keyof T]>[];\n    constructor(children: Field<T[keyof T]>[]) {\n        super();\n        this.children = children;\n    }\n    public get typeId() { return Type.Struct as Type.Struct; }\n    public toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Struct) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'Struct';\n    })(Struct.prototype);\n}\n\n/** @ignore */\ntype Unions = Type.Union | Type.DenseUnion | Type.SparseUnion;\n/** @ignore */\ninterface Union_<T extends Unions = Unions> extends DataType<T> { TArray: Int8Array; TValue: any; ArrayType: TypedArrayConstructor<Int8Array>; }\n/** @ignore */\nclass Union_<T extends Unions = Unions> extends DataType<T> {\n    public readonly mode: UnionMode;\n    public readonly typeIds: Int32Array;\n    public readonly children: Field<any>[];\n    public readonly typeIdToChildIndex: { [key: number]: number };\n    constructor(mode: UnionMode,\n                typeIds: number[] | Int32Array,\n                children: Field<any>[]) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null) as { [key: number]: number });\n    }\n    public get typeId() { return Type.Union as T; }\n    public toString() { return `${this[Symbol.toStringTag]}<${\n        this.children.map((x) => `${x.type}`).join(` | `)\n    }>`; }\n    protected static [Symbol.toStringTag] = ((proto: Union_) => {\n        (<any> proto).mode = null;\n        (<any> proto).typeIds = null;\n        (<any> proto).children = null;\n        (<any> proto).typeIdToChildIndex = null;\n        (<any> proto).ArrayType = Int8Array;\n        return proto[Symbol.toStringTag] = 'Union';\n    })(Union_.prototype);\n}\n\nexport { Union_ as Union };\n\n/** @ignore */\nexport class DenseUnion extends Union_<Type.DenseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport class SparseUnion extends Union_<Type.SparseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport interface FixedSizeBinary extends DataType<Type.FixedSizeBinary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\n    constructor(public readonly byteWidth: number) {\n        super();\n    }\n    public get typeId() { return Type.FixedSizeBinary as Type.FixedSizeBinary; }\n    public toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeBinary) => {\n        (<any> proto).byteWidth = null;\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n    })(FixedSizeBinary.prototype);\n}\n\n/** @ignore */\nexport interface FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList> { TArray: IterableArrayLike<T['TArray']>; TValue: V<T>; }\n/** @ignore */\nexport class FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\n    public readonly children: Field<T>[];\n    constructor(public readonly listSize: number, child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public get typeId() { return Type.FixedSizeList as Type.FixedSizeList; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    public toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeList) => {\n        (<any> proto).children = null;\n        (<any> proto).listSize = null;\n        return proto[Symbol.toStringTag] = 'FixedSizeList';\n    })(FixedSizeList.prototype);\n}\n\n/** @ignore */\nexport interface Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    TArray: IterableArrayLike<Map<TKey['TValue'], TValue['TValue'] | null>>;\n    TChild: Struct<{ key: TKey, value: TValue }>;\n    TValue: MapLike<TKey, TValue>;\n}\n\n/** @ignore */\nexport class Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    constructor(child: Field<Struct<{ key: TKey, value: TValue }>>, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    public readonly keysSorted: boolean;\n    public readonly children: Field<Struct<{ key: TKey, value: TValue }>>[];\n    public get typeId() { return Type.Map as Type.Map; }\n    public get keyType(): TKey { return this.children[0].type.children[0].type as TKey; }\n    public get valueType(): TValue { return this.children[0].type.children[1].type as TValue; }\n    public toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Map_) => {\n        (<any> proto).children = null;\n        (<any> proto).keysSorted = null;\n        return proto[Symbol.toStringTag] = 'Map_';\n    })(Map_.prototype);\n}\n\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n\n/** @ignore */\nexport type TKeys = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32;\n\n/** @ignore */\nexport interface Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> { TArray: TKey['TArray']; TValue: T['TValue']; }\n/** @ignore */\nexport class Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\n    public readonly id: number;\n    public readonly indices: TKey;\n    public readonly dictionary: T;\n    public readonly isOrdered: boolean;\n    constructor(dictionary: T, indices: TKey, id?: Long | number | null, isOrdered?: boolean | null) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    public get typeId() { return Type.Dictionary as Type.Dictionary; }\n    public get children() { return this.dictionary.children; }\n    public get valueType(): T { return this.dictionary as T; }\n    public get ArrayType(): T['ArrayType'] { return this.dictionary.ArrayType; }\n    public toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Dictionary) => {\n        (<any> proto).id = null;\n        (<any> proto).indices = null;\n        (<any> proto).isOrdered = null;\n        (<any> proto).dictionary = null;\n        return proto[Symbol.toStringTag] = 'Dictionary';\n    })(Dictionary.prototype);\n}\n\n/** @ignore */\nexport interface IterableArrayLike<T = any> extends ArrayLike<T>, Iterable<T> {}\n/** @ignore */\nexport type FloatArray = Uint16Array | Float32Array | Float64Array;\n/** @ignore */\nexport type IntArray = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array;\n\n/** @ignore */\nexport function strideForType(type: DataType) {\n    let t: any = type;\n    switch (type.typeId) {\n        case Type.Decimal: return 4;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + (t as Date_).unit;\n        case Type.Interval: return 1 + (t as Interval_).unit;\n        case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return (t as FixedSizeList).listSize;\n        case Type.FixedSizeBinary: return (t as FixedSizeBinary).byteWidth;\n        default: return 1;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { truncateBitmap } from './util/bit';\nimport { popcnt_bit_range } from './util/bit';\nimport { BufferType, UnionMode, Type } from './enum';\nimport { DataType, SparseUnion, DenseUnion, strideForType } from './type';\nimport { toArrayBufferView, toUint8Array, toInt32Array } from './util/buffer';\nimport {\n    Dictionary,\n    Null, Int, Float,\n    Binary, Bool, Utf8, Decimal,\n    Date_, Time, Timestamp, Interval,\n    List, Struct, Union, FixedSizeBinary, FixedSizeList, Map_,\n} from './type';\n\n// When slicing, we do not know the null count of the sliced range without\n// doing some computation. To avoid doing this eagerly, we set the null count\n// to -1 (any negative number will do). When Vector.nullCount is called the\n// first time, the null count will be computed. See ARROW-33\n/** @ignore */ export type kUnknownNullCount = -1;\n/** @ignore */ export const kUnknownNullCount = -1;\n\n/** @ignore */ export type NullBuffer = Uint8Array | null | undefined;\n/** @ignore */ export type TypeIdsBuffer = Int8Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type ValueOffsetsBuffer = Int32Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type DataBuffer<T extends DataType> = T['TArray'] | ArrayLike<number> | Iterable<number> | undefined;\n\n/** @ignore */\nexport interface Buffers<T extends DataType> {\n      [BufferType.OFFSET]: Int32Array;\n        [BufferType.DATA]: T['TArray'];\n    [BufferType.VALIDITY]: Uint8Array;\n        [BufferType.TYPE]: T['TArray'];\n}\n\n/** @ignore */\nexport interface Data<T extends DataType = DataType> {\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\n/** @ignore */\nexport class Data<T extends DataType = DataType> {\n\n    public readonly type: T;\n    public readonly length: number;\n    public readonly offset: number;\n    public readonly stride: number;\n    public readonly childData: Data[];\n\n    /**\n     * The dictionary for this Vector, if any. Only used for Dictionary type.\n     */\n    public dictionary?: Vector;\n\n    public readonly values: Buffers<T>[BufferType.DATA];\n    // @ts-ignore\n    public readonly typeIds: Buffers<T>[BufferType.TYPE];\n    // @ts-ignore\n    public readonly nullBitmap: Buffers<T>[BufferType.VALIDITY];\n    // @ts-ignore\n    public readonly valueOffsets: Buffers<T>[BufferType.OFFSET];\n\n    public get typeId(): T['TType'] { return this.type.typeId; }\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n    public get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds] as Buffers<T>;\n    }\n    public get byteLength(): number {\n        let byteLength = 0;\n        let { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values       && (byteLength += values.byteLength);\n        nullBitmap   && (byteLength += nullBitmap.byteLength);\n        typeIds      && (byteLength += typeIds.byteLength);\n        return this.childData.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n\n    protected _nullCount: number | kUnknownNullCount;\n\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap: Uint8Array | undefined;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n\n    constructor(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector) {\n        this.type = type;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        this.childData = (childData || []).map((x) => x instanceof Data ? x : x.data) as Data[];\n        let buffer: Buffers<T>[keyof Buffers<T>];\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        } else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = (buffers as Buffers<T>)[0]) && (this.valueOffsets = buffer);\n                (buffer = (buffers as Buffers<T>)[1]) && (this.values = buffer);\n                (buffer = (buffers as Buffers<T>)[2]) && (this.nullBitmap = buffer);\n                (buffer = (buffers as Buffers<T>)[3]) && (this.typeIds = buffer);\n            }\n        }\n    }\n\n    public clone<R extends DataType>(type: R, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers: Buffers<R> = <any> this, childData: (Data | Vector)[] = this.childData) {\n        return new Data(type, offset, length, nullCount, buffers, childData, this.dictionary);\n    }\n\n    public slice(offset: number, length: number): Data<T> {\n        const { stride, typeId, childData } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone<T>(this.type, this.offset + offset, length, nullCount, buffers,\n            // Don't slice children if we have value offsets (the variable-width types)\n            (!childData.length || this.valueOffsets) ? childData : this._sliceChildren(childData, childStride * offset, childStride * length));\n    }\n\n    public _changeLengthAndBackfillNullBitmap(newLength: number): Data<T> {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n\n    protected _sliceBuffers(offset: number, length: number, stride: number, typeId: T['TType']): Buffers<T> {\n        let arr: any, { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n        // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n        (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n\n    protected _sliceChildren(childData: Data[], offset: number, length: number): Data[] {\n        return childData.map((child) => child.slice(offset, length));\n    }\n\n    //\n    // Convenience methods for creating Data instances for each of the Arrow Vector types\n    //\n    /** @nocollapse */\n    public static new<T extends DataType>(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector): Data<T> {\n        if (buffers instanceof Data) { buffers = buffers.buffers; } else if (!buffers) { buffers = [] as Partial<Buffers<T>>; }\n        switch (type.typeId) {\n            case Type.Null:            return <unknown> Data.Null(            <unknown> type as Null,            offset, length) as Data<T>;\n            case Type.Int:             return <unknown> Data.Int(             <unknown> type as Int,             offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Dictionary:      return <unknown> Data.Dictionary(      <unknown> type as Dictionary,      offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || [], dictionary!) as Data<T>;\n            case Type.Float:           return <unknown> Data.Float(           <unknown> type as Float,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Bool:            return <unknown> Data.Bool(            <unknown> type as Bool,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Decimal:         return <unknown> Data.Decimal(         <unknown> type as Decimal,         offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Date:            return <unknown> Data.Date(            <unknown> type as Date_,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Time:            return <unknown> Data.Time(            <unknown> type as Time,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Timestamp:       return <unknown> Data.Timestamp(       <unknown> type as Timestamp,       offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Interval:        return <unknown> Data.Interval(        <unknown> type as Interval,        offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.FixedSizeBinary: return <unknown> Data.FixedSizeBinary( <unknown> type as FixedSizeBinary, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Binary:          return <unknown> Data.Binary(          <unknown> type as Binary,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Utf8:            return <unknown> Data.Utf8(            <unknown> type as Utf8,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.List:            return <unknown> Data.List(            <unknown> type as List,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.FixedSizeList:   return <unknown> Data.FixedSizeList(   <unknown> type as FixedSizeList,   offset, length, nullCount || 0, buffers[BufferType.VALIDITY], (childData || [])[0]) as Data<T>;\n            case Type.Struct:          return <unknown> Data.Struct(          <unknown> type as Struct,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], childData || []) as Data<T>;\n            case Type.Map:             return <unknown> Data.Map(             <unknown> type as Map_,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.Union:           return <unknown> Data.Union(           <unknown> type as Union,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.TYPE] || [], buffers[BufferType.OFFSET] || childData, childData) as Data<T>;\n        }\n        throw new Error(`Unrecognized typeId ${type.typeId}`);\n    }\n\n    /** @nocollapse */\n    public static Null<T extends Null>(type: T, offset: number, length: number) {\n        return new Data(type, offset, length, 0);\n    }\n    /** @nocollapse */\n    public static Int<T extends Int>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Dictionary<T extends Dictionary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>, dictionary: Vector<T['dictionary']>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView<T['TArray']>(type.indices.ArrayType, data), toUint8Array(nullBitmap)], [], dictionary);\n    }\n    /** @nocollapse */\n    public static Float<T extends Float>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Bool<T extends Bool>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Decimal<T extends Decimal>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Date<T extends Date_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Time<T extends Time>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Timestamp<T extends Timestamp>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Interval<T extends Interval>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static FixedSizeBinary<T extends FixedSizeBinary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Binary<T extends Binary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Utf8<T extends Utf8>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static List<T extends List>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static FixedSizeList<T extends FixedSizeList>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static Struct<T extends Struct>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, children: (Data | Vector)[]) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], children);\n    }\n    /** @nocollapse */\n    public static Map<T extends Map_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: (Data | Vector)) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    public static Union<T extends SparseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, children: (Data | Vector)[], _?: any): Data<T>;\n    public static Union<T extends DenseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsets: ValueOffsetsBuffer, children: (Data | Vector)[]): Data<T>;\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]): Data<T>;\n    /** @nocollapse */\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]) {\n        const buffers = <unknown> [\n            undefined, undefined,\n            toUint8Array(nullBitmap),\n            toArrayBufferView(type.ArrayType, typeIds)\n        ] as Partial<Buffers<T>>;\n        if (type.mode === UnionMode.Sparse) {\n            return new Data(type, offset, length, nullCount, buffers, valueOffsetsOrChildren as (Data | Vector)[]);\n        }\n        buffers[BufferType.OFFSET] = toInt32Array(<ValueOffsetsBuffer> valueOffsetsOrChildren);\n        return new Data(type, offset, length, nullCount, buffers, children);\n    }\n}\n\n(Data.prototype as any).childData = Object.freeze([]);\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */ const undf = void (0);\n\n/** @ignore */\nexport function valueToString(x: any) {\n    if (x === null) { return 'null'; }\n    if (x === undf) { return 'undefined'; }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../type';\nimport { valueToString } from '../util/pretty';\nimport { BigIntAvailable } from '../util/compat';\n\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nexport function createIsValidFunction<T extends DataType = any, TNull = any>(nullValues?: ReadonlyArray<TNull>) {\n\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value: any) { return true; };\n    }\n\n    let fnBody = '';\n    let noNaNs = nullValues.filter((x) => x === x);\n\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n\n    return new Function(`x`, `${fnBody}\\nreturn true;`) as (value: T['TValue'] | TNull) => boolean;\n}\n\n/** @ignore */\nfunction valueToCase(x: any) {\n    if (typeof x !== 'bigint') {\n        return valueToString(x);\n    } else if (BigIntAvailable) {\n        return `${valueToString(x)}n`;\n    }\n    return `\"${valueToString(x)}\"`;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { memcpy } from '../util/buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from '../util/compat';\nimport {\n    TypedArray, TypedArrayConstructor,\n    BigIntArray, BigIntArrayConstructor\n} from '../interfaces';\n\n/** @ignore */ type DataValue<T> = T extends TypedArray ? number : T extends BigIntArray ? WideValue<T> : T;\n/** @ignore */ type WideValue<T extends BigIntArray> = T extends BigIntArray ? bigint | Int32Array | Uint32Array : never;\n/** @ignore */ type ArrayCtor<T extends TypedArray | BigIntArray> =\n    T extends TypedArray  ? TypedArrayConstructor<T>  :\n    T extends BigIntArray ? BigIntArrayConstructor<T> :\n    any;\n\n/** @ignore */\nconst roundLengthUpToNearest64Bytes = (len: number, BPE: number) => ((((len * BPE) + 63) & ~63) || 64) / BPE;\n/** @ignore */\nconst sliceOrExtendArray = <T extends TypedArray | BigIntArray>(arr: T, len = 0) => (\n    arr.length >= len ? arr.subarray(0, len) : memcpy(new (arr.constructor as any)(len), arr, 0)\n) as T;\n\n/** @ignore */\nexport interface BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n    readonly offset: number;\n}\n\n/** @ignore */\nexport class BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n\n    constructor(buffer: T, stride = 1) {\n        this.buffer = buffer;\n        this.stride = stride;\n        this.BYTES_PER_ELEMENT = buffer.BYTES_PER_ELEMENT;\n        this.ArrayType = buffer.constructor as ArrayCtor<T>;\n        this._resize(this.length = buffer.length / stride | 0);\n    }\n\n    public buffer: T;\n    public length: number;\n    public readonly stride: number;\n    public readonly ArrayType: ArrayCtor<T>;\n    public readonly BYTES_PER_ELEMENT: number;\n\n    public get byteLength() { return this.length * this.stride * this.BYTES_PER_ELEMENT | 0; }\n    public get reservedLength() { return this.buffer.length / this.stride; }\n    public get reservedByteLength() { return this.buffer.byteLength; }\n\n    // @ts-ignore\n    public set(index: number, value: TValue) { return this; }\n    public append(value: TValue) { return this.set(this.length, value); }\n    public reserve(extra: number) {\n        if (extra > 0) {\n            this.length += extra;\n            const stride = this.stride;\n            const length = this.length * stride;\n            const reserved = this.buffer.length;\n            if (length >= reserved) {\n                this._resize(reserved === 0\n                    ? roundLengthUpToNearest64Bytes(length * 1, this.BYTES_PER_ELEMENT)\n                    : roundLengthUpToNearest64Bytes(length * 2, this.BYTES_PER_ELEMENT)\n                );\n            }\n        }\n        return this;\n    }\n    public flush(length = this.length) {\n        length = roundLengthUpToNearest64Bytes(length * this.stride, this.BYTES_PER_ELEMENT);\n        const array = sliceOrExtendArray<T>(this.buffer, length);\n        this.clear();\n        return array;\n    }\n    public clear() {\n        this.length = 0;\n        this._resize(0);\n        return this;\n    }\n    protected _resize(newLength: number) {\n        return this.buffer = <T> memcpy(new this.ArrayType(newLength), this.buffer);\n    }\n}\n\n(BufferBuilder.prototype as any).offset = 0;\n\n/** @ignore */\nexport class DataBufferBuilder<T extends TypedArray> extends BufferBuilder<T, number> {\n    public last() { return this.get(this.length - 1); }\n    public get(index: number) { return this.buffer[index]; }\n    public set(index: number, value: number) {\n        this.reserve(index - this.length + 1);\n        this.buffer[index * this.stride] = value;\n        return this;\n    }\n}\n\n/** @ignore */\nexport class BitmapBufferBuilder extends DataBufferBuilder<Uint8Array> {\n\n    constructor(data = new Uint8Array(0)) { super(data, 1 / 8); }\n\n    public numValid = 0;\n    public get numInvalid() { return this.length - this.numValid; }\n    public get(idx: number) { return this.buffer[idx >> 3] >> idx % 8 & 1; }\n    public set(idx: number, val: number) {\n        const { buffer } = this.reserve(idx - this.length + 1);\n        const byte = idx >> 3, bit = idx % 8, cur = buffer[byte] >> bit & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `numValid`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `numValid`.\n        val ? cur === 0 && ((buffer[byte] |=  (1 << bit)), ++this.numValid)\n            : cur === 1 && ((buffer[byte] &= ~(1 << bit)), --this.numValid);\n        return this;\n    }\n    public clear() {\n        this.numValid = 0;\n        return super.clear();\n    }\n}\n\n/** @ignore */\nexport class OffsetsBufferBuilder extends DataBufferBuilder<Int32Array> {\n    constructor(data = new Int32Array(1)) { super(data, 1); }\n    public append(value: number) {\n        return this.set(this.length - 1, value);\n    }\n    public set(index: number, value: number) {\n        const offset = this.length - 1;\n        const buffer = this.reserve(index - offset + 1).buffer;\n        if (offset < index++) {\n            buffer.fill(buffer[offset], offset, index);\n        }\n        buffer[index] = buffer[index - 1] + value;\n        return this;\n    }\n    public flush(length = this.length - 1) {\n        if (length > this.length) {\n            this.set(length - 1, 0);\n        }\n        return super.flush(length + 1);\n    }\n}\n\n/** @ignore */\nexport class WideBufferBuilder<T extends TypedArray, R extends BigIntArray> extends BufferBuilder<T, DataValue<T>> {\n    // @ts-ignore\n    public buffer64: R;\n    // @ts-ignore\n    protected _ArrayType64: BigIntArrayConstructor<R>;\n    public get ArrayType64() {\n        return this._ArrayType64 || (this._ArrayType64 = <BigIntArrayConstructor<R>> (this.buffer instanceof Int32Array ? BigInt64Array : BigUint64Array));\n    }\n    public set(index: number, value: DataValue<T>) {\n        this.reserve(index - this.length + 1);\n        switch (typeof value) {\n            case 'bigint': this.buffer64[index] = value; break;\n            case 'number': this.buffer[index * this.stride] = value; break;\n            default: this.buffer.set(value as TypedArray, index * this.stride);\n        }\n        return this;\n    }\n    protected _resize(newLength: number) {\n        const data = super._resize(newLength);\n        const length = data.byteLength / (this.BYTES_PER_ELEMENT * this.stride);\n        if (BigIntAvailable) {\n            this.buffer64 = new this.ArrayType64(data.buffer, data.byteOffset, length);\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { BufferType } from './enum';\nimport { Data, Buffers } from './data';\nimport { createIsValidFunction } from './builder/valid';\nimport { BuilderType as B, VectorType as V} from './interfaces';\nimport { BufferBuilder, BitmapBufferBuilder, DataBufferBuilder, OffsetsBufferBuilder } from './builder/buffer';\nimport {\n    DataType, strideForType,\n    Float, Int, Decimal, FixedSizeBinary,\n    Date_, Time, Timestamp, Interval,\n    Utf8, Binary, List, Map_\n} from './type';\n\n/**\n * A set of options required to create a `Builder` instance for a given `DataType`.\n * @see {@link Builder}\n */\nexport interface BuilderOptions<T extends DataType = any, TNull = any> {\n    type: T;\n    nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n    children?: { [key: string]: BuilderOptions; } | BuilderOptions[];\n}\n\n/**\n * A set of options to create an Iterable or AsyncIterable `Builder` transform function.\n * @see {@link Builder.throughIterable}\n * @see {@link Builder.throughAsyncIterable}\n */\n\nexport interface IterableBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    highWaterMark?: number;\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link Builder.new `Builder.new()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = Builder.new({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nexport abstract class Builder<T extends DataType = any, TNull = any> {\n\n    /**\n     * Create a `Builder` instance based on the `type` property of the supplied `options` object.\n     * @param {BuilderOptions<T, TNull>} options An object with a required `DataType` instance\n     * and other optional parameters to be passed to the `Builder` subclass for the given `type`.\n     *\n     * @typeparam T The `DataType` of the `Builder` to create.\n     * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n     * @nocollapse\n     */\n    // @ts-ignore\n    public static new<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {}\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode<T extends DataType = any, TNull = any>(options: import('./io/node/builder').BuilderDuplexOptions<T, TNull>): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughDOM<T extends DataType = any, TNull = any>(options: import('./io/whatwg/builder').BuilderTransformOptions<T, TNull>): import('./io/whatwg/builder').BuilderTransform<T, TNull> {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    /**\n     * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `Iterable` of values to\n     * transform. When called, this function returns an Iterator of `Vector<T>`.\n     *\n     * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `Iterable` of values to\n     *          write, and returns an `Iterator` that yields Vectors according\n     *          to the chunking semantics defined in the `options` argument.\n     * @nocollapse\n     */\n    public static throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughIterable(options);\n    }\n\n    /**\n     * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `AsyncIterable` of values to\n     * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n     *\n     * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `AsyncIterable` of values\n     *          to write, and returns an `AsyncIterator` that yields Vectors\n     *          according to the chunking semantics defined in the `options`\n     *          argument.\n     * @nocollapse\n     */\n    public static throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughAsyncIterable(options);\n    }\n\n    /**\n     * Construct a builder with the given Arrow DataType with optional null values,\n     * which will be interpreted as \"null\" when set or appended to the `Builder`.\n     * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n     */\n    constructor({ 'type': type, 'nullValues': nulls }: BuilderOptions<T, TNull>) {\n        this.type = type;\n        this.children = [];\n        this.nullValues = nulls;\n        this.stride = strideForType(type);\n        this._nulls = new BitmapBufferBuilder();\n        if (nulls && nulls.length > 0) {\n            this._isValid = createIsValidFunction(nulls);\n        }\n    }\n\n    /**\n     * The Builder's `DataType` instance.\n     * @readonly\n     */\n    public type: T;\n    /**\n     * The number of values written to the `Builder` that haven't been flushed yet.\n     * @readonly\n     */\n    public length = 0;\n    /**\n     * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n     * @readonly\n     */\n    public finished = false;\n    /**\n     * The number of elements in the underlying values TypedArray that\n     * represent a single logical element, determined by this Builder's\n     * `DataType`. This is 1 for most types, but is larger when the `DataType`\n     * is `Int64`, `Uint64`, `Decimal`, `DateMillisecond`, certain variants of\n     * `Interval`, `Time`, or `Timestamp`, `FixedSizeBinary`, and `FixedSizeList`.\n     * @readonly\n     */\n    public readonly stride: number;\n    public readonly children: Builder[];\n    /**\n     * The list of null-value sentinels for this `Builder`. When one of these values\n     * is written to the `Builder` (either via `Builder.prototype.set()` or `Builder.prototype.append()`),\n     * a 1-bit is written to this Builder's underlying null BitmapBufferBuilder.\n     * @readonly\n     */\n    public readonly nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n\n    /**\n     * Flush the `Builder` and return a `Vector<T>`.\n     * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n     */\n    public toVector() { return Vector.new(this.flush()); }\n\n    public get ArrayType() { return this.type.ArrayType; }\n    public get nullCount() { return this._nulls.numInvalid; }\n    public get numChildren() { return this.children.length; }\n\n    /**\n     * @returns The aggregate length (in bytes) of the values that have been written.\n     */\n    public get byteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        this._typeIds && (size += this._typeIds.byteLength);\n        return this.children.reduce((size, child) => size + child.byteLength, size);\n    }\n\n    /**\n     * @returns The aggregate number of rows that have been reserved to write new values.\n     */\n    public get reservedLength(): number {\n        return this._nulls.reservedLength;\n    }\n\n    /**\n     * @returns The aggregate length (in bytes) that has been reserved to write new values.\n     */\n    public get reservedByteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.reservedByteLength);\n        this._values && (size += this._values.reservedByteLength);\n        this._nulls && (size += this._nulls.reservedByteLength);\n        this._typeIds && (size += this._typeIds.reservedByteLength);\n        return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n    }\n\n    // @ts-ignore\n    protected _offsets: DataBufferBuilder<Int32Array>;\n    public get valueOffsets() { return this._offsets ? this._offsets.buffer : null; }\n\n    // @ts-ignore\n    protected _values: BufferBuilder<T['TArray'], any>;\n    public get values() { return this._values ? this._values.buffer : null; }\n\n    protected _nulls: BitmapBufferBuilder;\n    public get nullBitmap() { return this._nulls ? this._nulls.buffer : null; }\n\n    // @ts-ignore\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n    public get typeIds() { return this._typeIds ? this._typeIds.buffer : null; }\n\n    // @ts-ignore\n    protected _isValid: (value: T['TValue'] | TNull) => boolean;\n    // @ts-ignore\n    protected _setValue: (inst: Builder<T>, index: number, value: T['TValue']) => void;\n\n    /**\n     * Appends a value (or null) to this `Builder`.\n     * This is equivalent to `builder.set(builder.length, value)`.\n     * @param {T['TValue'] | TNull } value The value to append.\n     */\n    public append(value: T['TValue'] | TNull) { return this.set(this.length, value); }\n\n    /**\n     * Validates whether a value is valid (true), or null (false)\n     * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n     */\n    // @ts-ignore\n    public isValid(value: T['TValue'] | TNull): boolean { return this._isValid(value); }\n\n    /**\n     * Write a value (or null-value sentinel) at the supplied index.\n     * If the value matches one of the null-value representations, a 1-bit is\n     * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n     * the null `BitmapBufferBuilder`, and the value is passed to\n     * `Builder.prototype.setValue()`.\n     * @param {number} index The index of the value to write.\n     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n     * @returns {this} The updated `Builder` instance.\n     */\n    public set(index: number, value: T['TValue'] | TNull) {\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value);\n        }\n        return this;\n    }\n\n    /**\n     * Write a value to the underlying buffers at the supplied index, bypassing\n     * the null-value check. This is a low-level method that\n     * @param {number} index\n     * @param {T['TValue'] | TNull } value\n     */\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue']) { this._setValue(this, index, value); }\n    public setValid(index: number, valid: boolean) {\n        this.length = this._nulls.set(index, +valid).length;\n        return valid;\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        throw new Error(`Cannot append children to non-nested type \"${this.type}\"`);\n    }\n\n    /**\n     * Retrieve the child `Builder` at the supplied `index`, or null if no child\n     * exists at that index.\n     * @param {number} index The index of the child `Builder` to retrieve.\n     * @returns {Builder | null} The child Builder at the supplied index or null.\n     */\n    public getChildAt<R extends DataType = any>(index: number): Builder<R> | null {\n        return this.children[index] || null;\n    }\n\n    /**\n     * Commit all the values that have been written to their underlying\n     * ArrayBuffers, including any child Builders if applicable, and reset\n     * the internal `Builder` state.\n     * @returns A `Data<T>` of the buffers and childData representing the values written.\n     */\n    public flush() {\n\n        const buffers: any = [];\n        const values =  this._values;\n        const offsets =  this._offsets;\n        const typeIds =  this._typeIds;\n        const { length, nullCount } = this;\n\n        if (typeIds) { /* Unions */\n            buffers[BufferType.TYPE] = typeIds.flush(length);\n            // DenseUnions\n            offsets && (buffers[BufferType.OFFSET] = offsets.flush(length));\n        } else if (offsets) { /* Variable-width primitives (Binary, Utf8) and Lists */\n            // Binary, Utf8\n            values && (buffers[BufferType.DATA] = values.flush(offsets.last()));\n            buffers[BufferType.OFFSET] = offsets.flush(length);\n        } else if (values) { /* Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval) */\n            buffers[BufferType.DATA] = values.flush(length);\n        }\n\n        nullCount > 0 && (buffers[BufferType.VALIDITY] = this._nulls.flush(length));\n\n        const data = Data.new<T>(\n            this.type, 0, length, nullCount, buffers as Buffers<T>,\n            this.children.map((child) => child.flush())) as Data<T>;\n\n        this.clear();\n\n        return data;\n    }\n\n    /**\n     * Finalize this `Builder`, and child builders if applicable.\n     * @returns {this} The finalized `Builder` instance.\n     */\n    public finish() {\n        this.finished = true;\n        this.children.forEach((child) => child.finish());\n        return this;\n    }\n\n    /**\n     * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n     * @returns {this} The cleared `Builder` instance.\n     */\n    public clear() {\n        this.length = 0;\n        this._offsets && (this._offsets.clear());\n        this._values && (this._values.clear());\n        this._nulls && (this._nulls.clear());\n        this._typeIds && (this._typeIds.clear());\n        this.children.forEach((child) => child.clear());\n        return this;\n    }\n}\n\n(Builder.prototype as any).length = 1;\n(Builder.prototype as any).stride = 1;\n(Builder.prototype as any).children = null;\n(Builder.prototype as any).finished = false;\n(Builder.prototype as any).nullValues = null;\n(Builder.prototype as any)._isValid = () => true;\n\n/** @ignore */\nexport abstract class FixedWidthBuilder<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval = any, TNull = any> extends Builder<T, TNull> {\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._values = new DataBufferBuilder(new this.ArrayType(0), this.stride);\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const values = this._values;\n        values.reserve(index - values.length + 1);\n        return super.setValue(index, value);\n    }\n}\n\n/** @ignore */\nexport abstract class VariableWidthBuilder<T extends Binary | Utf8 | List | Map_, TNull = any> extends Builder<T, TNull> {\n    protected _pendingLength: number = 0;\n    protected _offsets: OffsetsBufferBuilder;\n    protected _pending: Map<number, any> | undefined;\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.length);\n        this._pendingLength += value.length;\n        pending.set(index, value);\n    }\n    public setValid(index: number, isValid: boolean) {\n        if (!super.setValid(index, isValid)) {\n            (this._pending || (this._pending = new Map())).set(index, undefined);\n            return false;\n        }\n        return true;\n    }\n    public clear() {\n        this._pendingLength = 0;\n        this._pending = undefined;\n        return super.clear();\n    }\n    public flush() {\n        this._flush();\n        return super.flush();\n    }\n    public finish() {\n        this._flush();\n        return super.finish();\n    }\n    protected _flush() {\n        const pending = this._pending;\n        const pendingLength = this._pendingLength;\n        this._pendingLength = 0;\n        this._pending = undefined;\n        if (pending && pending.size > 0) {\n            this._flushPending(pending, pendingLength);\n        }\n        return this;\n    }\n    protected abstract _flushPending(pending: Map<number, any>, pendingLength: number): void;\n}\n\n/** @ignore */\ntype ThroughIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull>) => IterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function*(source: Iterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n\n/** @ignore */\ntype ThroughAsyncIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) => AsyncIterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughAsyncIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return async function* (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for await (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { BitmapBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BoolBuilder<TNull = any> extends Builder<Bool, TNull> {\n    constructor(options: BuilderOptions<Bool, TNull>) {\n        super(options);\n        this._values = new BitmapBufferBuilder();\n    }\n    public setValue(index: number, value: boolean) {\n        this._values.set(index, +value);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { Builder } from '../builder';\n\n/** @ignore */\nexport class NullBuilder<TNull = any> extends Builder<Null, TNull> {\n    // @ts-ignore\n    public setValue(index: number, value: null) {}\n    public setValid(index: number, valid: boolean) {\n        this.length = Math.max(index + 1, this.length);\n        return valid;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Date_, DateDay, DateMillisecond } from '../type';\n\n/** @ignore */\nexport class DateBuilder<T extends Date_ = Date_, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class DateDayBuilder<TNull = any> extends DateBuilder<DateDay, TNull> {}\n/** @ignore */\nexport class DateMillisecondBuilder<TNull = any> extends DateBuilder<DateMillisecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class DecimalBuilder<TNull = any> extends FixedWidthBuilder<Decimal, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { IntBuilder } from './int';\nimport { Dictionary, DataType } from '../type';\nimport { Builder, BuilderOptions } from '../builder';\n\ntype DictionaryHashFunction = (x: any) => string | number;\n\nexport interface DictionaryBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    dictionaryHashFunction?: DictionaryHashFunction;\n}\n\n/** @ignore */\nexport class DictionaryBuilder<T extends Dictionary, TNull = any> extends Builder<T, TNull> {\n\n    protected _dictionaryOffset: number;\n    protected _dictionary?: Vector<T['dictionary']>;\n    protected _keysToIndices: { [key: string]: number };\n    public readonly indices: IntBuilder<T['indices']>;\n    public readonly dictionary: Builder<T['dictionary']>;\n\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }: DictionaryBuilderOptions<T, TNull>) {\n        super({ type: new Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) as T });\n        this._nulls = <any> null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = Builder.new({ 'type': this.type.indices, 'nullValues': nulls }) as IntBuilder<T['indices']>;\n        this.dictionary = Builder.new({ 'type': this.type.dictionary, 'nullValues': null }) as Builder<T['dictionary']>;\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n\n    public get values() { return this.indices.values; }\n    public get nullCount() { return this.indices.nullCount; }\n    public get nullBitmap() { return this.indices.nullBitmap; }\n    public get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    public get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    public get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    public isValid(value: T['TValue'] | TNull) { return this.indices.isValid(value); }\n    public setValid(index: number, valid: boolean) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    public setValue(index: number, value: T['TValue']) {\n        let keysToIndices = this._keysToIndices;\n        let key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    public flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary as Vector<T['dictionary']>;\n        this.clear();\n        return data;\n    }\n    public finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    public clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    public valueToKey(val: any): string | number {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedSizeBinary } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class FixedSizeBinaryBuilder<TNull = any> extends FixedWidthBuilder<FixedSizeBinary, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nexport function uint16ToFloat64(h: number) {\n    let expo = (h & 0x7C00) >> 10;\n    let sigf = (h & 0x03FF) / 1024;\n    let sign = (-1) ** ((h & 0x8000) >> 15);\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (2 ** (expo - 15)) * (1 + sigf);\n}\n\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nexport function float64ToUint16(d: number) {\n\n    if (d !== d) { return 0x7E00; } // NaN\n\n    f64[0] = d;\n\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n\n    let sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7ff00000), sigf = 0x0000;\n\n    if (expo >= 0x40f00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        } else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000fffff) >> 10;\n        }\n    } else if (expo <= 0x3f000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000fffff);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    } else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3f000000) >> 10;\n        sigf = ((u32[1] & 0x000fffff) + 0x200) >> 10;\n    }\n\n    return sign | expo | sigf & 0xFFFF;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { float64ToUint16 } from '../util/math';\nimport { FixedWidthBuilder } from '../builder';\nimport { Float, Float16, Float32, Float64 } from '../type';\n\n/** @ignore */\nexport class FloatBuilder<T extends Float = Float, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n\n/** @ignore */\nexport class Float16Builder<TNull = any> extends FloatBuilder<Float16, TNull> {\n    public setValue(index: number, value: number) {\n        // convert JS float64 to a uint16\n        this._values.set(index, float64ToUint16(value));\n    }\n}\n\n/** @ignore */\nexport class Float32Builder<TNull = any> extends FloatBuilder<Float32, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Float64Builder<TNull = any> extends FloatBuilder<Float64, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ArrayBufferViewInput, toArrayBufferView } from './buffer';\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nexport const isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n\n/** @ignore */ type BigNumArray = IntArray | UintArray;\n/** @ignore */ type IntArray = Int8Array | Int16Array | Int32Array;\n/** @ignore */ type UintArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray;\n\n/** @ignore */\nfunction BigNum(this: any, x: any, ...xs: any) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf(toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\n\nBigNum.prototype[isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function<T extends BN<BigNumArray>>(this: T) { return `\"${bignumToString(this)}\"`; };\nBigNum.prototype.valueOf = function<T extends BN<BigNumArray>>(this: T) { return bignumToNumber(this); };\nBigNum.prototype.toString = function<T extends BN<BigNumArray>>(this: T) { return bignumToString(this); };\nBigNum.prototype[Symbol.toPrimitive] = function<T extends BN<BigNumArray>>(this: T, hint: 'string' | 'number' | 'default' = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return bignumToString(this);\n        case 'default': return bignumToBigInt(this);\n    }\n    return bignumToString(this);\n};\n\n/** @ignore */\ntype TypedArrayConstructorArgs =\n    [number | void] |\n    [Iterable<number> | Iterable<bigint>] |\n    [ArrayBufferLike, number | void, number | void] ;\n\n/** @ignore */\nfunction SignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n\nObject.setPrototypeOf(SignedBigNum.prototype,   Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype,  Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype,   BigNum.prototype, { 'constructor': SignedBigNum,   'signed': true,  'TypedArray': Int32Array,  'BigIntArray': BigInt64Array  });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\nObject.assign(DecimalBigNum.prototype,  BigNum.prototype, { 'constructor': DecimalBigNum,  'signed': true,  'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\n\n/** @ignore */\nfunction bignumToNumber<T extends BN<BigNumArray>>(bn: T) {\n    let { buffer, byteOffset, length, 'signed': signed } = bn;\n    let words = new Int32Array(buffer, byteOffset, length);\n    let number = 0, i = 0, n = words.length, hi, lo;\n    while (i < n) {\n        lo = words[i++];\n        hi = words[i++];\n        signed || (hi = hi >>> 0);\n        number += (lo >>> 0) + (hi * (i ** 32));\n    }\n    return number;\n}\n\n/** @ignore */\nexport let bignumToString: { <T extends BN<BigNumArray>>(a: T): string; };\n/** @ignore */\nexport let bignumToBigInt: { <T extends BN<BigNumArray>>(a: T): bigint; };\n\nif (!BigIntAvailable) {\n    bignumToString = decimalToString;\n    bignumToBigInt = <any> bignumToString;\n} else {\n    bignumToBigInt = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : <any>decimalToString(a));\n    bignumToString = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n\n/** @ignore */\nfunction decimalToString<T extends BN<BigNumArray>>(a: T) {\n    let digits = '';\n    let base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    let checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1, n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ? digits : `0`;\n}\n\n/** @ignore */\nexport class BN<T extends BigNumArray> {\n    /** @nocollapse */\n    public static new<T extends BigNumArray>(num: T, isSigned?: boolean): (T & BN<T>) {\n        switch (isSigned) {\n            case true: return new (<any> SignedBigNum)(num) as (T & BN<T>);\n            case false: return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case BigInt64Array:\n                return new (<any> SignedBigNum)(num) as (T & BN<T>);\n        }\n        if (num.byteLength === 16) {\n            return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n        }\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static signed<T extends IntArray>(num: T): (T & BN<T>) {\n        return new (<any> SignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static unsigned<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static decimal<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n    }\n    constructor(num: T, isSigned?: boolean) {\n        return BN.new(num, isSigned) as any;\n    }\n}\n\n/** @ignore */\nexport interface BN<T extends BigNumArray> extends TypedArrayLike<T> {\n\n    new<T extends ArrayBufferViewInput>(buffer: T, signed?: boolean): T;\n\n    readonly signed: boolean;\n    readonly TypedArray: TypedArrayConstructor<TypedArray>;\n    readonly BigIntArray: BigIntArrayConstructor<BigIntArray>;\n\n    [Symbol.toStringTag]:\n        'Int8Array'         |\n        'Int16Array'        |\n        'Int32Array'        |\n        'Uint8Array'        |\n        'Uint16Array'       |\n        'Uint32Array'       |\n        'Uint8ClampedArray';\n\n    /**\n     * Convert the bytes to their (positive) decimal representation for printing\n     */\n    toString(): string;\n    /**\n     * Down-convert the bytes to a 53-bit precision integer. Invoked by JS for\n     * arithmetic operators, like `+`. Easy (and unsafe) way to convert BN to\n     * number via `+bn_inst`\n     */\n    valueOf(): number;\n    /**\n     * Return the JSON representation of the bytes. Must be wrapped in double-quotes,\n     * so it's compatible with JSON.stringify().\n     */\n    toJSON(): string;\n    [Symbol.toPrimitive](hint?: any): number | string | bigint;\n}\n\n/** @ignore */\ninterface TypedArrayLike<T extends BigNumArray> {\n\n    readonly length: number;\n    readonly buffer: ArrayBuffer;\n    readonly byteLength: number;\n    readonly byteOffset: number;\n    readonly BYTES_PER_ELEMENT: number;\n\n    includes(searchElement: number, fromIndex?: number | undefined): boolean;\n    copyWithin(target: number, start: number, end?: number | undefined): this;\n    every(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    fill(value: number, start?: number | undefined, end?: number | undefined): this;\n    filter(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): T;\n    find(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number | undefined;\n    findIndex(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number;\n    forEach(callbackfn: (value: number, index: number, array: T) => void, thisArg?: any): void;\n    indexOf(searchElement: number, fromIndex?: number | undefined): number;\n    join(separator?: string | undefined): string;\n    lastIndexOf(searchElement: number, fromIndex?: number | undefined): number;\n    map(callbackfn: (value: number, index: number, array: T) => number, thisArg?: any): T;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reverse(): T;\n    set(array: ArrayLike<number>, offset?: number | undefined): void;\n    slice(start?: number | undefined, end?: number | undefined): T;\n    some(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    sort(compareFn?: ((a: number, b: number) => number) | undefined): this;\n    subarray(begin: number, end?: number | undefined): T;\n    toLocaleString(): string;\n    entries(): IterableIterator<[number, number]>;\n    keys(): IterableIterator<number>;\n    values(): IterableIterator<number>;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder, BuilderOptions } from '../builder';\nimport { Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64 } from '../type';\n\n/** @ignore */\nexport class IntBuilder<T extends Int = Int, TNull = any> extends FixedWidthBuilder<T, TNull> {\n    public setValue(index: number, value: T['TValue']) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Int8Builder<TNull = any> extends IntBuilder<Int8, TNull> {}\n/** @ignore */\nexport class Int16Builder<TNull = any> extends IntBuilder<Int16, TNull> {}\n/** @ignore */\nexport class Int32Builder<TNull = any> extends IntBuilder<Int32, TNull> {}\n/** @ignore */\nexport class Int64Builder<TNull = any> extends IntBuilder<Int64, TNull> {\n    protected _values: WideBufferBuilder<Int32Array, BigInt64Array>;\n    constructor(options: BuilderOptions<Int64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Int32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\n/** @ignore */\nexport class Uint8Builder<TNull = any> extends IntBuilder<Uint8, TNull> {}\n/** @ignore */\nexport class Uint16Builder<TNull = any> extends IntBuilder<Uint16, TNull> {}\n/** @ignore */\nexport class Uint32Builder<TNull = any> extends IntBuilder<Uint32, TNull> {}\n/** @ignore */\nexport class Uint64Builder<TNull = any> extends IntBuilder<Uint64, TNull> {\n    protected _values: WideBufferBuilder<Uint32Array, BigUint64Array>;\n    constructor(options: BuilderOptions<Uint64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Uint32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\nconst toBigInt = ((memo: any) => (value: any) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': BigInt64Array });\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeBuilder<T extends Time = Time, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimeSecondBuilder<TNull = any> extends TimeBuilder<TimeSecond, TNull> {}\n/** @ignore */\nexport class TimeMillisecondBuilder<TNull = any> extends TimeBuilder<TimeMillisecond, TNull> {}\n/** @ignore */\nexport class TimeMicrosecondBuilder<TNull = any> extends TimeBuilder<TimeMicrosecond, TNull> {}\n/** @ignore */\nexport class TimeNanosecondBuilder<TNull = any> extends TimeBuilder<TimeNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampBuilder<T extends Timestamp = Timestamp, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimestampSecondBuilder<TNull = any> extends TimestampBuilder<TimestampSecond, TNull> {}\n/** @ignore */\nexport class TimestampMillisecondBuilder<TNull = any> extends TimestampBuilder<TimestampMillisecond, TNull> {}\n/** @ignore */\nexport class TimestampMicrosecondBuilder<TNull = any> extends TimestampBuilder<TimestampMicrosecond, TNull> {}\n/** @ignore */\nexport class TimestampNanosecondBuilder<TNull = any> extends TimestampBuilder<TimestampNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalBuilder<T extends Interval = Interval, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class IntervalDayTimeBuilder<TNull = any> extends IntervalBuilder<IntervalDayTime, TNull> {}\n/** @ignore */\nexport class IntervalYearMonthBuilder<TNull = any> extends IntervalBuilder<IntervalYearMonth, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Binary } from '../type';\nimport { toUint8Array } from '../util/buffer';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BinaryBuilder<TNull = any> extends VariableWidthBuilder<Binary, TNull> {\n    constructor(opts: BuilderOptions<Binary, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: Uint8Array) {\n        return super.setValue(index, toUint8Array(value));\n    }\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number) {\n        const offsets = this._offsets;\n        const data = this._values.reserve(pendingLength).buffer;\n        let index = 0, length = 0, offset = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                length = value.length;\n                data.set(value, offset);\n                offsets.set(index, length);\n                offset += length;\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Utf8 } from '../type';\nimport { encodeUtf8 } from '../util/utf8';\nimport { BinaryBuilder } from './binary';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class Utf8Builder<TNull = any> extends VariableWidthBuilder<Utf8, TNull> {\n    constructor(opts: BuilderOptions<Utf8, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: string) {\n        return super.setValue(index, encodeUtf8(value) as any);\n    }\n    // @ts-ignore\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number): void {}\n}\n\n(Utf8Builder.prototype as any)._flushPending = (BinaryBuilder.prototype as any)._flushPending;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\n\n/** @ignore */\nexport class Run<T extends DataType = any, TNull = any> {\n    // @ts-ignore\n    protected _values: ArrayLike<T['TValue'] | TNull>;\n    public get length() { return this._values.length; }\n    public get(index: number) { return this._values[index]; }\n    public clear() { this._values = <any> null; return this; }\n    public bind(values: Vector<T> | ArrayLike<T['TValue'] | TNull>) {\n        if (values instanceof Vector) {\n            return values;\n        }\n        this._values = values;\n        return this as any;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { StructVector } from './struct';\nimport { valueToString } from '../util/pretty';\nimport { DataType, Struct, RowLike } from '../type';\n\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\n\nabstract class Row<K extends PropertyKey = any, V = any> implements Map<K, V> {\n\n    public readonly size: number;\n    public readonly [Symbol.toStringTag]: string;\n\n    protected [kRowIndex]: number;\n    protected [kParent]: Vector<Struct>;\n    protected [kKeyToIdx]: Map<K, number>;\n    protected [kIdxToVal]: V[];\n\n    constructor(parent: Vector<Struct>, numKeys: number) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n\n    public abstract keys(): IterableIterator<K>;\n    public abstract values(): IterableIterator<V>;\n    public abstract getKey(idx: number): K;\n    public abstract getIndex(key: K): number;\n    public abstract getValue(idx: number): V;\n    public abstract setValue(idx: number, val: V): void;\n\n    public entries() { return this[Symbol.iterator](); }\n\n    public has(key: K) { return this.get(key) !== undefined; }\n\n    public get(key: K) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            } else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n\n    public set(key: K, val: V) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = <any> this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n\n    public clear(): void { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n\n    public delete(_: K): boolean { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n\n    public *[Symbol.iterator](): IterableIterator<[K, V]> {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n\n    public forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v: V, k: K, m: Map<K, V>) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n\n    public toArray() { return [...this.values()]; }\n    public toJSON() {\n        const obj = {} as any;\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n\n    public inspect() { return this.toString(); }\n    public [kCustomInspect]() { return this.toString(); }\n    public toString() {\n        const str: string[] = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: Row) => {\n        Object.defineProperties(proto, {\n            'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n            [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n            [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n        });\n        return (proto as any)[Symbol.toStringTag] = 'Row';\n    })(Row.prototype);\n}\n\nexport class MapRow<K extends DataType = any, V extends DataType = any> extends Row<K['TValue'], V['TValue'] | null> {\n    constructor(slice: Vector<Struct<{ key: K, value: V }>>) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    public keys() {\n        return this[kParent].getChildAt(0)![Symbol.iterator]();\n    }\n    public values() {\n        return this[kParent].getChildAt(1)![Symbol.iterator]();\n    }\n    public getKey(idx: number): K['TValue'] {\n        return this[kParent].getChildAt(0)!.get(idx);\n    }\n    public getIndex(key: K['TValue']): number {\n        return this[kParent].getChildAt(0)!.indexOf(key);\n    }\n    public getValue(index: number): V['TValue'] | null {\n        return this[kParent].getChildAt(1)!.get(index);\n    }\n    public setValue(index: number, value: V['TValue'] | null): void {\n        this[kParent].getChildAt(1)!.set(index, value);\n    }\n}\n\nexport class StructRow<T extends { [key: string]: DataType } = any> extends Row<keyof T, T[keyof T]['TValue'] | null> {\n    constructor(parent: StructVector<T>) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    public *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name as keyof T;\n        }\n    }\n    public *values() {\n        for (const field of this[kParent].type.children) {\n            yield (this as RowLike<T>)[field.name];\n        }\n    }\n    public getKey(idx: number): keyof T {\n        return this[kParent].type.children[idx].name as keyof T;\n    }\n    public getIndex(key: keyof T): number {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    public getValue(index: number): T[keyof T]['TValue'] | null {\n        return this[kParent].getChildAt(index)!.get(this[kRowIndex]);\n    }\n    public setValue(index: number, value: T[keyof T]['TValue'] | null): void {\n        return this[kParent].getChildAt(index)!.set(this[kRowIndex], value);\n    }\n}\n\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null as any, set: null as any };\n    return <T extends Row>(row: T) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key: any) => function(this: T) { return this.get(key); };\n        const setter = (key: any) => function(this: T, val: any) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler: ProxyHandler<Row> = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row: Row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row: Row, key: PropertyKey) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row: Row, key: PropertyKey, receiver: any) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row: Row, key: PropertyKey, val: any, receiver: any) {\n            switch (key) {\n                case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return <T extends Row>(row: T) => new Proxy(row, RowProxyHandler) as T;\n})();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n\n/** @ignore */\ntype RangeLike = { length: number; stride?: number };\n/** @ignore */\ntype ClampThen<T extends RangeLike> = (source: T, index: number) => any;\n/** @ignore */\ntype ClampRangeThen<T extends RangeLike> = (source: T, offset: number, length: number) => any;\n\nexport function clampIndex<T extends RangeLike>(source: T, index: number): number;\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then?: N) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n\n/** @ignore */\nlet tmp: number;\nexport function clampRange<T extends RangeLike>(source: T, begin: number | undefined, end: number | undefined): [number, number];\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then?: N) {\n\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    let { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n     // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\n\nconst big0 = BigIntAvailable ? BigInt(0) : 0;\nconst isNaNFast = (value: any) => value !== value;\n\n/** @ignore */\nexport function createElementComparator(search: any) {\n    let typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return typeofSearch !== 'bigint'\n            ? (value: any) => value === search\n            : (value: any) => (big0 + value) === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value: any) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value: any) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) { return creatMapComparator(search); }\n    // Compare Array-likes\n    if (Array.isArray(search)) { return createArrayLikeComparator(search); }\n    // Compare Vectors\n    if (search instanceof Vector) { return createVectorComparator(search); }\n    // Compare non-empty Objects\n    return createObjectComparator(search);\n}\n\n/** @ignore */\nfunction createArrayLikeComparator(lhs: ArrayLike<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction creatMapComparator(lhs: Map<any, any>) {\n    let i = -1;\n    const comparators = [] as ((x: any) => boolean)[];\n    lhs.forEach((v) => comparators[++i] = createElementComparator(v));\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createVectorComparator(lhs: Vector<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createObjectComparator(lhs: any) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (keys.length === 0) { return () => false; }\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\n\nfunction createSubElementsComparator(comparators: ((x: any) => boolean)[], keys?: Iterable<string>) {\n    return (rhs: any) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n            case MapRow:\n            case StructRow:\n                return compareObject(comparators, rhs, rhs.keys());\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\n\nfunction compareArray(comparators: ((x: any) => boolean)[], arr: any[]) {\n    const n = comparators.length;\n    if (arr.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) { return false; }\n    }\n    return true;\n}\n\nfunction compareVector(comparators: ((x: any) => boolean)[], vec: Vector) {\n    const n = comparators.length;\n    if (vec.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) { return false; }\n    }\n    return true;\n}\n\nfunction compareObject(comparators: ((x: any) => boolean)[], obj: Map<any, any>, keys: Iterable<string>) {\n\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n\n    let i = 0;\n    let n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done;\n         ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { clampRange } from '../util/vector';\nimport { DataType, Dictionary } from '../type';\nimport { selectChunkArgs } from '../util/args';\nimport { DictionaryVector } from './dictionary';\nimport { AbstractVector, Vector } from '../vector';\nimport { Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\ntype ChunkedDict<T extends DataType> = T extends Dictionary ? Vector<T['dictionary']> : null | never;\n/** @ignore */\ntype ChunkedKeys<T extends DataType> = T extends Dictionary ? Vector<T['indices']> | Chunked<T['indices']> : null | never;\n\n/** @ignore */\nexport type SearchContinuation<T extends Chunked> = (column: T, chunkIndex: number, valueIndex: number) => any;\n\n/** @ignore */\nexport class Chunked<T extends DataType = any>\n    extends AbstractVector<T>\n    implements Clonable<Chunked<T>>,\n               Sliceable<Chunked<T>>,\n               Applicative<T, Chunked<T>> {\n\n    /** @nocollapse */\n    public static flatten<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        return selectChunkArgs<Vector<T>>(Vector, vectors);\n    }\n\n    /** @nocollapse */\n    public static concat<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        const chunks = Chunked.flatten<T>(...vectors);\n        return new Chunked<T>(chunks[0].type, chunks);\n    }\n\n    protected _type: T;\n    protected _length: number;\n    protected _chunks: Vector<T>[];\n    protected _numChildren: number;\n    protected _children?: Chunked[];\n    protected _nullCount: number = -1;\n    protected _chunkOffsets: Uint32Array;\n\n    constructor(type: T, chunks: Vector<T>[] = [], offsets = calculateOffsets(chunks)) {\n        super();\n        this._type = type;\n        this._chunks = chunks;\n        this._chunkOffsets = offsets;\n        this._length = offsets[offsets.length - 1];\n        this._numChildren = (this._type.children || []).length;\n    }\n\n    public get type() { return this._type; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get typeId(): T['TType'] { return this._type.typeId; }\n    public get VectorName() { return `Chunked<${this._type}>`; }\n    public get data(): Data<T> {\n        return this._chunks[0] ? this._chunks[0].data : <any> null;\n    }\n\n    public get ArrayType() { return this._type.ArrayType; }\n    public get numChildren() { return this._numChildren; }\n    public get stride() { return this._chunks[0] ? this._chunks[0].stride : 1; }\n    public get byteLength(): number {\n        return this._chunks.reduce((byteLength, chunk) => byteLength + chunk.byteLength, 0);\n    }\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        if (nullCount < 0) {\n            this._nullCount = nullCount = this._chunks.reduce((x, { nullCount }) => x + nullCount, 0);\n        }\n        return nullCount;\n    }\n\n    protected _indices?: ChunkedKeys<T>;\n    public get indices(): ChunkedKeys<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            if (!this._indices) {\n                const chunks = (<any> this._chunks) as DictionaryVector<T, any>[];\n                this._indices = (chunks.length === 1\n                    ? chunks[0].indices\n                    : Chunked.concat(...chunks.map((x) => x.indices))) as ChunkedKeys<T>;\n            }\n            return this._indices;\n        }\n        return null;\n    }\n    public get dictionary(): ChunkedDict<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            return this._chunks[this._chunks.length - 1].data.dictionary as ChunkedDict<T>;\n        }\n        return null;\n    }\n\n    public *[Symbol.iterator](): IterableIterator<T['TValue'] | null> {\n        for (const chunk of this._chunks) {\n            yield* chunk;\n        }\n    }\n\n    public clone(chunks = this._chunks): Chunked<T> {\n        return new Chunked(this._type, chunks);\n    }\n\n    public concat(...others: Vector<T>[]): Chunked<T> {\n        return this.clone(Chunked.flatten(this, ...others));\n    }\n\n    public slice(begin?: number, end?: number): Chunked<T> {\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Chunked<R> | null {\n\n        if (index < 0 || index >= this._numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let child: Chunked<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (child = columns[index]) { return child; }\n        if (field = ((this._type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Chunked<R>(field.type, chunks));\n            }\n        }\n\n        return null;\n    }\n\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        let idx = index;\n        // binary search to find the child vector and value indices\n        let offsets = this._chunkOffsets, rhs = offsets.length - 1;\n        // return early if out of bounds, or if there's just one child\n        if (idx < 0            ) { return null; }\n        if (idx >= offsets[rhs]) { return null; }\n        if (rhs <= 1           ) { return then ? then(this, 0, idx) : [0, idx]; }\n        let lhs = 0, pos = 0, mid = 0;\n        do {\n            if (lhs + 1 === rhs) {\n                return then ? then(this, lhs, idx - pos) : [lhs, idx - pos];\n            }\n            mid = lhs + ((rhs - lhs) / 2) | 0;\n            idx >= offsets[mid] ? (lhs = mid) : (rhs = mid);\n        } while (idx < offsets[rhs] && idx >= (pos = offsets[lhs]));\n        return null;\n    }\n\n    public isValid(index: number): boolean {\n        return !!this.search(index, this.isValidInternal);\n    }\n\n    public get(index: number): T['TValue'] | null {\n        return this.search(index, this.getInternal);\n    }\n\n    public set(index: number, value: T['TValue'] | null): void {\n        this.search(index, ({ chunks }, i, j) => chunks[i].set(j, value));\n    }\n\n    public indexOf(element: T['TValue'], offset?: number): number {\n        if (offset && typeof offset === 'number') {\n            return this.search(offset, (self, i, j) => this.indexOfInternal(self, i, j, element))!;\n        }\n        return this.indexOfInternal(this, 0, Math.max(0, offset || 0), element);\n    }\n\n    public toArray(): T['TArray'] {\n        const { chunks } = this;\n        const n = chunks.length;\n        let ArrayType: any = this._type.ArrayType;\n        if (n <= 0) { return new ArrayType(0); }\n        if (n <= 1) { return chunks[0].toArray(); }\n        let len = 0, src = new Array(n);\n        for (let i = -1; ++i < n;) {\n            len += (src[i] = chunks[i].toArray()).length;\n        }\n        if (ArrayType !== src[0].constructor) {\n            ArrayType = src[0].constructor;\n        }\n        let dst = new ArrayType(len);\n        let set: any = ArrayType === Array ? arraySet : typedSet;\n        for (let i = -1, idx = 0; ++i < n;) {\n            idx = set(src[i], dst, idx);\n        }\n        return dst;\n    }\n\n    protected getInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].get(j); }\n    protected isValidInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].isValid(j); }\n    protected indexOfInternal({ _chunks }: Chunked<T>, chunkIndex: number, fromIndex: number, element: T['TValue']) {\n        let i = chunkIndex - 1, n = _chunks.length;\n        let start = fromIndex, offset = 0, found = -1;\n        while (++i < n) {\n            if (~(found = _chunks[i].indexOf(element, start))) {\n                return offset + found;\n            }\n            start = 0;\n            offset += _chunks[i].length;\n        }\n        return -1;\n    }\n\n    protected _sliceInternal(self: Chunked<T>, begin: number, end: number) {\n        const slices: Vector<T>[] = [];\n        const { chunks, _chunkOffsets: chunkOffsets } = self;\n        for (let i = -1, n = chunks.length; ++i < n;) {\n            const chunk = chunks[i];\n            const chunkLength = chunk.length;\n            const chunkOffset = chunkOffsets[i];\n            // If the child is to the right of the slice boundary, we can stop\n            if (chunkOffset >= end) { break; }\n            // If the child is to the left of of the slice boundary, exclude\n            if (begin >= chunkOffset + chunkLength) { continue; }\n            // If the child is between both left and right boundaries, include w/o slicing\n            if (chunkOffset >= begin && (chunkOffset + chunkLength) <= end) {\n                slices.push(chunk);\n                continue;\n            }\n            // If the child overlaps one of the slice boundaries, include that slice\n            const from = Math.max(0, begin - chunkOffset);\n            const to = Math.min(end - chunkOffset, chunkLength);\n            slices.push(chunk.slice(from, to) as Vector<T>);\n        }\n        return self.clone(slices);\n    }\n}\n\n/** @ignore */\nfunction calculateOffsets<T extends DataType>(vectors: Vector<T>[]) {\n    let offsets = new Uint32Array((vectors || []).length + 1);\n    let offset = offsets[0] = 0, length = offsets.length;\n    for (let index = 0; ++index < length;) {\n        offsets[index] = (offset += vectors[index - 1].length);\n    }\n    return offsets;\n}\n\n/** @ignore */\nconst typedSet = (src: TypedArray, dst: TypedArray, offset: number) => {\n    dst.set(src, offset);\n    return (offset + src.length);\n};\n\n/** @ignore */\nconst arraySet = (src: any[], dst: any[], offset: number) => {\n    let idx = offset;\n    for (let i = -1, n = src.length; ++i < n;) {\n        dst[idx++] = src[i];\n    }\n    return idx;\n};\n\n/** @ignore */\ninterface TypedArray extends ArrayBufferView {\n    readonly length: number;\n    readonly [n: number]: number;\n    set(array: ArrayLike<number>, offset?: number): void;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Field } from './schema';\nimport { DataType } from './type';\nimport { Vector } from './vector';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { VectorCtorArgs, VectorType as V } from './interfaces';\nimport { Chunked, SearchContinuation } from './vector/chunked';\n\nexport interface Column<T extends DataType = any> {\n    typeId: T['TType'];\n    concat(...others: Vector<T>[]): Column<T>;\n    slice(begin?: number, end?: number): Column<T>;\n    clone(chunks?: Vector<T>[], offsets?: Uint32Array): Column<T>;\n}\n\nexport class Column<T extends DataType = any>\n    extends Chunked<T>\n    implements Clonable<Column<T>>,\n               Sliceable<Column<T>>,\n               Applicative<T, Column<T>> {\n\n    public static new<T extends DataType>(field: string | Field<T>, ...chunks: (Vector<T> | Vector<T>[])[]): Column<T>;\n    public static new<T extends DataType>(field: string | Field<T>, data: Data<T>, ...args: VectorCtorArgs<V<T>>): Column<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(field: string | Field<T>, data: Data<T> | Vector<T> | (Data<T> | Vector<T>)[], ...rest: any[]) {\n\n        const chunks = Chunked.flatten<T>(\n            Array.isArray(data) ? [...data, ...rest] :\n            data instanceof Vector ? [data, ...rest] :\n            [Vector.new(data, ...rest)]\n        );\n\n        if (typeof field === 'string') {\n            const type = chunks[0].data.type;\n            field = new Field(field, type, true);\n        } else if (!field.nullable && chunks.some(({ nullCount }) => nullCount > 0)) {\n            field = field.clone({ nullable: true });\n        }\n        return new Column(field, chunks);\n    }\n\n    constructor(field: Field<T>, vectors: Vector<T>[] = [], offsets?: Uint32Array) {\n        vectors = Chunked.flatten<T>(...vectors);\n        super(field.type, vectors, offsets);\n        this._field = field;\n        if (vectors.length === 1 && !(this instanceof SingleChunkColumn)) {\n            return new SingleChunkColumn(field, vectors[0], this._chunkOffsets);\n        }\n    }\n\n    protected _field: Field<T>;\n    protected _children?: Column[];\n\n    public get field() { return this._field; }\n    public get name() { return this._field.name; }\n    public get nullable() { return this._field.nullable; }\n    public get metadata() { return this._field.metadata; }\n\n    public clone(chunks = this._chunks) {\n        return new Column(this._field, chunks);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n\n        if (index < 0 || index >= this.numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let column: Column<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (column = columns[index]) { return column; }\n        if (field = ((this.type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n\n        return null;\n    }\n}\n\n/** @ignore */\nclass SingleChunkColumn<T extends DataType = any> extends Column<T> {\n    protected _chunk: Vector<T>;\n    constructor(field: Field<T>, vector: Vector<T>, offsets?: Uint32Array) {\n        super(field, [vector], offsets);\n        this._chunk = vector;\n    }\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        return then ? then(this, 0, index) : [0, index];\n    }\n    public isValid(index: number): boolean {\n        return this._chunk.isValid(index);\n    }\n    public get(index: number): T['TValue'] | null {\n        return this._chunk.get(index);\n    }\n    public set(index: number, value: T['TValue'] | null): void {\n        this._chunk.set(index, value);\n    }\n    public indexOf(element: T['TValue'], offset?: number): number {\n        return this._chunk.indexOf(element, offset);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from '../vector/chunked';\n\ntype RecordBatchCtor = typeof import('../recordbatch').RecordBatch;\n\nconst isArray = Array.isArray;\n\n/** @ignore */\nexport const selectArgs = <T>(Ctor: any, vals: any[]) => _selectArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnArgs = <T extends { [key: string]: DataType }>(args: any[]) => {\n    const [fields, values] = _selectFieldArgs<T>(args, [[], []]);\n    return values.map((x, i) =>\n        x instanceof Column ? Column.new(x.field.clone(fields[i]), x) :\n        x instanceof Vector ? Column.new(fields[i], x) as Column<T[keyof T]> :\n                              Column.new(fields[i], [] as Vector<T[keyof T]>[]));\n};\n\n/** @ignore */\nexport const selectFieldArgs = <T extends { [key: string]: DataType }>(args: any[]) => _selectFieldArgs<T>(args, [[], []]);\n/** @ignore */\nexport const selectChunkArgs = <T>(Ctor: any, vals: any[]) => _selectChunkArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectVectorChildrenArgs = <T extends Vector>(Ctor: RecordBatchCtor, vals: any[]) => _selectVectorChildrenArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnChildrenArgs = <T extends Column>(Ctor: RecordBatchCtor, vals: any[]) => _selectColumnChildrenArgs(Ctor, vals, [], 0) as T[];\n\n/** @ignore */\nfunction _selectArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectChunkArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectChunkArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Chunked) {\n            j = _selectChunkArgs(Ctor, value.chunks, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectVectorChildrenArgs<T extends Vector>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectVectorChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Vector, value.schema.fields.map((_, i) => value.getChildAt(i)!), res, j).length;\n        } else if (value instanceof Vector) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectColumnChildrenArgs<T extends Column>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectColumnChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Column, value.schema.fields.map((f, i) => Column.new(f, value.getChildAt(i)!)), res, j).length;\n        } else if (value instanceof Column) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nconst toKeysAndValues = (xs: [any[], any[]], [k, v]: [any, any], i: number) => (xs[0][i] = k, xs[1][i] = v, xs);\n\n/** @ignore */\nfunction _selectFieldArgs<T extends { [key: string]: DataType }>(vals: any[], ret: [Field<T[keyof T]>[], Vector<T[keyof T]>[]]): [Field<T[keyof T]>[], (T[keyof T] | Vector<T[keyof T]>)[]] {\n    let keys: any[], n: number;\n    switch (n = vals.length) {\n        case 0: return ret;\n        case 1:\n            keys = ret[0];\n            if (!(vals[0])) { return ret; }\n            if (isArray(vals[0])) { return _selectFieldArgs(vals[0], ret); }\n            if (!(vals[0] instanceof Data || vals[0] instanceof Vector || vals[0] instanceof DataType)) {\n                [keys, vals] = Object.entries(vals[0]).reduce(toKeysAndValues, ret);\n            }\n            break;\n        default:\n            !isArray(keys = vals[n - 1])\n                ? (vals = isArray(vals[0]) ? vals[0] : vals, keys = [])\n                : (vals = isArray(vals[0]) ? vals[0] : vals.slice(0, n - 1));\n    }\n\n    let fieldIndex = -1;\n    let valueIndex = -1;\n    let idx = -1, len = vals.length;\n    let field: number | string | Field<T[keyof T]>;\n    let val: Vector<T[keyof T]> | Data<T[keyof T]>;\n    let [fields, values] = ret as [Field<T[keyof T]>[], any[]];\n\n    while (++idx < len) {\n        val = vals[idx];\n        if (val instanceof Column && (values[++valueIndex] = val)) {\n            fields[++fieldIndex] = val.field.clone(keys[idx], val.type, true);\n        } else {\n            ({ [idx]: field = idx } = keys);\n            if (val instanceof DataType && (values[++valueIndex] = val)) {\n                fields[++fieldIndex] = Field.new(field, val as DataType, true) as Field<T[keyof T]>;\n            } else if (val && val.type && (values[++valueIndex] = val)) {\n                val instanceof Data && (values[valueIndex] = val = Vector.new(val) as Vector);\n                fields[++fieldIndex] = Field.new(field, val.type, true) as Field<T[keyof T]>;\n            }\n        }\n    }\n    return ret;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { DataType } from './type';\nimport { selectArgs } from './util/args';\nimport { selectFieldArgs } from './util/args';\nimport { instance as comparer } from './visitor/typecomparator';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = T[keyof T][] | Data<T[keyof T]>[] | Vector<T[keyof T]>[];\n\nexport class Schema<T extends { [key: string]: DataType } = any> {\n\n    public static from<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static from<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static from<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static from(...args: any[]) {\n        return Schema.new(args[0], args[1]);\n    }\n\n    public static new<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static new<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static new(...args: any[]) {\n        return new Schema(selectFieldArgs(args)[0]);\n    }\n\n    public readonly fields: Field<T[keyof T]>[];\n    public readonly metadata: Map<string, string>;\n    public readonly dictionaries: Map<number, DataType>;\n\n    constructor(fields: Field[] = [],\n                metadata?: Map<string, string> | null,\n                dictionaries?: Map<number, DataType> | null) {\n        this.fields = (fields || []) as Field<T[keyof T]>[];\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    public get [Symbol.toStringTag]() { return 'Schema'; }\n    public toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n\n    public compareTo(other?: Schema | null): other is Schema<T> {\n        return comparer.compareSchemas(this, other);\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const names = columnNames.reduce((xs, x) => (xs[x] = true) && xs, Object.create(null));\n        return new Schema<{ [P in K]: T[P] }>(this.fields.filter((f) => names[f.name]), this.metadata);\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        return new Schema<{ [key: string]: K }>(columnIndices.map((i) => this.fields[i]).filter(Boolean), this.metadata);\n    }\n\n    public assign<R extends { [key: string]: DataType } = any>(schema: Schema<R>): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...fields: (Field<R[keyof R]> | Field<R[keyof R]>[])[]): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...args: (Schema<R> | Field<R[keyof R]> | Field<R[keyof R]>[])[]) {\n\n        const other = args[0] instanceof Schema ? args[0] as Schema<R>\n            : new Schema<R>(selectArgs<Field<R[keyof R]>>(Field, args));\n\n        const curFields = [...this.fields] as Field[];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        }) as Field[];\n\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n\n        return new Schema<T & R>(\n            [...curFields, ...newFields], metadata,\n            new Map([...this.dictionaries, ...newDictionaries])\n        );\n    }\n}\n\nexport class Field<T extends DataType = any> {\n\n    public static new<T extends DataType = any>(props: { name: string | number, type: T, nullable?: boolean, metadata?: Map<string, string> | null }): Field<T>;\n    public static new<T extends DataType = any>(name: string | number | Field<T>, type: T, nullable?: boolean, metadata?: Map<string, string> | null): Field<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field<T>(`${name}`, type, nullable, metadata);\n    }\n\n    public readonly type: T;\n    public readonly name: string;\n    public readonly nullable: boolean;\n    public readonly metadata: Map<string, string>;\n\n    constructor(name: string, type: T, nullable = false, metadata?: Map<string, string> | null) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n\n    public get typeId() { return this.type.typeId; }\n    public get [Symbol.toStringTag]() { return 'Field'; }\n    public toString() { return `${this.name}: ${this.type}`; }\n    public compareTo(other?: Field | null): other is Field<T> {\n        return comparer.compareField(this, other);\n    }\n    public clone<R extends DataType = T>(props: { name?: string | number, type?: R, nullable?: boolean, metadata?: Map<string, string> | null }): Field<R>;\n    public clone<R extends DataType = T>(name?: string | number | Field<T>, type?: R, nullable?: boolean, metadata?: Map<string, string> | null): Field<R>;\n    public clone<R extends DataType = T>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata} = args[0]);\n        return Field.new<R>(name, type, nullable, metadata);\n    }\n}\n\n/** @ignore */\nfunction mergeMaps<TKey, TVal>(m1?: Map<TKey, TVal> | null, m2?: Map<TKey, TVal> | null): Map<TKey, TVal> {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n\n/** @ignore */\nfunction generateDictionaryMap(fields: Field[], dictionaries = new Map<number, DataType>()): Map<number, DataType> {\n\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            } else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n\n    return dictionaries;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Schema.prototype as any).fields = null;\n(Schema.prototype as any).metadata = null;\n(Schema.prototype as any).dictionaries = null;\n\n(Field.prototype as any).type = null;\n(Field.prototype as any).name = null;\n(Field.prototype as any).nullable = null;\n(Field.prototype as any).metadata = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { DataType, List } from '../type';\nimport { OffsetsBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions, VariableWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class ListBuilder<T extends DataType = any, TNull = any> extends VariableWidthBuilder<List<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    protected _offsets: OffsetsBufferBuilder;\n    constructor(opts: BuilderOptions<List<T>, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new List(new Field(name, child.type, true));\n        return this.numChildren - 1;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n    protected _flushPending(pending: Map<number, T['TValue'] | undefined>) {\n        const run = this._run;\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        let index = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.length);\n                setValue(this, index, run.bind(value));\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListBuilder<T extends DataType = any, TNull = any> extends Builder<FixedSizeList<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    public setValue(index: number, value: T['TValue']) {\n        super.setValue(index, this._run.bind(value));\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('FixedSizeListBuilder can only have one child.');\n        }\n        const childIndex = this.children.push(child);\n        this.type = new FixedSizeList(this.type.listSize, new Field(name, child.type, true));\n        return childIndex;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataType, Map_, Struct } from '../type';\nimport { Builder, VariableWidthBuilder } from '../builder';\n\n/** @ignore */ type MapValue<K extends DataType = any, V extends DataType = any> = Map_<K, V>['TValue'];\n/** @ignore */ type MapValues<K extends DataType = any, V extends DataType = any> = Map<number, MapValue<K, V> | undefined>;\n/** @ignore */ type MapValueExt<K extends DataType = any, V extends DataType = any> = MapValue<K, V> | { [key: string]: V } | { [key: number]: V } ;\n\n/** @ignore */\nexport class MapBuilder<K extends DataType = any, V extends DataType = any, TNull = any> extends VariableWidthBuilder<Map_<K, V>, TNull> {\n\n    protected _pending: MapValues<K, V> | undefined;\n    public set(index: number, value: MapValueExt<K, V> | TNull) {\n        return super.set(index, value as MapValue<K, V> | TNull);\n    }\n\n    public setValue(index: number, value: MapValueExt<K, V>) {\n        value = value instanceof Map ? value : new Map(Object.entries(value));\n        const pending = this._pending || (this._pending = new Map() as MapValues<K, V>);\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += value.size;\n        pending.set(index, value);\n    }\n\n    public addChild(child: Builder<Struct<{ key: K, value: V }>>, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new Map_<K, V>(new Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n\n    protected _flushPending(pending: MapValues<K, V>) {\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        pending.forEach((value, index) => {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.size);\n                setValue(this, index, value);\n            }\n        });\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */\nexport class StructBuilder<T extends { [key: string]: DataType } = any, TNull = any> extends Builder<Struct<T>, TNull> {\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new Struct([...this.type.children, new Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\nimport { Union, SparseUnion, DenseUnion } from '../type';\n\nexport interface UnionBuilderOptions<T extends Union = any, TNull = any> extends BuilderOptions<T, TNull> {\n    valueToChildTypeId?: (builder: UnionBuilder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport abstract class UnionBuilder<T extends Union, TNull = any> extends Builder<T, TNull> {\n\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._typeIds = new DataBufferBuilder(new Int8Array(0), 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n\n    public get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n\n    public append(value: T['TValue'] | TNull, childTypeId?: number) {\n        return this.set(this.length, value, childTypeId);\n    }\n\n    public set(index: number, value: T['TValue'] | TNull, childTypeId?: number) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value, childTypeId);\n        }\n        return this;\n    }\n\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        this._typeIds.set(index, childTypeId!);\n        super.setValue(index, value);\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new Field(name, child.type)];\n        this.type = <T> new Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n\n    /** @ignore */\n    // @ts-ignore\n    protected _valueToChildTypeId(builder: UnionBuilder<T, TNull>, value: any, offset: number): number {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\n\n/** @ignore */\nexport class SparseUnionBuilder<T extends SparseUnion, TNull = any> extends UnionBuilder<T, TNull> {}\n/** @ignore */\nexport class DenseUnionBuilder<T extends DenseUnion, TNull = any> extends UnionBuilder<T, TNull> {\n\n    protected _offsets: DataBufferBuilder<Int32Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._offsets = new DataBufferBuilder(new Int32Array(0));\n    }\n\n    /** @ignore */\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        const childIndex = this.type.typeIdToChildIndex[childTypeId!];\n        this._offsets.set(index, this.getChildAt(childIndex)!.length);\n        return super.setValue(index, value, childTypeId);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { encodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { float64ToUint16 } from '../util/math';\nimport { toArrayBufferView } from '../util/buffer';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface SetVisitor extends Visitor {\n    visit<T extends VectorType>(node: T, index: number, value: T['TValue']): void;\n    visitMany<T extends VectorType>(nodes: T[], indices: number[], values: T['TValue'][]): void[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitList                 <T extends List>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n}\n\n/** @ignore */\nexport class SetVisitor extends Visitor {}\n\n/** @ignore */\nconst setEpochMsToDays = (data: Int32Array, index: number, epochMs: number) => { data[index] = (epochMs / 86400000) | 0; };\n/** @ignore */\nconst setEpochMsToMillisecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = (epochMs % 4294967296) | 0;\n    data[index + 1] = (epochMs / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToMicrosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToNanosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000000) / 4294967296) | 0;\n};\n\n/** @ignore */\nconst setVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number, value: Uint8Array) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    if (x != null && y != null) {\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n\n/** @ignore */\nconst setBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number, val: boolean) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |=  (1 << (idx % 8)))  // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n\n};\n\n/** @ignore */ type Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */ type Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst setDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nconst setDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nconst setNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = float64ToUint16(value); };\n/** @ignore */\nconst setNumericX2       = <T extends Numeric2X>      (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (typeof value) {\n        case 'bigint': vector.values64[index] = value; break;\n        case 'number': vector.values[index * vector.stride] = value; break;\n        default:\n            const val = value as T['TArray'];\n            const { stride, ArrayType } = vector;\n            const long = toArrayBufferView<T['TArray']>(ArrayType, val);\n            vector.values.set(long.subarray(0, stride), stride * index);\n    }\n};\n/** @ignore */\nconst setFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, stride), stride * index); };\n\n/** @ignore */\nconst setBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => {\n    setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setInt = <T extends Int>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.bitWidth < 64\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value as Numeric1X['TValue'])\n        : setNumericX2(vector as VectorType<Numeric2X>, index, value as Numeric2X['TValue']);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setFloat = <T extends Float>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.precision !== Precision.HALF\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value)\n        : setFloat16(vector as VectorType<Float16>, index, value);\n};\n\n/* istanbul ignore next */\nconst setDate = <T extends Date_> (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.unit === DateUnit.DAY\n        ? setDateDay(vector as VectorType<DateDay>, index, value)\n        : setDateMillisecond(vector as VectorType<DateMillisecond>, index, value);\n};\n\n/** @ignore */\nconst setTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nconst setTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nconst setTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimestampSecond(vector as VectorType<TimestampSecond>, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index, value);\n        case TimeUnit.NANOSECOND:  return  setTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index, value);\n    }\n};\n\n/** @ignore */\nconst setTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/* istanbul ignore next */\n/** @ignore */\nconst setTime            = <T extends Time>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimeSecond(vector as VectorType<TimeSecond>, index, value as TimeSecond['TValue']);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(vector as VectorType<TimeMillisecond>, index, value as TimeMillisecond['TValue']);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index, value as TimeMicrosecond['TValue']);\n        case TimeUnit.NANOSECOND:  return  setTimeNanosecond(vector as VectorType<TimeNanosecond>, index, value as TimeNanosecond['TValue']);\n    }\n};\n\n/** @ignore */\nconst setDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 4), 4 * index); };\n\n/** @ignore */\nconst setList = <T extends List>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, value.get(++idx));\n    }\n};\n\n/** @ignore */\nconst setMap = <T extends Map_>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    const entries = value instanceof Map ? [...value] : Object.entries(value);\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, entries[++idx]);\n    }\n};\n\n/** @ignore */ const _setStructArrayValue = (o: number, v: any[]) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o: number, v: Vector) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o: number, v: Map<string, any>) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o: number, v: { [key: string]: any }) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v[f.name]);\n/** @ignore */\nconst setStruct = <T extends Struct>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n\n    const setValue = value instanceof Map    ? _setStructMapValue(index, value)    :\n                     value instanceof Vector ? _setStructVectorValue(index, value) :\n                     Array.isArray(value)    ? _setStructArrayValue(index, value)  :\n                                               _setStructObjectValue(index, value) ;\n\n    vector.type.children.forEach((f: Field, i: number) => setValue(vector.getChildAt(i), f, i));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number, value: V['TValue']) => {\n    vector.type.mode === UnionMode.Dense ?\n        setDenseUnion(vector as VectorType<DenseUnion>, index, value) :\n        setSparseUnion(vector as VectorType<SparseUnion>, index, value);\n};\n\n/** @ignore */\nconst setDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(vector.valueOffsets[index], value);\n};\n\n/** @ignore */\nconst setSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(index, value);\n};\n\n/** @ignore */\nconst setDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const key = vector.getKey(index);\n    if (key !== null) {\n        vector.setValue(key, value);\n    }\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setIntervalValue = <T extends Interval>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(vector as VectorType<IntervalDayTime>, index, value)\n        : setIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index, value);\n};\n\n/** @ignore */\nconst setIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values[index] = (value[0] * 12) + (value[1] % 12); };\n\n/** @ignore */\nconst setFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    for (let idx = -1, offset = index * stride; ++idx < stride;) {\n        child.set(offset + idx, value.get(idx));\n    }\n};\n\nSetVisitor.prototype.visitBool                 =                 setBool;\nSetVisitor.prototype.visitInt                  =                  setInt;\nSetVisitor.prototype.visitInt8                 =              setNumeric;\nSetVisitor.prototype.visitInt16                =              setNumeric;\nSetVisitor.prototype.visitInt32                =              setNumeric;\nSetVisitor.prototype.visitInt64                =            setNumericX2;\nSetVisitor.prototype.visitUint8                =              setNumeric;\nSetVisitor.prototype.visitUint16               =              setNumeric;\nSetVisitor.prototype.visitUint32               =              setNumeric;\nSetVisitor.prototype.visitUint64               =            setNumericX2;\nSetVisitor.prototype.visitFloat                =                setFloat;\nSetVisitor.prototype.visitFloat16              =              setFloat16;\nSetVisitor.prototype.visitFloat32              =              setNumeric;\nSetVisitor.prototype.visitFloat64              =              setNumeric;\nSetVisitor.prototype.visitUtf8                 =                 setUtf8;\nSetVisitor.prototype.visitBinary               =               setBinary;\nSetVisitor.prototype.visitFixedSizeBinary      =      setFixedSizeBinary;\nSetVisitor.prototype.visitDate                 =                 setDate;\nSetVisitor.prototype.visitDateDay              =              setDateDay;\nSetVisitor.prototype.visitDateMillisecond      =      setDateMillisecond;\nSetVisitor.prototype.visitTimestamp            =            setTimestamp;\nSetVisitor.prototype.visitTimestampSecond      =      setTimestampSecond;\nSetVisitor.prototype.visitTimestampMillisecond = setTimestampMillisecond;\nSetVisitor.prototype.visitTimestampMicrosecond = setTimestampMicrosecond;\nSetVisitor.prototype.visitTimestampNanosecond  =  setTimestampNanosecond;\nSetVisitor.prototype.visitTime                 =                 setTime;\nSetVisitor.prototype.visitTimeSecond           =           setTimeSecond;\nSetVisitor.prototype.visitTimeMillisecond      =      setTimeMillisecond;\nSetVisitor.prototype.visitTimeMicrosecond      =      setTimeMicrosecond;\nSetVisitor.prototype.visitTimeNanosecond       =       setTimeNanosecond;\nSetVisitor.prototype.visitDecimal              =              setDecimal;\nSetVisitor.prototype.visitList                 =                 setList;\nSetVisitor.prototype.visitStruct               =               setStruct;\nSetVisitor.prototype.visitUnion                =                setUnion;\nSetVisitor.prototype.visitDenseUnion           =           setDenseUnion;\nSetVisitor.prototype.visitSparseUnion          =          setSparseUnion;\nSetVisitor.prototype.visitDictionary           =           setDictionary;\nSetVisitor.prototype.visitInterval             =        setIntervalValue;\nSetVisitor.prototype.visitIntervalDayTime      =      setIntervalDayTime;\nSetVisitor.prototype.visitIntervalYearMonth    =    setIntervalYearMonth;\nSetVisitor.prototype.visitFixedSizeList        =        setFixedSizeList;\nSetVisitor.prototype.visitMap                  =                  setMap;\n\n/** @ignore */\nexport const instance = new SetVisitor();\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Footer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Footer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Footer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Footer= obj\n         * @returns Footer\n         */\n        static getRootAsFooter(bb: flatbuffers.ByteBuffer, obj?: Footer): Footer {\n            return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.Schema= obj\n         * @returns org.apache.arrow.flatbuf.Schema|null\n         */\n        schema(obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Schema): NS7624605610262437867.org.apache.arrow.flatbuf.Schema | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        dictionaries(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        dictionariesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        recordBatches(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        recordBatchesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFooter(builder: flatbuffers.Builder) {\n            builder.startObject(4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset schemaOffset\n         */\n        static addSchema(builder: flatbuffers.Builder, schemaOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionariesOffset\n         */\n        static addDictionaries(builder: flatbuffers.Builder, dictionariesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDictionariesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset recordBatchesOffset\n         */\n        static addRecordBatches(builder: flatbuffers.Builder, recordBatchesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startRecordBatchesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFooter(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishFooterBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createFooter(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, schemaOffset: flatbuffers.Offset, dictionariesOffset: flatbuffers.Offset, recordBatchesOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Block {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Block\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Block {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * Index to the start of the RecordBlock (note this is past the Message header)\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * Length of the metadata\n         *\n         * @returns number\n         */\n        metaDataLength(): number {\n            return this.bb!.readInt32(this.bb_pos + 8);\n        }\n\n        /**\n         * Length of the data (this is aligned so there can be a gap between this and\n         * the metatdata).\n         *\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 16);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param number metaDataLength\n         * @param flatbuffers.Long bodyLength\n         * @returns flatbuffers.Offset\n         */\n        static createBlock(builder: flatbuffers.Builder, offset: flatbuffers.Long, metaDataLength: number, bodyLength: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, BuilderCtor } from '../interfaces';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n\n/** @ignore */\nexport interface GetBuilderCtor extends Visitor {\n    visit<T extends Type>(type: T): BuilderCtor<T>;\n    visitMany<T extends Type>(types: T[]): BuilderCtor<T>[];\n    getVisitFn<T extends Type>(type: T): () => BuilderCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => BuilderCtor<T>;\n}\n\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    public visitNull                 () { return NullBuilder;                 }\n    public visitBool                 () { return BoolBuilder;                 }\n    public visitInt                  () { return IntBuilder;                  }\n    public visitInt8                 () { return Int8Builder;                 }\n    public visitInt16                () { return Int16Builder;                }\n    public visitInt32                () { return Int32Builder;                }\n    public visitInt64                () { return Int64Builder;                }\n    public visitUint8                () { return Uint8Builder;                }\n    public visitUint16               () { return Uint16Builder;               }\n    public visitUint32               () { return Uint32Builder;               }\n    public visitUint64               () { return Uint64Builder;               }\n    public visitFloat                () { return FloatBuilder;                }\n    public visitFloat16              () { return Float16Builder;              }\n    public visitFloat32              () { return Float32Builder;              }\n    public visitFloat64              () { return Float64Builder;              }\n    public visitUtf8                 () { return Utf8Builder;                 }\n    public visitBinary               () { return BinaryBuilder;               }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryBuilder;      }\n    public visitDate                 () { return DateBuilder;                 }\n    public visitDateDay              () { return DateDayBuilder;              }\n    public visitDateMillisecond      () { return DateMillisecondBuilder;      }\n    public visitTimestamp            () { return TimestampBuilder;            }\n    public visitTimestampSecond      () { return TimestampSecondBuilder;      }\n    public visitTimestampMillisecond () { return TimestampMillisecondBuilder; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondBuilder; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondBuilder;  }\n    public visitTime                 () { return TimeBuilder;                 }\n    public visitTimeSecond           () { return TimeSecondBuilder;           }\n    public visitTimeMillisecond      () { return TimeMillisecondBuilder;      }\n    public visitTimeMicrosecond      () { return TimeMicrosecondBuilder;      }\n    public visitTimeNanosecond       () { return TimeNanosecondBuilder;       }\n    public visitDecimal              () { return DecimalBuilder;              }\n    public visitList                 () { return ListBuilder;                 }\n    public visitStruct               () { return StructBuilder;               }\n    public visitUnion                () { return UnionBuilder;                }\n    public visitDenseUnion           () { return DenseUnionBuilder;           }\n    public visitSparseUnion          () { return SparseUnionBuilder;          }\n    public visitDictionary           () { return DictionaryBuilder;           }\n    public visitInterval             () { return IntervalBuilder;             }\n    public visitIntervalDayTime      () { return IntervalDayTimeBuilder;      }\n    public visitIntervalYearMonth    () { return IntervalYearMonthBuilder;    }\n    public visitFixedSizeList        () { return FixedSizeListBuilder;        }\n    public visitMap                  () { return MapBuilder;                  }\n}\n\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport { Builder, BuilderOptions } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\n\nimport { Type } from '../enum';\nimport { Field } from '../schema';\nimport { DataType } from '../type';\nimport { Utf8Builder } from './utf8';\nimport { BuilderType as B } from '../interfaces';\nimport { Builder, BuilderOptions } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n\n/** @nocollapse */\nBuilder.new = newBuilder;\n\nfunction newBuilder<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {\n\n    const type = options.type;\n    const builder = new (getBuilderConstructor.getVisitFn<T>(type)())(options) as Builder<T, TNull>;\n\n    if (type.children && type.children.length > 0) {\n\n        const children = options['children'] || [] as BuilderOptions[];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_: Field, i: number) => children[i] || defaultOptions)\n            : (({ name }: Field) => children[name] || defaultOptions);\n\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n\n    return builder as B<T, TNull>;\n}\n\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number' && T !== Type.NONE)\n    .forEach((typeId) => {\n        const BuilderCtor = getBuilderConstructor.visit(typeId);\n        BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n    });\n\n(Utf8Builder.prototype as any)._setValue = setVisitor.visitBinary;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport * as File_ from '../../fb/File';\nimport { flatbuffers } from 'flatbuffers';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Block = File_.org.apache.arrow.flatbuf.Block;\nimport _Footer = File_.org.apache.arrow.flatbuf.Footer;\n\nimport { Schema } from '../../schema';\nimport { MetadataVersion } from '../../enum';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\n\n/** @ignore */\nclass Footer_ {\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema()!);\n        return new OffHeapFooter(schema, footer) as Footer_;\n    }\n\n    /** @nocollapse */\n    public static encode(footer: Footer_) {\n\n        const b: Builder = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        [...footer.recordBatches()].slice().reverse().forEach((rb) => FileBlock.encode(b, rb));\n        const recordBatchesOffset = b.endVector();\n\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        [...footer.dictionaryBatches()].slice().reverse().forEach((db) => FileBlock.encode(b, db));\n\n        const dictionaryBatchesOffset = b.endVector();\n\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n\n        return b.asUint8Array();\n    }\n\n    // @ts-ignore\n    protected _recordBatches: FileBlock[];\n    // @ts-ignore\n    protected _dictionaryBatches: FileBlock[];\n    public get numRecordBatches() { return this._recordBatches.length; }\n    public get numDictionaries() { return this._dictionaryBatches.length; }\n\n    constructor(public schema: Schema,\n                public version: MetadataVersion = MetadataVersion.V4,\n                recordBatches?: FileBlock[], dictionaryBatches?: FileBlock[]) {\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n\n    public *recordBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) { yield block; }\n        }\n    }\n\n    public *dictionaryBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) { yield block; }\n        }\n    }\n\n    public getRecordBatch(index: number) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\n\nexport { Footer_ as Footer };\n\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n\n    public get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    public get numDictionaries() { return this._footer.dictionariesLength(); }\n\n    constructor(schema: Schema, protected _footer: _Footer) {\n        super(schema, _footer.version());\n    }\n\n    public getRecordBatch(index: number) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nexport class FileBlock {\n\n    /** @nocollapse */\n    public static decode(block: _Block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n\n    /** @nocollapse */\n    public static encode(b: Builder, fileBlock: FileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n\n    public offset: number;\n    public bodyLength: number;\n    public metaDataLength: number;\n\n    constructor(metaDataLength: number, bodyLength: Long | number, offset: Long | number) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, Readable, Writable, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays, ArrayBufferViewInput } from '../util/buffer';\n\nimport {\n    isPromise, isFetchResponse,\n    isIterable, isAsyncIterable,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */\nexport type WritableSink<T> = Writable<T> | WritableStream<T> | NodeJS.WritableStream | null;\n/** @ignore */\nexport type ReadableSource<T> = Readable<T> | PromiseLike<T> | AsyncIterable<T> | ReadableStream<T> | NodeJS.ReadableStream | null;\n\n/** @ignore */\nexport class AsyncByteQueue<T extends ArrayBufferViewInput = Uint8Array> extends AsyncQueue<Uint8Array, T> {\n    public write(value: ArrayBufferViewInput | Uint8Array) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value as T);\n        }\n    }\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values as any[])[0] : (async () => {\n            let buffers = [], byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\n\n/** @ignore */\nexport class ByteStream implements IterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: ByteStreamSource<Uint8Array>;\n    constructor(source?: Iterable<ArrayBufferViewInput> | ArrayBufferViewInput) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\nexport class AsyncByteStream implements Readable<Uint8Array>, AsyncIterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: AsyncByteStreamSource<Uint8Array>;\n    constructor(source?: PromiseLike<ArrayBufferViewInput> | Response | ReadableStream<ArrayBufferViewInput> | NodeJS.ReadableStream | AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput>) {\n        if (source instanceof AsyncByteStream) {\n            this.source = (source as AsyncByteStream).source;\n        } else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        } else if (isReadableDOMStream<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        } else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body!));\n        } else if (isIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        } else if (isPromise<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isAsyncIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public get closed(): Promise<void> { return this.source.closed; }\n    public cancel(reason?: any) { return this.source.cancel(reason); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\ninterface ByteStreamSourceIterator<T> extends IterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): IteratorResult<T>;\n}\n\n/** @ignore */\ninterface AsyncByteStreamSourceIterator<T> extends AsyncIterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nclass ByteStreamSource<T> {\n    constructor(protected source: ByteStreamSourceIterator<T>) {}\n    public cancel(reason?: any) { this.return(reason); }\n    public peek(size?: number | null): T | null { return this.next(size, 'peek').value; }\n    public read(size?: number | null): T | null { return this.next(size, 'read').value; }\n    public next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return this.source.next({ cmd, size }); }\n    public throw(value?: any) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    public return(value?: any) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n\n/** @ignore */\nclass AsyncByteStreamSource<T> implements Readable<T> {\n\n    private _closedPromise: Promise<void>;\n    private _closedPromiseResolve?: (value?: any) => void;\n    constructor (protected source: ByteStreamSourceIterator<T> | AsyncByteStreamSourceIterator<T>) {\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async read(size?: number | null): Promise<T | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<T | null> { return (await this.next(size, 'peek')).value; }\n    public async next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return (await this.source.next({ cmd, size })); }\n    public async throw(value?: any) {\n        const result = (this.source.throw && await this.source.throw(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    public async return(value?: any) {\n        const result = (this.source.return && await this.source.return(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FileHandle } from './interfaces';\nimport { ByteStream, AsyncByteStream } from './stream';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\n\n/** @ignore */\nexport class RandomAccessFile extends ByteStream {\n    public size: number;\n    public position: number = 0;\n    protected buffer: Uint8Array | null;\n    constructor(buffer: ArrayBufferViewInput, byteLength?: number) {\n        super();\n        this.buffer = toUint8Array(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n    }\n    public readInt32(position: number) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public seek(position: number) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public read(nBytes?: number | null) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            this.position = Math.min(size,\n                 position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    public readAt(position: number, nBytes: number) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    public close() { this.buffer && (this.buffer = null); }\n    public throw(value?: any) { this.close(); return { done: true, value }; }\n    public return(value?: any) { this.close(); return { done: true, value }; }\n}\n\n/** @ignore */\nexport class AsyncRandomAccessFile extends AsyncByteStream {\n    // @ts-ignore\n    public size: number;\n    public position: number = 0;\n    public _pending?: Promise<void>;\n    protected _handle: FileHandle | null;\n    constructor(file: FileHandle, byteLength?: number) {\n        super();\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        } else {\n            this._pending = (async () => {\n                this.size = (await file.stat()).size;\n                delete this._pending;\n            })();\n        }\n    }\n    public async readInt32(position: number) {\n        const { buffer, byteOffset } = await this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public async seek(position: number) {\n        this._pending && await this._pending;\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public async read(nBytes?: number | null) {\n        this._pending && await this._pending;\n        const { _handle: file, size, position } = this;\n        if (file && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            let pos = position, offset = 0, bytesRead = 0;\n            let end = Math.min(size, pos + Math.min(size - pos, nBytes));\n            let buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n            while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                ({ bytesRead } = await file.read(buffer, offset, buffer.byteLength - offset, pos));\n            }\n            return buffer;\n        }\n        return null;\n    }\n    public async readAt(position: number, nBytes: number) {\n        this._pending && await this._pending;\n        const { _handle: file, size } = this;\n        if (file && (position + nBytes) < size) {\n            const end = Math.min(size, position + nBytes);\n            const buffer = new Uint8Array(end - position);\n            return (await file.read(buffer, 0, nBytes, position)).buffer;\n        }\n        return new Uint8Array(nBytes);\n    }\n    public async close() { const f = this._handle; this._handle = null; f && await f.close(); }\n    public async throw(value?: any) { await this.close(); return { done: true, value }; }\n    public async return(value?: any) { await this.close(); return { done: true, value }; }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nconst carryBit16 = 1 << 16;\n\n/** @ignore */\nfunction intAsHex(value: number): string {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [1,\n                      10,\n                      100,\n                      1000,\n                      10000,\n                      100000,\n                      1000000,\n                      10000000,\n                      100000000];\n\n/** @ignore */\nexport class BaseInt64 {\n    constructor (protected buffer: Uint32Array) {}\n\n    public high(): number { return this.buffer[1]; }\n    public low (): number { return this.buffer[0]; }\n\n    protected _times(other: BaseInt64) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n\n        let sum = product >>> 16;\n\n        product = L[2] * R[3];\n        sum += product;\n\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n\n        this.buffer[0] += sum << 16;\n\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n\n        return this;\n      }\n\n    protected _plus(other: BaseInt64) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n          ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n\n    public lessThan(other: BaseInt64): boolean {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n\n    public equals(other: BaseInt64): boolean {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n\n    public greaterThan(other: BaseInt64): boolean {\n        return other.lessThan(this);\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\n\n/** @ignore */\nexport class Uint64 extends BaseInt64 {\n    public times(other: Uint64): Uint64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Uint64): Uint64 {\n        this._plus(other);\n        return this;\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Uint64 {\n        return Uint64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Uint64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Uint64 {\n        const length = str.length;\n\n        let out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int64 extends BaseInt64 {\n    public negate(): Int64 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        return this;\n    }\n\n    public times(other: Int64): Int64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Int64): Int64 {\n        this._plus(other);\n        return this;\n    }\n\n    public lessThan(other: Int64): boolean {\n        // force high bytes to be signed\n        const this_high = this.buffer[1] << 0;\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Int64 {\n        return Int64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Int64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Int64 {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int128 {\n    constructor (private buffer: Uint32Array) {\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n\n    public high(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n\n    public low(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n\n    public negate(): Int128 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        if (this.buffer[1] == 0) { ++this.buffer[2]; }\n        if (this.buffer[2] == 0) { ++this.buffer[3]; }\n        return this;\n    }\n\n    public times(other: Int128): Int128 {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3],  0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2],  0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1],  0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0],  0]));\n\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n\n        let sum = new Uint64(new Uint32Array([product.high(), 0]));\n\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n\n        this.buffer[1] = sum.low();\n\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n\n        this.buffer[2] = sum.high();\n        let high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n                        .plus(Uint64.multiply(L1, R2))\n                        .plus(Uint64.multiply(L2, R1))\n                        .plus(Uint64.multiply(L3, R0)).low();\n\n        return this;\n    }\n\n    public plus(other: Int128): Int128 {\n        let sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n\n        return this;\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(4)): Int128 {\n        return Int128.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(4)): Int128 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(4)): Int128 {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([parseInt(str.substr(posn, group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport * as type from '../type';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { packBools } from '../util/bit';\nimport { encodeUtf8 } from '../util/utf8';\nimport { Int64, Int128 } from '../util/int';\nimport { UnionMode, DateUnit } from '../enum';\nimport { toArrayBufferView } from '../util/buffer';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\n\n/** @ignore */\nexport interface VectorLoader extends Visitor {\n    visit<T extends DataType>(node: Field<T> | T): Data<T>;\n    visitMany<T extends DataType>(nodes: (Field<T> | T)[]): Data<T>[];\n}\n\n/** @ignore */\nexport class VectorLoader extends Visitor {\n    private bytes: Uint8Array;\n    private nodes: FieldNode[];\n    private nodesIndex: number = -1;\n    private buffers: BufferRegion[];\n    private buffersIndex: number = -1;\n    private dictionaries: Map<number, Vector<any>>;\n    constructor(bytes: Uint8Array, nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super();\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n\n    public visit<T extends DataType>(node: Field<T> | T): Data<T> {\n        return super.visit(node instanceof Field ? node.type : node);\n    }\n\n    public visitNull            <T extends type.Null>            (type: T, { length,           } = this.nextFieldNode()) { return            Data.Null(type, 0, length);                                                                                                                                 }\n    public visitBool            <T extends type.Bool>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Bool(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitInt             <T extends type.Int>             (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Int(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFloat           <T extends type.Float>           (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Float(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitUtf8            <T extends type.Utf8>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Utf8(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitBinary          <T extends type.Binary>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Binary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitFixedSizeBinary <T extends type.FixedSizeBinary> (type: T, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeBinary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDate            <T extends type.Date_>           (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Date(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTimestamp       <T extends type.Timestamp>       (type: T, { length, nullCount } = this.nextFieldNode()) { return       Data.Timestamp(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTime            <T extends type.Time>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Time(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDecimal         <T extends type.Decimal>         (type: T, { length, nullCount } = this.nextFieldNode()) { return         Data.Decimal(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitList            <T extends type.List>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.List(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n    public visitStruct          <T extends type.Struct>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Struct(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visitMany(type.children));                                                 }\n    public visitUnion           <T extends type.Union>           (type: T                                              ) { return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type as type.SparseUnion) : this.visitDenseUnion(type as type.DenseUnion);                                      }\n    public visitDenseUnion      <T extends type.DenseUnion>      (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.readOffsets(type), this.visitMany(type.children)); }\n    public visitSparseUnion     <T extends type.SparseUnion>     (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.visitMany(type.children));                         }\n    public visitDictionary      <T extends type.Dictionary>      (type: T, { length, nullCount } = this.nextFieldNode()) { return      Data.Dictionary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type.indices), this.readDictionary(type));                        }\n    public visitInterval        <T extends type.Interval>        (type: T, { length, nullCount } = this.nextFieldNode()) { return        Data.Interval(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFixedSizeList   <T extends type.FixedSizeList>   (type: T, { length, nullCount } = this.nextFieldNode()) { return   Data.FixedSizeList(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visit(type.children[0]));                                                  }\n    public visitMap             <T extends type.Map_>            (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Map(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n\n    protected nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    protected nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    protected readNullBitmap<T extends DataType>(type: T, nullCount: number, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    protected readOffsets<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readTypeIds<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readData<T extends DataType>(_type: T, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    protected readDictionary<T extends type.Dictionary>(type: T): Vector<T['dictionary']> {\n        return this.dictionaries.get(type.id)!;\n    }\n}\n\n/** @ignore */\nexport class JSONVectorLoader extends VectorLoader {\n    private sources: any[][];\n    constructor(sources: any[][], nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    protected readNullBitmap<T extends DataType>(_type: T, nullCount: number, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n    protected readOffsets<T extends DataType>(_type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    protected readTypeIds<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    protected readData<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (DataType.isTimestamp(type)) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDecimal(type)) {\n            return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset] as string[]));\n        } else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset] as string[]);\n        } else if (DataType.isBool(type)) {\n            return packBools(sources[offset] as number[]);\n        } else if (DataType.isUtf8(type)) {\n            return encodeUtf8((sources[offset] as string[]).join(''));\n        }\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\n\n/** @ignore */\nfunction binaryDataFromJSON(values: string[]) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = parseInt(joined.substr(i, 2), 16);\n    }\n    return data;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport * as Schema_ from '../fb/Schema';\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\n\nimport Null = Schema_.org.apache.arrow.flatbuf.Null;\nimport Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nimport Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nimport Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nimport Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nimport Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nimport Date = Schema_.org.apache.arrow.flatbuf.Date;\nimport Time = Schema_.org.apache.arrow.flatbuf.Time;\nimport Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nimport Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nimport List = Schema_.org.apache.arrow.flatbuf.List;\nimport Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nimport Union = Schema_.org.apache.arrow.flatbuf.Union;\nimport DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nimport FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nimport FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nimport Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n\n/** @ignore */\nexport interface TypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T, builder: Builder): number | undefined;\n}\n\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T, builder: Builder): number | undefined {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    public visitNull<T extends type.Null>(_node: T, b: Builder) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    public visitInt<T extends type.Int>(node: T, b: Builder) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    public visitFloat<T extends type.Float>(node: T, b: Builder) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    public visitBinary<T extends type.Binary>(_node: T, b: Builder) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    public visitBool<T extends type.Bool>(_node: T, b: Builder) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    public visitUtf8<T extends type.Utf8>(_node: T, b: Builder) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    public visitDecimal<T extends type.Decimal>(node: T, b: Builder) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        return Decimal.endDecimal(b);\n    }\n    public visitDate<T extends type.Date_>(node: T, b: Builder) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    public visitTime<T extends type.Time>(node: T, b: Builder) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    public visitTimestamp<T extends type.Timestamp>(node: T, b: Builder) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    public visitInterval<T extends type.Interval>(node: T, b: Builder) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    public visitList<T extends type.List>(_node: T, b: Builder) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    public visitStruct<T extends type.Struct>(_node: T, b: Builder) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    public visitUnion<T extends type.Union>(node: T, b: Builder) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T, b: Builder) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>(node: T, b: Builder) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>(node: T, b: Builder) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    public visitMap<T extends type.Map_>(node: T, b: Builder) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n\n/** @ignore */\nexport const instance = new TypeAssembler();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Schema, Field } from '../../schema';\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\nimport { DictionaryBatch, RecordBatch, FieldNode, BufferRegion } from './message';\nimport { TimeUnit, Precision, IntervalUnit, UnionMode, DateUnit } from '../../enum';\n\n/** @ignore */\nexport function schemaFromJSON(_schema: any, dictionaries: Map<number, DataType> = new Map()) {\n    return new Schema(\n        schemaFieldsFromJSON(_schema, dictionaries),\n        customMetadataFromJSON(_schema['customMetadata']),\n        dictionaries\n    );\n}\n\n/** @ignore */\nexport function recordBatchFromJSON(b: any) {\n    return new RecordBatch(\n        b['count'],\n        fieldNodesFromJSON(b['columns']),\n        buffersFromJSON(b['columns'])\n    );\n}\n\n/** @ignore */\nexport function dictionaryBatchFromJSON(b: any) {\n    return new DictionaryBatch(\n        recordBatchFromJSON(b['data']),\n        b['id'], b['isDelta']\n    );\n}\n\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema: any, dictionaries?: Map<number, DataType>) {\n    return (_schema['fields'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldChildrenFromJSON(_field: any, dictionaries?: Map<number, DataType>): Field[] {\n    return (_field['children'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldNodesFromJSON(xs: any[]): FieldNode[] {\n    return (xs || []).reduce<FieldNode[]>((fieldNodes, column: any) => [\n        ...fieldNodes,\n        new FieldNode(\n            column['count'],\n            nullCountFromJSON(column['VALIDITY'])\n        ),\n        ...fieldNodesFromJSON(column['children'])\n    ], [] as FieldNode[]);\n}\n\n/** @ignore */\nfunction buffersFromJSON(xs: any[], buffers: BufferRegion[] = []): BufferRegion[] {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n\n/** @ignore */\nfunction nullCountFromJSON(validity: number[]) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n\n/** @ignore */\nexport function fieldFromJSON(_field: any, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let keys: TKeys | null;\n    let field: Field | void;\n    let dictMeta: any;\n    let type: DataType<any>;\n    let dictType: Dictionary;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction customMetadataFromJSON(_metadata?: object) {\n    return new Map<string, string>(Object.entries(_metadata || {}));\n}\n\n/** @ignore */\nfunction indexTypeFromJSON(_type: any) {\n    return new Int(_type['isSigned'], _type['bitWidth']);\n}\n\n/** @ignore */\nfunction typeFromJSON(f: any, children?: Field[]): DataType<any> {\n\n    const typeId = f['type']['name'];\n\n    switch (typeId) {\n        case 'NONE':   return new Null();\n        case 'null':   return new Null();\n        case 'binary': return new Binary();\n        case 'utf8':   return new Utf8();\n        case 'bool':   return new Bool();\n        case 'list':   return new List((children || [])[0]);\n        case 'struct': return new Struct(children || []);\n        case 'struct_': return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new Int(t['isSigned'], t['bitWidth'] as IntBitWidth);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new Float(Precision[t['precision']] as any);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new Decimal(t['scale'], t['precision']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new Date_(DateUnit[t['unit']] as any);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new Time(TimeUnit[t['unit']] as any, t['bitWidth'] as TimeBitWidth);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new Timestamp(TimeUnit[t['unit']] as any, t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new Interval(IntervalUnit[t['unit']] as any);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new Union(UnionMode[t['mode']] as any, (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as Schema_ from '../../fb/Schema';\nimport * as Message_ from '../../fb/Message';\n\nimport { Schema, Field } from '../../schema';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\nimport { MessageHeader, MetadataVersion } from '../../enum';\nimport { instance as typeAssembler } from '../../visitor/typeassembler';\nimport { fieldFromJSON, schemaFromJSON, recordBatchFromJSON, dictionaryBatchFromJSON } from './json';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport Type = Schema_.org.apache.arrow.flatbuf.Type;\nimport _Field = Schema_.org.apache.arrow.flatbuf.Field;\nimport _Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nimport _Buffer = Schema_.org.apache.arrow.flatbuf.Buffer;\nimport _Message = Message_.org.apache.arrow.flatbuf.Message;\nimport _KeyValue = Schema_.org.apache.arrow.flatbuf.KeyValue;\nimport _FieldNode = Message_.org.apache.arrow.flatbuf.FieldNode;\nimport _Endianness = Schema_.org.apache.arrow.flatbuf.Endianness;\nimport _RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nimport _DictionaryBatch = Message_.org.apache.arrow.flatbuf.DictionaryBatch;\nimport _DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\n\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\n/**\n * @ignore\n * @private\n **/\nexport class Message<T extends MessageHeader = any> {\n\n    /** @nocollapse */\n    public static fromJSON<T extends MessageHeader>(msg: any, headerType: T): Message<T> {\n        const message = new Message(0, MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength: Long = _message.bodyLength()!;\n        const version: MetadataVersion = _message.version();\n        const headerType: MessageHeader = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static encode<T extends MessageHeader>(message: Message<T>) {\n        let b = new Builder(), headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = Schema.encode(b, message.header() as Schema);\n        } else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header() as RecordBatch);\n        } else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header() as DictionaryBatch);\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, MetadataVersion.V4);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n\n    /** @nocollapse */\n    public static from(header: Schema | RecordBatch | DictionaryBatch, bodyLength = 0) {\n        if (header instanceof Schema) {\n            return new Message(0, MetadataVersion.V4, MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n\n    // @ts-ignore\n    public body: Uint8Array;\n    protected _headerType: T;\n    protected _bodyLength: number;\n    protected _version: MetadataVersion;\n    public get type() { return this.headerType; }\n    public get version() { return this._version; }\n    public get headerType() { return this._headerType; }\n    public get bodyLength() { return this._bodyLength; }\n    // @ts-ignore\n    protected _createHeader: MessageHeaderDecoder;\n    public header() { return this._createHeader<T>(); }\n    public isSchema(): this is Message<MessageHeader.Schema> { return this.headerType === MessageHeader.Schema; }\n    public isRecordBatch(): this is Message<MessageHeader.RecordBatch> { return this.headerType === MessageHeader.RecordBatch; }\n    public isDictionaryBatch(): this is Message<MessageHeader.DictionaryBatch> { return this.headerType === MessageHeader.DictionaryBatch; }\n\n    constructor(bodyLength: Long | number, version: MetadataVersion, headerType: T, header?: any) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class RecordBatch {\n    protected _length: number;\n    protected _nodes: FieldNode[];\n    protected _buffers: BufferRegion[];\n    public get nodes() { return this._nodes; }\n    public get length() { return this._length; }\n    public get buffers() { return this._buffers; }\n    constructor(length: Long | number, nodes: FieldNode[], buffers: BufferRegion[]) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class DictionaryBatch {\n\n    protected _id: number;\n    protected _isDelta: boolean;\n    protected _data: RecordBatch;\n    public get id() { return this._id; }\n    public get data() { return this._data; }\n    public get isDelta() { return this._isDelta; }\n    public get length(): number { return this.data.length; }\n    public get nodes(): FieldNode[] { return this.data.nodes; }\n    public get buffers(): BufferRegion[] { return this.data.buffers; }\n\n    constructor(data: RecordBatch, id: Long | number, isDelta: boolean = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class BufferRegion {\n    public offset: number;\n    public length: number;\n    constructor(offset: Long | number, length: Long | number) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class FieldNode {\n    public length: number;\n    public nullCount: number;\n    constructor(length: Long | number, nullCount: Long | number) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\n\n/** @ignore */\nfunction messageHeaderFromJSON(message: any, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.fromJSON(message);\n            case MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\n/** @ignore */\nfunction decodeMessageHeader(message: _Message, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.decode(message.header(new _Schema())!);\n            case MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch())!, message.version());\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch())!, message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\nField['encode'] = encodeField;\nField['decode'] = decodeField;\nField['fromJSON'] = fieldFromJSON;\n\nSchema['encode'] = encodeSchema;\nSchema['decode'] = decodeSchema;\nSchema['fromJSON'] = schemaFromJSON;\n\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = recordBatchFromJSON;\n\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\n\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\n\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n\ndeclare module '../../schema' {\n    namespace Field {\n        export { encodeField as encode };\n        export { decodeField as decode };\n        export { fieldFromJSON as fromJSON };\n    }\n    namespace Schema {\n        export { encodeSchema as encode };\n        export { decodeSchema as decode };\n        export { schemaFromJSON as fromJSON };\n    }\n}\n\ndeclare module './message' {\n    namespace RecordBatch {\n        export { encodeRecordBatch as encode };\n        export { decodeRecordBatch as decode };\n        export { recordBatchFromJSON as fromJSON };\n    }\n    namespace DictionaryBatch {\n        export { encodeDictionaryBatch as encode };\n        export { decodeDictionaryBatch as decode };\n        export { dictionaryBatchFromJSON as fromJSON };\n    }\n    namespace FieldNode {\n        export { encodeFieldNode as encode };\n        export { decodeFieldNode as decode };\n    }\n    namespace BufferRegion {\n        export { encodeBufferRegion as encode };\n        export { decodeBufferRegion as decode };\n    }\n}\n\n/** @ignore */\nfunction decodeSchema(_schema: _Schema, dictionaries: Map<number, DataType> = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n\n/** @ignore */\nfunction decodeRecordBatch(batch: _RecordBatch, version = MetadataVersion.V4) {\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n\n/** @ignore */\nfunction decodeDictionaryBatch(batch: _DictionaryBatch, version = MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data()!, version), batch.id(), batch.isDelta());\n}\n\n/** @ignore */\nfunction decodeBufferRegion(b: _Buffer) {\n    return new BufferRegion(b.offset(), b.length());\n}\n\n/** @ignore */\nfunction decodeFieldNode(f: _FieldNode) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n\n/** @ignore */\nfunction decodeFieldNodes(batch: _RecordBatch) {\n    const nodes = [] as FieldNode[];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n\n/** @ignore */\nfunction decodeBuffers(batch: _RecordBatch, version: MetadataVersion) {\n    const bufferRegions = [] as BufferRegion[];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n        // If this Arrow buffer was written before version 4,\n        // advance the buffer's bb_pos 8 bytes to skip past\n        // the now-removed page_id field\n        if (version < MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n\n/** @ignore */\nfunction decodeSchemaFields(schema: _Schema, dictionaries?: Map<number, DataType>) {\n    const fields = [] as Field[];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n\n/** @ignore */\nfunction decodeFieldChildren(field: _Field, dictionaries?: Map<number, DataType>): Field[] {\n    const children = [] as Field[];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n\n/** @ignore */\nfunction decodeField(f: _Field, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let field: Field | void;\n    let type: DataType<any>;\n    let keys: _Int | TKeys | null;\n    let dictType: Dictionary;\n    let dictMeta: _DictionaryEncoding | null;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new Field(f.name()!, type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction decodeCustomMetadata(parent?: _Schema | _Field | null) {\n    const data = new Map<string, string>();\n    if (parent) {\n        for (let entry, key, i = -1, n = parent.customMetadataLength() | 0; ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value()!);\n            }\n        }\n    }\n    return data;\n}\n\n/** @ignore */\nfunction decodeIndexType(_type: _Int) {\n    return new Int(_type.isSigned(), _type.bitWidth() as IntBitWidth);\n}\n\n/** @ignore */\nfunction decodeFieldType(f: _Field, children?: Field[]): DataType<any> {\n\n    const typeId = f.typeType();\n\n    switch (typeId) {\n        case Type.NONE:    return new Null();\n        case Type.Null:    return new Null();\n        case Type.Binary:  return new Binary();\n        case Type.Utf8:    return new Utf8();\n        case Type.Bool:    return new Bool();\n        case Type.List:    return new List((children || [])[0]);\n        case Type.Struct_: return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case Type.Int: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Int())!;\n            return new Int(t.isSigned(), t.bitWidth());\n        }\n        case Type.FloatingPoint: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FloatingPoint())!;\n            return new Float(t.precision());\n        }\n        case Type.Decimal: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Decimal())!;\n            return new Decimal(t.scale(), t.precision());\n        }\n        case Type.Date: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Date())!;\n            return new Date_(t.unit());\n        }\n        case Type.Time: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Time())!;\n            return new Time(t.unit(), t.bitWidth() as TimeBitWidth);\n        }\n        case Type.Timestamp: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Timestamp())!;\n            return new Timestamp(t.unit(), t.timezone());\n        }\n        case Type.Interval: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Interval())!;\n            return new Interval(t.unit());\n        }\n        case Type.Union: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Union())!;\n            return new Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type.FixedSizeBinary: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeBinary())!;\n            return new FixedSizeBinary(t.byteWidth());\n        }\n        case Type.FixedSizeList: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeList())!;\n            return new FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type.Map: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Map())!;\n            return new Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n\n/** @ignore */\nfunction encodeSchema(b: Builder, schema: Schema) {\n\n    const fieldOffsets = schema.fields.map((f) => Field.encode(b, f));\n\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n\n    if (metadataOffset !== -1) { _Schema.addCustomMetadata(b, metadataOffset); }\n\n    return _Schema.endSchema(b);\n}\n\n/** @ignore */\nfunction encodeField(b: Builder, field: Field) {\n\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n\n    let type = field.type;\n    let typeId: Type = <any> field.typeId;\n\n    if (!DataType.isDictionary(type)) {\n        typeOffset = typeAssembler.visit(type, b)!;\n    } else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeAssembler.visit(type, b)!;\n        typeOffset = typeAssembler.visit(type.dictionary, b)!;\n    }\n\n    const childOffsets = (type.children || []).map((f: Field) => Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n\n    if (nameOffset !== -1) { _Field.addName(b, nameOffset); }\n    if (dictionaryOffset !== -1) { _Field.addDictionary(b, dictionaryOffset); }\n    if (metadataOffset !== -1) { _Field.addCustomMetadata(b, metadataOffset); }\n\n    return _Field.endField(b);\n}\n\n/** @ignore */\nfunction encodeRecordBatch(b: Builder, recordBatch: RecordBatch) {\n\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n\n    _RecordBatch.startNodesVector(b, nodes.length);\n    nodes.slice().reverse().forEach((n) => FieldNode.encode(b, n));\n\n    const nodesVectorOffset = b.endVector();\n\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    buffers.slice().reverse().forEach((b_) => BufferRegion.encode(b, b_));\n\n    const buffersVectorOffset = b.endVector();\n\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n\n/** @ignore */\nfunction encodeDictionaryBatch(b: Builder, dictionaryBatch: DictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n\n/** @ignore */\nfunction encodeFieldNode(b: Builder, node: FieldNode) {\n    return _FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n\n/** @ignore */\nfunction encodeBufferRegion(b: Builder, node: BufferRegion) {\n    return _Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n\n/** @ignore */\nconst platformIsLittleEndian = (function() {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n/** @ignore */\ntype MessageHeaderDecoder = <T extends MessageHeader>() => T extends MessageHeader.Schema ? Schema\n                                                         : T extends MessageHeader.RecordBatch ? RecordBatch\n                                                         : T extends MessageHeader.DictionaryBatch ? DictionaryBatch : never;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MessageHeader } from '../enum';\nimport { flatbuffers } from 'flatbuffers';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { Message } from './metadata/message';\nimport { isFileHandle } from '../util/compat';\nimport { AsyncRandomAccessFile } from '../io/file';\nimport { toUint8Array, ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, ReadableSource, AsyncByteStream } from '../io/stream';\nimport { ArrowJSON, ArrowJSONLike, ITERATOR_DONE, FileHandle } from '../io/interfaces';\n\n/** @ignore */ const invalidMessageType       = (type: MessageHeader) => `Expected ${MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage              = (type: MessageHeader) => `Header pointer of flatbuffer-encoded ${MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata   = (expected: number, actual: number) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected: number, actual: number) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n\n/** @ignore */\nexport class MessageReader implements IterableIterator<Message> {\n    protected source: ByteStream;\n    constructor(source: ByteStream | ArrayBufferViewInput | Iterable<ArrayBufferViewInput>) {\n        this.source = source instanceof ByteStream ? source : new ByteStream(source);\n    }\n    public [Symbol.iterator](): IterableIterator<Message> { return this as IterableIterator<Message>; }\n    public next(): IteratorResult<Message> {\n        let r;\n        if ((r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readMessageBody(bodyLength: number): Uint8Array {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected readMetadataLength(): IteratorResult<number> {\n        const buf = this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected readMetadata(metadataLength: number): IteratorResult<Message> {\n        const buf = this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class AsyncMessageReader implements AsyncIterableIterator<Message> {\n    protected source: AsyncByteStream;\n    constructor(source: ReadableSource<Uint8Array>);\n    constructor(source: FileHandle, byteLength?: number);\n    constructor(source: any, byteLength?: number) {\n        this.source = source instanceof AsyncByteStream ? source\n            : isFileHandle(source)\n            ? new AsyncRandomAccessFile(source, byteLength!)\n            : new AsyncByteStream(source);\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<Message> { return this as AsyncIterableIterator<Message>; }\n    public async next(): Promise<IteratorResult<Message>> {\n        let r;\n        if ((r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = await this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public async throw(value?: any) { return await this.source.throw(value); }\n    public async return(value?: any) { return await this.source.return(value); }\n    public async readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = await this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public async readMessageBody(bodyLength: number): Promise<Uint8Array> {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(await this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public async readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = await this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected async readMetadataLength(): Promise<IteratorResult<number>> {\n        const buf = await this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected async readMetadata(metadataLength: number): Promise<IteratorResult<Message>> {\n        const buf = await this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class JSONMessageReader extends MessageReader {\n    private _schema = false;\n    private _json: ArrowJSON;\n    private _body: any[] = [];\n    private _batchIndex = 0;\n    private _dictionaryIndex = 0;\n    constructor(source: ArrowJSON | ArrowJSONLike) {\n        super(new Uint8Array(0));\n        this._json = source instanceof ArrowJSON ? source : new ArrowJSON(source);\n    }\n    public next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = Message.fromJSON(_json.schema, MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return ITERATOR_DONE;\n    }\n    public readMessageBody(_bodyLength?: number) {\n        return flattenDataSources(this._body) as any;\n        function flattenDataSources(xs: any[]): any[][] {\n            return (xs || []).reduce<any[][]>((buffers, column: any) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], [] as any[][]);\n        }\n    }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readSchema() {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\n\n/** @ignore */\nexport const PADDING = 4;\n/** @ignore */\nexport const MAGIC_STR = 'ARROW1';\n/** @ignore */\nexport const MAGIC = new Uint8Array(MAGIC_STR.length);\n\nfor (let i = 0; i < MAGIC_STR.length; i += 1 | 0) {\n    MAGIC[i] = MAGIC_STR.charCodeAt(i);\n}\n\n/** @ignore */\nexport function checkForMagicArrowString(buffer: Uint8Array, index = 0) {\n    for (let i = -1, n = MAGIC.length; ++i < n;) {\n        if (MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/** @ignore */\nexport const magicLength = MAGIC.length;\n/** @ignore */\nexport const magicAndPadding = magicLength + PADDING;\n/** @ignore */\nexport const magicX2AndPadding = magicLength * 2 + PADDING;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { Type, UnionMode } from '../enum';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { rebaseValueOffsets } from '../util/buffer';\nimport { packBools, truncateBitmap } from '../util/bit';\nimport { selectVectorChildrenArgs } from '../util/args';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp, Union,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n} from '../type';\n\n/** @ignore */\nexport interface VectorAssembler extends Visitor {\n    visit<T extends Vector>(node: T): this;\n    visitMany<T extends Vector>(nodes: T[]): this[];\n    getVisitFn<T extends Type>(node: T): (vector: V<T>) => this;\n    getVisitFn<T extends DataType>(node: V<T> | Data<T> | T): (vector: V<T>) => this;\n\n    visitBool                 <T extends Bool>            (vector: V<T>): this;\n    visitInt                  <T extends Int>             (vector: V<T>): this;\n    visitFloat                <T extends Float>           (vector: V<T>): this;\n    visitUtf8                 <T extends Utf8>            (vector: V<T>): this;\n    visitBinary               <T extends Binary>          (vector: V<T>): this;\n    visitFixedSizeBinary      <T extends FixedSizeBinary> (vector: V<T>): this;\n    visitDate                 <T extends Date_>           (vector: V<T>): this;\n    visitTimestamp            <T extends Timestamp>       (vector: V<T>): this;\n    visitTime                 <T extends Time>            (vector: V<T>): this;\n    visitDecimal              <T extends Decimal>         (vector: V<T>): this;\n    visitList                 <T extends List>            (vector: V<T>): this;\n    visitStruct               <T extends Struct>          (vector: V<T>): this;\n    visitUnion                <T extends Union>           (vector: V<T>): this;\n    visitInterval             <T extends Interval>        (vector: V<T>): this;\n    visitFixedSizeList        <T extends FixedSizeList>   (vector: V<T>): this;\n    visitMap                  <T extends Map_>            (vector: V<T>): this;\n}\n\n/** @ignore */\nexport class VectorAssembler extends Visitor {\n\n    /** @nocollapse */\n    public static assemble<T extends Vector | RecordBatch>(...args: (T | T[])[]) {\n        const assembler = new VectorAssembler();\n        const vectorChildren = selectVectorChildrenArgs(RecordBatch, args);\n        const [assembleResult = assembler] = assembler.visitMany(vectorChildren);\n        return assembleResult;\n    }\n\n    private constructor() { super(); }\n\n    public visit<T extends Vector>(vector: T): this {\n        if (!DataType.isDictionary(vector.type)) {\n            const { data, length, nullCount } = vector;\n            if (length > 2147483647) {\n                /* istanbul ignore next */\n                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n            }\n            if (!DataType.isNull(vector.type)) {\n                addBuffer.call(this, nullCount <= 0\n                    ? new Uint8Array(0) // placeholder validity buffer\n                    : truncateBitmap(data.offset, length, data.nullBitmap)\n                );\n            }\n            this.nodes.push(new FieldNode(length, nullCount));\n        }\n        return super.visit(vector);\n    }\n\n    public visitNull<T extends Null>(_nullV: V<T>) {\n        return this;\n    }\n    public visitDictionary<T extends Dictionary>(vector: V<T>) {\n        // Assemble the indices here, Dictionary assembled separately.\n        return this.visit(vector.indices);\n    }\n\n    public get nodes() { return this._nodes; }\n    public get buffers() { return this._buffers; }\n    public get byteLength() { return this._byteLength; }\n    public get bufferRegions() { return this._bufferRegions; }\n\n    protected _byteLength = 0;\n    protected _nodes: FieldNode[] = [];\n    protected _buffers: ArrayBufferView[] = [];\n    protected _bufferRegions: BufferRegion[] = [];\n}\n\n/** @ignore */\nfunction addBuffer(this: VectorAssembler, values: ArrayBufferView) {\n    const byteLength = (values.byteLength + 7) & ~7; // Round up to a multiple of 8\n    this.buffers.push(values);\n    this.bufferRegions.push(new BufferRegion(this._byteLength, byteLength));\n    this._byteLength += byteLength;\n    return this;\n}\n\n/** @ignore */\nfunction assembleUnion<T extends Union>(this: VectorAssembler, vector: V<T>) {\n    const { type, length, typeIds, valueOffsets } = vector;\n    // All Union Vectors have a typeIds buffer\n    addBuffer.call(this, typeIds);\n    // If this is a Sparse Union, treat it like all other Nested types\n    if (type.mode === UnionMode.Sparse) {\n        return assembleNestedVector.call(this, vector);\n    } else if (type.mode === UnionMode.Dense) {\n        // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n        if (vector.offset <= 0) {\n            // If the Vector hasn't been sliced, write the existing valueOffsets\n            addBuffer.call(this, valueOffsets);\n            // We can treat this like all other Nested types\n            return assembleNestedVector.call(this, vector);\n        } else {\n            // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n            // each child vector, we need to \"rebase\" the valueOffsets for each child\n            // Union typeIds are not necessary 0-indexed\n            const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n            const childLengths = new Int32Array(maxChildTypeId + 1);\n            // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n            const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n            const shiftedOffsets = new Int32Array(length);\n            // If we have a non-zero offset, then the value offsets do not start at\n            // zero. We must a) create a new offsets array with shifted offsets and\n            // b) slice the values array accordingly\n            const unshiftedOffsets = rebaseValueOffsets(-valueOffsets[0], length, valueOffsets);\n            for (let typeId, shift, index = -1; ++index < length;) {\n                if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n                    shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n                }\n                shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n                ++childLengths[typeId];\n            }\n            addBuffer.call(this, shiftedOffsets);\n            // Slice and visit children accordingly\n            for (let child: Vector | null, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n                if (child = vector.getChildAt(childIndex)) {\n                    const typeId = type.typeIds[childIndex];\n                    const childLength = Math.min(length, childLengths[typeId]);\n                    this.visit(child.slice(childOffsets[typeId], childLength));\n                }\n            }\n        }\n    }\n    return this;\n}\n\n/** @ignore */\nfunction assembleBoolVector<T extends Bool>(this: VectorAssembler, vector: V<T>) {\n    // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n    let values: Uint8Array;\n    if (vector.nullCount >= vector.length) {\n        // If all values are null, just insert a placeholder empty data buffer (fastest path)\n        return addBuffer.call(this, new Uint8Array(0));\n    } else if ((values = vector.values) instanceof Uint8Array) {\n        // If values is already a Uint8Array, slice the bitmap (fast path)\n        return addBuffer.call(this, truncateBitmap(vector.offset, vector.length, values));\n    }\n    // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n    // values as bools and re-pack them into a Uint8Array. This code isn't\n    // reachable unless you're trying to manipulate the Data internals,\n    // we we're only doing this for safety.\n    /* istanbul ignore next */\n    return addBuffer.call(this, packBools(vector));\n}\n\n/** @ignore */\nfunction assembleFlatVector<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval>(this: VectorAssembler, vector: V<T>) {\n    return addBuffer.call(this, vector.values.subarray(0, vector.length * vector.stride));\n}\n\n/** @ignore */\nfunction assembleFlatListVector<T extends Utf8 | Binary>(this: VectorAssembler, vector: V<T>) {\n    const { length, values, valueOffsets } = vector;\n    const firstOffset = valueOffsets[0];\n    const lastOffset = valueOffsets[length];\n    const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n    // Push in the order FlatList types read their buffers\n    addBuffer.call(this, rebaseValueOffsets(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n    addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n    return this;\n}\n\n/** @ignore */\nfunction assembleListVector<T extends Map_ | List | FixedSizeList>(this: VectorAssembler, vector: V<T>) {\n    const { length, valueOffsets } = vector;\n    // If we have valueOffsets (MapVector, ListVector), push that buffer first\n    if (valueOffsets) {\n        addBuffer.call(this, rebaseValueOffsets(valueOffsets[0], length, valueOffsets));\n    }\n    // Then insert the List's values child\n    return this.visit(vector.getChildAt(0)!);\n}\n\n/** @ignore */\nfunction assembleNestedVector<T extends Struct | Union>(this: VectorAssembler, vector: V<T>) {\n    return this.visitMany(vector.type.children.map((_, i) => vector.getChildAt(i)!).filter(Boolean))[0];\n}\n\nVectorAssembler.prototype.visitBool            =     assembleBoolVector;\nVectorAssembler.prototype.visitInt             =     assembleFlatVector;\nVectorAssembler.prototype.visitFloat           =     assembleFlatVector;\nVectorAssembler.prototype.visitUtf8            = assembleFlatListVector;\nVectorAssembler.prototype.visitBinary          = assembleFlatListVector;\nVectorAssembler.prototype.visitFixedSizeBinary =     assembleFlatVector;\nVectorAssembler.prototype.visitDate            =     assembleFlatVector;\nVectorAssembler.prototype.visitTimestamp       =     assembleFlatVector;\nVectorAssembler.prototype.visitTime            =     assembleFlatVector;\nVectorAssembler.prototype.visitDecimal         =     assembleFlatVector;\nVectorAssembler.prototype.visitList            =     assembleListVector;\nVectorAssembler.prototype.visitStruct          =   assembleNestedVector;\nVectorAssembler.prototype.visitUnion           =          assembleUnion;\nVectorAssembler.prototype.visitInterval        =     assembleFlatVector;\nVectorAssembler.prototype.visitFixedSizeList   =     assembleListVector;\nVectorAssembler.prototype.visitMap             =     assembleListVector;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { MAGIC } from './message';\nimport { Vector } from '../vector';\nimport { Column } from '../column';\nimport { DataType } from '../type';\nimport { Schema, Field } from '../schema';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { FileBlock, Footer } from './metadata/file';\nimport { MessageHeader, MetadataVersion } from '../enum';\nimport { WritableSink, AsyncByteQueue } from '../io/stream';\nimport { VectorAssembler } from '../visitor/vectorassembler';\nimport { JSONTypeAssembler } from '../visitor/jsontypeassembler';\nimport { JSONVectorAssembler } from '../visitor/jsonvectorassembler';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { Writable, ReadableInterop, ReadableDOMStreamOptions } from '../io/interfaces';\nimport { isPromise, isAsyncIterable, isWritableDOMStream, isWritableNodeStream, isIterable, isObject } from '../util/compat';\n\nexport interface RecordBatchStreamWriterOptions {\n    /**\n     *\n     */\n    autoDestroy?: boolean;\n    /**\n     * A flag indicating whether the RecordBatchWriter should construct pre-0.15.0\n     * encapsulated IPC Messages, which reserves  4 bytes for the Message metadata\n     * length instead of 8.\n     * @see https://issues.apache.org/jira/browse/ARROW-6313\n     */\n    writeLegacyIpcFormat?: boolean;\n}\n\nexport class RecordBatchWriter<T extends { [key: string]: DataType } = any> extends ReadableInterop<Uint8Array> implements Writable<RecordBatch<T>> {\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n        // @ts-ignore\n        readableStrategy?: { highWaterMark?: number, size?: any }\n    ): { writable: WritableStream<Table<T> | RecordBatch<T>>, readable: ReadableStream<Uint8Array> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    constructor(options?: RecordBatchStreamWriterOptions) {\n        super();\n        isObject(options) || (options = { autoDestroy: true, writeLegacyIpcFormat: false });\n        this._autoDestroy = (typeof options.autoDestroy === 'boolean') ? options.autoDestroy : true;\n        this._writeLegacyIpcFormat = (typeof options.writeLegacyIpcFormat === 'boolean') ? options.writeLegacyIpcFormat : false;\n    }\n\n    protected _position = 0;\n    protected _started = false;\n    protected _autoDestroy: boolean;\n    protected _writeLegacyIpcFormat: boolean;\n    // @ts-ignore\n    protected _sink = new AsyncByteQueue();\n    protected _schema: Schema | null = null;\n    protected _dictionaryBlocks: FileBlock[] = [];\n    protected _recordBatchBlocks: FileBlock[] = [];\n    protected _dictionaryDeltaOffsets = new Map<number, number>();\n\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync: any = false) {\n        return this._sink.toString(sync) as Promise<string> | string;\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync: any = false) {\n        return this._sink.toUint8Array(sync) as Promise<Uint8Array> | Uint8Array;\n    }\n\n    public writeAll(input: Table<T> | Iterable<RecordBatch<T>>): this;\n    public writeAll(input: AsyncIterable<RecordBatch<T>>): Promise<this>;\n    public writeAll(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<any> | Table<T> | Iterable<RecordBatch<T>> | AsyncIterable<RecordBatch<T>>) {\n        if (isPromise<any>(input)) {\n            return input.then((x) => this.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(this, input);\n        }\n        return writeAll(this, <any> input);\n    }\n\n    public get closed() { return this._sink.closed; }\n    public [Symbol.asyncIterator]() { return this._sink[Symbol.asyncIterator](); }\n    public toDOMStream(options?: ReadableDOMStreamOptions) { return this._sink.toDOMStream(options); }\n    public toNodeStream(options?: import('stream').ReadableOptions) { return this._sink.toNodeStream(options); }\n\n    public close() {\n        return this.reset()._sink.close();\n    }\n    public abort(reason?: any) {\n        return this.reset()._sink.abort(reason);\n    }\n    public finish() {\n        this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n        return this;\n    }\n    public reset(sink: WritableSink<ArrayBufferViewInput> = this._sink, schema: Schema<T> | null = null) {\n\n        if ((sink === this._sink) || (sink instanceof AsyncByteQueue)) {\n            this._sink = sink as AsyncByteQueue;\n        } else {\n            this._sink = new AsyncByteQueue();\n            if (sink && isWritableDOMStream(sink)) {\n                this.toDOMStream({ type: 'bytes' }).pipeTo(sink);\n            } else if (sink && isWritableNodeStream(sink)) {\n                this.toNodeStream({ objectMode: false }).pipe(sink);\n            }\n        }\n\n        if (this._started && this._schema) {\n            this._writeFooter(this._schema);\n        }\n\n        this._started = false;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n\n        if (!schema || !(schema.compareTo(this._schema))) {\n            if (schema === null) {\n                this._position = 0;\n                this._schema = null;\n            } else {\n                this._started = true;\n                this._schema = schema;\n                this._writeSchema(schema);\n            }\n        }\n\n        return this;\n    }\n\n    public write(payload?: Table<T> | RecordBatch<T> | Iterable<RecordBatch<T>> | null) {\n\n        let schema: Schema<T> | null = null;\n\n        if (!this._sink) {\n            throw new Error(`RecordBatchWriter is closed`);\n        } else if (payload === null || payload === undefined) {\n            return this.finish() && undefined;\n        } else if (payload instanceof Table && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        } else if (payload instanceof RecordBatch && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n\n        if (schema && !schema.compareTo(this._schema)) {\n            if (this._started && this._autoDestroy) {\n                return this.close();\n            }\n            this.reset(this._sink, schema);\n        }\n\n        if (payload instanceof RecordBatch) {\n            if (!(payload instanceof _InternalEmptyPlaceholderRecordBatch)) {\n                this._writeRecordBatch(payload);\n            }\n        } else if (payload instanceof Table) {\n            this.writeAll(payload.chunks);\n        } else if (isIterable(payload)) {\n            this.writeAll(payload);\n        }\n    }\n\n    protected _writeMessage<T extends MessageHeader>(message: Message<T>, alignment = 8) {\n\n        const a = alignment - 1;\n        const buffer = Message.encode(message);\n        const flatbufferSize = buffer.byteLength;\n        const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n        const alignedSize = (flatbufferSize + prefixSize + a) & ~a;\n        const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n\n        if (message.headerType === MessageHeader.RecordBatch) {\n            this._recordBatchBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        } else if (message.headerType === MessageHeader.DictionaryBatch) {\n            this._dictionaryBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n\n        // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n        if (!this._writeLegacyIpcFormat) {\n            this._write(Int32Array.of(-1));\n        }\n        // Write the flatbuffer size prefix including padding\n        this._write(Int32Array.of(alignedSize - prefixSize));\n        // Write the flatbuffer\n        if (flatbufferSize > 0) { this._write(buffer); }\n        // Write any padding\n        return this._writePadding(nPaddingBytes);\n    }\n\n    protected _write(chunk: ArrayBufferViewInput) {\n        if (this._started) {\n            const buffer = toUint8Array(chunk);\n            if (buffer && buffer.byteLength > 0) {\n                this._sink.write(buffer);\n                this._position += buffer.byteLength;\n            }\n        }\n        return this;\n    }\n\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMessage(Message.from(schema));\n    }\n\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) {\n        // eos bytes\n        return this._writeLegacyIpcFormat\n            ? this._write(Int32Array.of(0))\n            : this._write(Int32Array.of(-1, 0));\n    }\n\n    protected _writeMagic() {\n        return this._write(MAGIC);\n    }\n\n    protected _writePadding(nBytes: number) {\n        return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n    }\n\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(batch);\n        const recordBatch = new metadata.RecordBatch(batch.length, nodes, bufferRegions);\n        const message = Message.from(recordBatch, byteLength);\n        return this\n            ._writeDictionaries(batch)\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(dictionary);\n        const recordBatch = new metadata.RecordBatch(dictionary.length, nodes, bufferRegions);\n        const dictionaryBatch = new metadata.DictionaryBatch(recordBatch, id, isDelta);\n        const message = Message.from(dictionaryBatch, byteLength);\n        return this\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeBodyBuffers(buffers: ArrayBufferView[]) {\n        let buffer: ArrayBufferView;\n        let size: number, padding: number;\n        for (let i = -1, n = buffers.length; ++i < n;) {\n            if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n                this._write(buffer);\n                if ((padding = ((size + 7) & ~7) - size) > 0) {\n                    this._writePadding(padding);\n                }\n            }\n        }\n        return this;\n    }\n\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        for (let [id, dictionary] of batch.dictionaries) {\n            let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n            if (offset === 0 || (dictionary = dictionary.slice(offset)).length > 0) {\n                const chunks = 'chunks' in dictionary ? (dictionary as any).chunks : [dictionary];\n                for (const chunk of chunks) {\n                    this._writeDictionaryBatch(chunk, id, offset > 0);\n                    offset += chunk.length;\n                }\n            }\n        }\n        return this;\n    }\n}\n\n/** @ignore */\nexport class RecordBatchStreamWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): RecordBatchStreamWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any, options?: RecordBatchStreamWriterOptions) {\n        const writer = new RecordBatchStreamWriter<T>(options);\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n}\n\n/** @ignore */\nexport class RecordBatchFileWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchFileWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any) {\n        const writer = new RecordBatchFileWriter<T>();\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n    }\n\n    // @ts-ignore\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMagic()._writePadding(2);\n    }\n\n    protected _writeFooter(schema: Schema<T>) {\n        const buffer = Footer.encode(new Footer(\n            schema, MetadataVersion.V4,\n            this._recordBatchBlocks, this._dictionaryBlocks\n        ));\n        return super\n            ._writeFooter(schema) // EOS bytes for sequential readers\n            ._write(buffer) // Write the flatbuffer\n            ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n            ._writeMagic(); // then the magic suffix\n    }\n}\n\n/** @ignore */\nexport class RecordBatchJSONWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchJSONWriter<T>;\n    // @ts-ignore\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: any) {\n        return new RecordBatchJSONWriter<T>().writeAll(input as any);\n    }\n\n    private _recordBatches: RecordBatch[];\n    private _dictionaries: RecordBatch[];\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n        this._recordBatches = [];\n        this._dictionaries = [];\n    }\n\n    protected _writeMessage() { return this; }\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) { return this; }\n    protected _writeSchema(schema: Schema<T>) {\n        return this._write(`{\\n  \"schema\": ${\n            JSON.stringify({ fields: schema.fields.map(fieldToJSON) }, null, 2)\n        }`);\n    }\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        if (batch.dictionaries.size > 0) {\n            this._dictionaries.push(batch);\n        }\n        return this;\n    }\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        this._write(this._dictionaryBlocks.length === 0 ? `    ` : `,\\n    `);\n        this._write(`${dictionaryBatchToJSON(dictionary, id, isDelta)}`);\n        this._dictionaryBlocks.push(new FileBlock(0, 0, 0));\n        return this;\n    }\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        this._writeDictionaries(batch);\n        this._recordBatches.push(batch);\n        return this;\n    }\n    public close() {\n\n        if (this._dictionaries.length > 0) {\n            this._write(`,\\n  \"dictionaries\": [\\n`);\n            for (const batch of this._dictionaries) {\n                super._writeDictionaries(batch);\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._recordBatches.length > 0) {\n            for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n                this._write(i === 0 ? `,\\n  \"batches\": [\\n    ` : `,\\n    `);\n                this._write(`${recordBatchToJSON(this._recordBatches[i])}`);\n                this._recordBatchBlocks.push(new FileBlock(0, 0, 0));\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._schema) {\n            this._write(`\\n}`);\n        }\n\n        this._dictionaries = [];\n        this._recordBatches = [];\n\n        return super.close();\n    }\n}\n\n/** @ignore */\nfunction writeAll<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, input: Table<T> | Iterable<RecordBatch<T>>) {\n    let chunks = input as Iterable<RecordBatch<T>>;\n    if (input instanceof Table) {\n        chunks = input.chunks;\n        writer.reset(undefined, input.schema);\n    }\n    for (const batch of chunks) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nasync function writeAllAsync<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, batches: AsyncIterable<RecordBatch<T>>) {\n    for await (const batch of batches) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nfunction fieldToJSON({ name, type, nullable }: Field): object {\n    const assembler = new JSONTypeAssembler();\n    return {\n        'name': name, 'nullable': nullable,\n        'type': assembler.visit(type),\n        'children': (type.children || []).map(fieldToJSON),\n        'dictionary': !DataType.isDictionary(type) ? undefined : {\n            'id': type.id,\n            'isOrdered': type.isOrdered,\n            'indexType': assembler.visit(type.indices)\n        }\n    };\n}\n\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary: Vector, id: number, isDelta = false) {\n    const field = new Field(`${id}`, dictionary.type, dictionary.nullCount > 0);\n    const columns = JSONVectorAssembler.assemble(new Column(field, [dictionary]));\n    return JSON.stringify({\n        'id': id,\n        'isDelta': isDelta,\n        'data': {\n            'count': dictionary.length,\n            'columns': columns\n        }\n    }, null, 2);\n}\n\n/** @ignore */\nfunction recordBatchToJSON(records: RecordBatch) {\n    return JSON.stringify({\n        'count': records.length,\n        'columns': JSONVectorAssembler.assemble(records)\n    }, null, 2);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Data, Buffers } from '../data';\nimport { Schema, Field } from '../schema';\nimport { Chunked } from '../vector/chunked';\nimport { RecordBatch } from '../recordbatch';\n\nconst noopBuf = new Uint8Array(0);\nconst nullBufs = (bitmapLength: number) => <unknown> [\n    noopBuf, noopBuf, new Uint8Array(bitmapLength), noopBuf\n] as Buffers<any>;\n\n/** @ignore */\nexport function ensureSameLengthData<T extends { [key: string]: DataType } = any>(\n    schema: Schema<T>,\n    chunks: Data<T[keyof T]>[],\n    batchLength = chunks.reduce((l, c) => Math.max(l, c.length), 0)\n) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let i = -1, n = chunks.length;\n    const fields = [...schema.fields];\n    const batchData = [] as Data<T[keyof T]>[];\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = chunks[i]) && data.length === batchLength) {\n            batchData[i] = data;\n        } else {\n            (field = fields[i]).nullable || (fields[i] = fields[i].clone({ nullable: true }) as Field<T[keyof T]>);\n            batchData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return [new Schema<T>(fields), batchLength, batchData] as [Schema<T>, number, Data<T[keyof T]>[]];\n}\n\n/** @ignore */\nexport function distributeColumnsIntoRecordBatches<T extends { [key: string]: DataType } = any>(columns: Column<T[keyof T]>[]): [Schema<T>, RecordBatch<T>[]] {\n    return distributeVectorsIntoRecordBatches<T>(new Schema<T>(columns.map(({ field }) => field)), columns);\n}\n\n/** @ignore */\nexport function distributeVectorsIntoRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, vecs: (Vector<T[keyof T]> | Chunked<T[keyof T]>)[]): [Schema<T>, RecordBatch<T>[]] {\n    return uniformlyDistributeChunksAcrossRecordBatches<T>(schema, vecs.map((v) => v instanceof Chunked ? v.chunks.map((c) => c.data) : [v.data]));\n}\n\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, columns: Data<T[keyof T]>[][]): [Schema<T>, RecordBatch<T>[]] {\n\n    const fields = [...schema.fields];\n    const batchArgs = [] as [number, Data<T[keyof T]>[]][];\n    const memo = { numBatches: columns.reduce((n, c) => Math.max(n, c.length), 0) };\n\n    let numBatches = 0, batchLength = 0;\n    let i: number = -1, numColumns = columns.length;\n    let child: Data<T[keyof T]>, childData: Data<T[keyof T]>[] = [];\n\n    while (memo.numBatches-- > 0) {\n\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            childData[i] = child = columns[i].shift()!;\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n\n        if (isFinite(batchLength)) {\n            childData = distributeChildData(fields, batchLength, childData, columns, memo);\n            if (batchLength > 0) {\n                batchArgs[numBatches++] = [batchLength, childData.slice()];\n            }\n        }\n    }\n    return [\n        schema = new Schema<T>(fields, schema.metadata),\n        batchArgs.map((xs) => new RecordBatch(schema, ...xs))\n    ];\n}\n\n/** @ignore */\nfunction distributeChildData<T extends { [key: string]: DataType } = any>(fields: Field<T[keyof T]>[], batchLength: number, childData: Data<T[keyof T]>[], columns: Data<T[keyof T]>[][], memo: { numBatches: number }) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let length = 0, i = -1, n = columns.length;\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = childData[i]) && ((length = data.length) >= batchLength)) {\n            if (length === batchLength) {\n                childData[i] = data;\n            } else {\n                childData[i] = data.slice(0, batchLength);\n                data = data.slice(batchLength, length - batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(data));\n            }\n        } else {\n            (field = fields[i]).nullable || (fields[i] = field.clone({ nullable: true }) as Field<T[keyof T]>);\n            childData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return childData;\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { clampRange } from '../util/vector';\nimport { VectorType as V } from '../interfaces';\nimport { AbstractVector, Vector, Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\nexport interface BaseVector<T extends DataType = any> extends Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n    slice(begin?: number, end?: number): V<T>;\n    concat(...others: Vector<T>[]): Chunked<T>;\n    clone<R extends DataType = T>(data: Data<R>, children?: Vector<R>[]): V<R>;\n}\n\n/** @ignore */\nexport abstract class BaseVector<T extends DataType = any> extends AbstractVector<T>\n    implements Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n\n    protected _children?: Vector[];\n\n    constructor(data: Data<T>, children?: Vector[]) {\n        super();\n        this._children = children;\n        this.numChildren = data.childData.length;\n        this._bindDataAccessors(this.data = data);\n    }\n\n    public readonly data: Data<T>;\n    public readonly numChildren: number;\n\n    public get type() { return this.data.type; }\n    public get typeId() { return this.data.typeId; }\n    public get length() { return this.data.length; }\n    public get offset() { return this.data.offset; }\n    public get stride() { return this.data.stride; }\n    public get nullCount() { return this.data.nullCount; }\n    public get byteLength() { return this.data.byteLength; }\n    public get VectorName() { return `${Type[this.typeId]}Vector`; }\n\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n\n    public get values() { return this.data.values; }\n    public get typeIds() { return this.data.typeIds; }\n    public get nullBitmap() { return this.data.nullBitmap; }\n    public get valueOffsets() { return this.data.valueOffsets; }\n\n    public get [Symbol.toStringTag]() { return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`; }\n\n    public clone<R extends DataType = T>(data: Data<R>, children = this._children) {\n        return Vector.new<R>(data, children) as any;\n    }\n\n    public concat(...others: Vector<T>[]) {\n        return Chunked.concat<T>(this, ...others);\n    }\n\n    public slice(begin?: number, end?: number) {\n        // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n        // clamp between 0 and length, and wrap around on negative indices, e.g.\n        // slice(-1, 5) or slice(5, -1)\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public isValid(index: number): boolean {\n        if (this.nullCount > 0) {\n            const idx = this.offset + index;\n            const val = this.nullBitmap[idx >> 3];\n            const mask = (val & (1 << (idx % 8)));\n            return mask !== 0;\n        }\n        return true;\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Vector<R> | null {\n        return index < 0 || index >= this.numChildren ? null : (\n            (this._children || (this._children = []))[index] ||\n            (this._children[index] = Vector.new<R>(this.data.childData[index] as Data<R>))\n        ) as Vector<R>;\n    }\n\n    public toJSON(): any { return [...this]; }\n\n    protected _sliceInternal(self: this, begin: number, end: number) {\n        return self.clone(self.data.slice(begin, end - begin), null!);\n    }\n\n    // @ts-ignore\n    protected _bindDataAccessors(data: Data<T>) {\n        // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n    }\n}\n\n(BaseVector.prototype as any)[Symbol.isConcatSpreadable] = true;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\n\n/** @ignore */\nexport class BinaryVector extends BaseVector<Binary> {\n    public asUtf8() {\n        return Vector.new(this.data.clone(new Utf8()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class BoolVector extends BaseVector<Bool> {\n    public static from<TNull = any>(input: Iterable<boolean | TNull>): BoolVector;\n    public static from<TNull = any>(input: AsyncIterable<boolean | TNull>): Promise<BoolVector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Bool, TNull>): Chunked<Bool>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Bool, TNull>): Promise<Chunked<Bool>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<boolean | TNull> | AsyncIterable<boolean | TNull> | VectorBuilderOptions<Bool, TNull> | VectorBuilderOptionsAsync<Bool, TNull>) {\n        return vectorFromValuesWithType(() => new Bool(), input);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DateUnit } from '../enum';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Date_, DateDay, DateMillisecond  } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends Date_> = [Iterable<Date>, T['unit']];\n\n/** @ignore */\nexport class DateVector<T extends Date_ = Date_> extends BaseVector<T> {\n    public static from<T extends DateUnit.DAY>(...args: FromArgs<DateDay>): V<DateDay>;\n    public static from<T extends DateUnit.MILLISECOND>(...args: FromArgs<DateMillisecond>): V<DateMillisecond>;\n    public static from<T extends Date_, TNull = any>(input: Iterable<Date | TNull>): V<T>;\n    public static from<T extends Date_, TNull = any>(input: AsyncIterable<Date | TNull>): Promise<V<T>>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Date_, TNull = any>(...args: FromArgs<T> | [Iterable<Date | TNull> | AsyncIterable<Date | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>]) {\n        if (args.length === 2) {\n            return vectorFromValuesWithType(() => args[1] === DateUnit.DAY ? new DateDay() : new DateMillisecond() as T, args[0]);\n        }\n        return vectorFromValuesWithType(() => new DateMillisecond() as T, args[0]);\n    }\n}\n\n/** @ignore */\nexport class DateDayVector extends DateVector<DateDay> {}\n\n/** @ignore */\nexport class DateMillisecondVector extends DateVector<DateMillisecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class DecimalVector extends BaseVector<Decimal> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { DataType, Dictionary, TKeys } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends DataType = any, TKey extends TKeys = TKeys> = [Vector<T>, TKey, ArrayLike<number> | TKey['TArray']];\n\n/** @ignore */\nexport class DictionaryVector<T extends DataType = any, TKey extends TKeys = TKeys> extends BaseVector<Dictionary<T, TKey>> {\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: FromArgs<T, TKey>): V<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptions<Dictionary<T, TKey>>): Vector<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptionsAsync<Dictionary<T, TKey>>): Promise<Vector<Dictionary<T, TKey>>>;\n    /** @nocollapse */\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: any[]) {\n        if (args.length === 3) {\n            const [values, indices, keys] = args as FromArgs<T, TKey>;\n            const type = new Dictionary(values.type, indices, null, null);\n            return Vector.new(Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n        }\n        return vectorFromValuesWithType(() => args[0].type, args[0]);\n    }\n\n    constructor(data: Data<Dictionary<T, TKey>>) {\n        super(data);\n        this.indices = Vector.new(data.clone(this.type.indices));\n    }\n\n    public readonly indices: V<TKey>;\n\n    public get dictionary() { return <Vector<T>> this.data.dictionary; }\n    public reverseLookup(value: T) { return this.dictionary.indexOf(value); }\n    public getKey(idx: number): TKey['TValue'] | null { return this.indices.get(idx); }\n    public getValue(key: number): T['TValue'] | null { return this.dictionary.get(key); }\n    public setKey(idx: number, key: TKey['TValue'] | null) { return this.indices.set(idx, key); }\n    public setValue(key: number, value: T['TValue'] | null) { return this.dictionary.set(key, value); }\n}\n\n(DictionaryVector.prototype as any).indices = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { FixedSizeBinary } from '../type';\n\n/** @ignore */\nexport class FixedSizeBinaryVector extends BaseVector<FixedSizeBinary> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListVector<T extends DataType = any> extends BaseVector<FixedSizeList<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Float, Float16, Float32, Float64, FloatArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor } from '../interfaces';\n\n/** @ignore */\ntype FloatVectorConstructors =\n    typeof FloatVector   |\n    typeof Float16Vector |\n    typeof Float32Vector |\n    typeof Float64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Float, TNull = any> =\n    FloatArray                          |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FloatArrayCtor = TypedArrayConstructor<FloatArray>;\n\n/** @ignore */\nexport class FloatVector<T extends Float = Float> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof FloatVector, input: Uint16Array): Float16Vector;\n    public static from(this: typeof FloatVector, input: Float32Array): Float32Vector;\n    public static from(this: typeof FloatVector, input: Float64Array): Float64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Float16Vector,  input: FromInput<Float16, TNull>): Float16Vector;\n    public static from<TNull = any>(this: typeof Float32Vector,  input: FromInput<Float32, TNull>): Float32Vector;\n    public static from<TNull = any>(this: typeof Float64Vector,  input: FromInput<Float64, TNull>): Float64Vector;\n\n    // Not zero-copy\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Float, TNull = any>(this: FloatVectorConstructors, input: FromInput<T, TNull>) {\n\n        let ArrowType = vectorTypeToDataType(this);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as FloatArrayCtor) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // FloatVector.from with a TypedArray, e.g. `FloatVector.from(new Float32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is Float16 but the input type isn't a Uint16Array,\n                // let the Float16Builder handle casting the input values to Uint16s.\n                if (!convertTo16Bit(ArrowType, input.constructor)) {\n                    return Vector.new(Data.Float(type, 0, length, 0, null, input as FloatArray));\n                }\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer float type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized FloatVector input');\n    }\n}\n\n/** @ignore */\nexport class Float16Vector extends FloatVector<Float16> {\n    // Since JS doesn't have half floats, `toArray()` returns a zero-copy slice\n    // of the underlying Uint16Array data. This behavior ensures we don't incur\n    // extra compute or copies if you're calling `toArray()` in order to create\n    // a buffer for something like WebGL. Buf if you're using JS and want typed\n    // arrays of 4-to-8-byte precision, these methods will enumerate the values\n    // and clamp to the desired byte lengths.\n    public toFloat32Array() { return new Float32Array(this as Iterable<number>); }\n    public toFloat64Array() { return new Float64Array(this as Iterable<number>); }\n}\n\n/** @ignore */\nexport class Float32Vector extends FloatVector<Float32> {}\n/** @ignore */\nexport class Float64Vector extends FloatVector<Float64> {}\n\nconst convertTo16Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Float16) && (dataCtor !== Uint16Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: FloatArrayCtor) => {\n    switch (ctor) {\n        case Uint16Array:    return Float16;\n        case Float32Array:   return Float32;\n        case Float64Array:   return Float64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: FloatVectorConstructors) => {\n    switch (ctor) {\n        case Float16Vector: return Float16;\n        case Float32Vector: return Float32;\n        case Float64Vector: return Float64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalVector<T extends Interval = Interval> extends BaseVector<T> {}\n/** @ignore */\nexport class IntervalDayTimeVector extends IntervalVector<IntervalDayTime> {}\n/** @ignore */\nexport class IntervalYearMonthVector extends IntervalVector<IntervalYearMonth> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { BigInt64Array, BigUint64Array } from '../util/compat';\nimport { toBigInt64Array, toBigUint64Array } from '../util/buffer';\nimport { Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64, IntArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor, BigIntArrayConstructor, BigIntArray } from '../interfaces';\n\n/** @ignore */\ntype IntVectorConstructors =\n    typeof IntVector    |\n    typeof Int8Vector   |\n    typeof Int16Vector  |\n    typeof Int32Vector  |\n    typeof Uint8Vector  |\n    typeof Uint16Vector |\n    typeof Uint32Vector |\n    typeof Int64Vector  |\n    typeof Uint64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Int, TNull = any> =\n    IntArray | BigIntArray              |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FromArgs<T extends Int, TNull = any> = [FromInput<T, TNull>, boolean?];\n\n/** @ignore */\ntype IntArrayCtor = TypedArrayConstructor<IntArray> | BigIntArrayConstructor<BigIntArray>;\n\n/** @ignore */\nexport class IntVector<T extends Int = Int> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof IntVector, input: Int8Array): Int8Vector;\n    public static from(this: typeof IntVector, input: Int16Array): Int16Vector;\n    public static from(this: typeof IntVector, input: Int32Array): Int32Vector;\n    public static from(this: typeof IntVector, input: BigInt64Array): Int64Vector;\n    public static from(this: typeof IntVector, input: Int32Array, is64bit: true): Int64Vector;\n    public static from(this: typeof IntVector, input: Uint8Array): Uint8Vector;\n    public static from(this: typeof IntVector, input: Uint16Array): Uint16Vector;\n    public static from(this: typeof IntVector, input: Uint32Array): Uint32Vector;\n    public static from(this: typeof IntVector, input: BigUint64Array): Uint64Vector;\n    public static from(this: typeof IntVector, input: Uint32Array, is64bit: true): Uint64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Int8Vector,   input: FromInput<Int8, TNull>): Int8Vector;\n    public static from<TNull = any>(this: typeof Int16Vector,  input: FromInput<Int16, TNull>): Int16Vector;\n    public static from<TNull = any>(this: typeof Int32Vector,  input: FromInput<Int32, TNull>): Int32Vector;\n    public static from<TNull = any>(this: typeof Int64Vector,  input: FromInput<Int64, TNull>): Int64Vector;\n    public static from<TNull = any>(this: typeof Uint8Vector,  input: FromInput<Uint8, TNull>): Uint8Vector;\n    public static from<TNull = any>(this: typeof Uint16Vector, input: FromInput<Uint16, TNull>): Uint16Vector;\n    public static from<TNull = any>(this: typeof Uint32Vector, input: FromInput<Uint32, TNull>): Uint32Vector;\n    public static from<TNull = any>(this: typeof Uint64Vector, input: FromInput<Uint64, TNull>): Uint64Vector;\n\n    // Not zero-copy\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Int, TNull = any>(this: IntVectorConstructors, ...args: FromArgs<T, TNull>) {\n\n        let [input, is64bit = false] = args;\n        let ArrowType = vectorTypeToDataType(this, is64bit);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as IntArrayCtor, is64bit) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // IntVector.from with a TypedArray, e.g. `IntVector.from(new Int32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is 64bit but the input type is 32bit pairs, update the logical length\n                if (convert32To64Bit(ArrowType, input.constructor)) {\n                    length *= 0.5;\n                }\n                return Vector.new(Data.Int(type, 0, length, 0, null, input as IntArray));\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer integer type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized IntVector input');\n    }\n}\n\n/** @ignore */\nexport class Int8Vector extends IntVector<Int8> {}\n/** @ignore */\nexport class Int16Vector extends IntVector<Int16> {}\n/** @ignore */\nexport class Int32Vector extends IntVector<Int32> {}\n/** @ignore */\nexport class Int64Vector extends IntVector<Int64> {\n    public toBigInt64Array() {\n        return toBigInt64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigInt64Array;\n    public get values64(): BigInt64Array {\n        return this._values64 || (this._values64 = this.toBigInt64Array());\n    }\n}\n\n/** @ignore */\nexport class Uint8Vector extends IntVector<Uint8> {}\n/** @ignore */\nexport class Uint16Vector extends IntVector<Uint16> {}\n/** @ignore */\nexport class Uint32Vector extends IntVector<Uint32> {}\n/** @ignore */\nexport class Uint64Vector extends IntVector<Uint64> {\n    public toBigUint64Array() {\n        return toBigUint64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigUint64Array;\n    public get values64(): BigUint64Array {\n        return this._values64 || (this._values64 = this.toBigUint64Array());\n    }\n}\n\nconst convert32To64Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Int64 || typeCtor === Uint64) &&\n           (dataCtor === Int32Array || dataCtor === Uint32Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: IntArrayCtor, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Array:      return Int8;\n        case Int16Array:     return Int16;\n        case Int32Array:     return is64bit ? Int64 : Int32;\n        case BigInt64Array:  return Int64;\n        case Uint8Array:     return Uint8;\n        case Uint16Array:    return Uint16;\n        case Uint32Array:    return is64bit ? Uint64 : Uint32;\n        case BigUint64Array: return Uint64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: IntVectorConstructors, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Vector:   return Int8;\n        case Int16Vector:  return Int16;\n        case Int32Vector:  return is64bit ? Int64 : Int32;\n        case Int64Vector:  return Int64;\n        case Uint8Vector:  return Uint8;\n        case Uint16Vector: return Uint16;\n        case Uint32Vector: return is64bit ? Uint64 : Uint32;\n        case Uint64Vector: return Uint64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, List } from '../type';\n\n/** @ignore */\nexport class ListVector<T extends DataType = any> extends BaseVector<List<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MapRow } from './row';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { DataType, Map_, Struct, List } from '../type';\n\n/** @ignore */\nexport class MapVector<K extends DataType = any, V extends DataType = any> extends BaseVector<Map_<K, V>> {\n    public asList() {\n        const child = this.type.children[0] as Field<Struct<{ key: K, value: V }>>;\n        return Vector.new(this.data.clone(new List<Struct<{ key: K, value: V }>>(child)));\n    }\n    public bind(index: number): Map_<K, V>['TValue'] {\n        const child = this.getChildAt<Struct<{ key: K, value: V }>>(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new MapRow(child!.slice(begin, end));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class NullVector extends BaseVector<Null> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { StructRow } from './row';\nimport { BaseVector } from './base';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nexport class StructVector<T extends { [key: string]: DataType } = any> extends BaseVector<Struct<T>> {\n    // @ts-ignore\n    private _row: StructRow<T>;\n    public bind(index: number): Struct<T>['TValue'] {\n        const proto = this._row || (this._row = new StructRow<T>(this));\n        const bound = Object.create(proto);\n        bound[kRowIndex] = index;\n        return bound;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampVector<T extends Timestamp = Timestamp> extends BaseVector<T> {}\n/** @ignore */\nexport class TimestampSecondVector extends TimestampVector<TimestampSecond> {}\n/** @ignore */\nexport class TimestampMillisecondVector extends TimestampVector<TimestampMillisecond> {}\n/** @ignore */\nexport class TimestampMicrosecondVector extends TimestampVector<TimestampMicrosecond> {}\n/** @ignore */\nexport class TimestampNanosecondVector extends TimestampVector<TimestampNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeVector<T extends Time = Time> extends BaseVector<T> {}\n/** @ignore */\nexport class TimeSecondVector extends TimeVector<TimeSecond> {}\n/** @ignore */\nexport class TimeMillisecondVector extends TimeVector<TimeMillisecond> {}\n/** @ignore */\nexport class TimeMicrosecondVector extends TimeVector<TimeMicrosecond> {}\n/** @ignore */\nexport class TimeNanosecondVector extends TimeVector<TimeNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Union, DenseUnion, SparseUnion} from '../type';\n\n/** @ignore */\nexport class UnionVector<T extends Union = Union> extends BaseVector<T> {\n    public get typeIdToChildIndex() { return this.data.type.typeIdToChildIndex; }\n}\n\n/** @ignore */\nexport class DenseUnionVector extends UnionVector<DenseUnion> {\n    public get valueOffsets() { return this.data.valueOffsets!; }\n}\n\n/** @ignore */\nexport class SparseUnionVector extends UnionVector<SparseUnion> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class Utf8Vector extends BaseVector<Utf8> {\n    public static from<TNull = any>(input: Iterable<string | TNull>): Utf8Vector;\n    public static from<TNull = any>(input: AsyncIterable<string | TNull>): Promise<Utf8Vector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Utf8, TNull>): Chunked<Utf8>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Utf8, TNull>): Promise<Chunked<Utf8>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<string | TNull> | AsyncIterable<string | TNull> | VectorBuilderOptions<Utf8, TNull> | VectorBuilderOptionsAsync<Utf8, TNull>) {\n        return vectorFromValuesWithType(() => new Utf8(), input);\n    }\n    public asBinary() {\n        return Vector.new(this.data.clone(new Binary()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function partial0<T>(visit: (node: T) => any) {\n    return function(this: T) { return visit(this); };\n}\n\n/** @ignore */\nexport function partial1<T>(visit: (node: T, a: any) => any) {\n    return function(this: T, a: any) { return visit(this, a); };\n}\n\n/** @ignore */\nexport function partial2<T>(visit: (node: T, a: any, b: any) => any) {\n    return function(this: T, a: any, b: any) { return visit(this, a, b); };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { BN } from '../util/bn';\nimport { Visitor } from '../visitor';\nimport { decodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { uint16ToFloat64 } from '../util/math';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface GetVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, index: number): T['TValue'];\n    visitMany<T extends VectorType>  (nodes: T[], indices: number[]): T['TValue'][];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    visitNull                 <T extends Null>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt                  <T extends Int>                  (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt16                <T extends Int16>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt32                <T extends Int32>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt64                <T extends Int64>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat                <T extends Float>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBinary               <T extends Binary>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitDate                 <T extends Date_>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>, index: number): T['TValue'];\n    visitTime                 <T extends Time>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>, index: number): T['TValue'];\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitList                 <T extends List>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitStruct               <T extends Struct>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUnion                <T extends Union>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>, index: number): T['TValue'];\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitInterval             <T extends Interval>             (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>, index: number): T['TValue'];\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>, index: number): T['TValue'];\n}\n\n/** @ignore */\nexport class GetVisitor extends Visitor {}\n\n/** @ignore */const epochDaysToMs = (data: Int32Array, index: number) => 86400000 * data[index];\n/** @ignore */const epochMillisecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */const epochMicrosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */const epochNanosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n\n/** @ignore */const epochMillisecondsToDate = (epochMs: number) => new Date(epochMs);\n/** @ignore */const epochDaysToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */const epochMillisecondsLongToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n\n/** @ignore */\nconst getNull = <T extends Null>(_vector: VectorType<T>, _index: number): T['TValue'] => null;\n/** @ignore */\nconst getVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    return x != null && y != null ? values.subarray(x, y) : null as any;\n};\n\n/** @ignore */\nconst getBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number): T['TValue'] => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n\n/** @ignore */\ntype Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */\ntype Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst getDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number): T['TValue'] => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number): T['TValue'] => uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts         = <T extends Numeric2X>({ stride, values, type }: VectorType<T>, index: number): T['TValue'] => <any> BN.new(values.subarray(stride * index, stride * (index + 1)), type.isSigned);\n/** @ignore */\nconst getFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number): T['TValue'] => values.subarray(stride * index, stride * (index + 1));\n\n/** @ignore */\nconst getBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? decodeUtf8(bytes) : null as any;\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = <T extends Int>(vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.bitWidth < 64\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getBigInts(vector as VectorType<Numeric2X>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = <T extends Float> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.precision !== Precision.HALF\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getFloat16(vector as VectorType<Float16>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = <T extends Date_> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.unit === DateUnit.DAY\n        ? getDateDay(vector as VectorType<DateDay>, index)\n        : getDateMillisecond(vector as VectorType<DateMillisecond>, index)\n);\n\n/** @ignore */\nconst getTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number): T['TValue'] => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number): T['TValue'] => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimestampSecond(vector as VectorType<TimestampSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/** @ignore */\nconst getTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/* istanbul ignore next */\n/** @ignore */\nconst getTime            = <T extends Time>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimeSecond(vector as VectorType<TimeSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimeMillisecond(vector as VectorType<TimeMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimeNanosecond(vector as VectorType<TimeNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number): T['TValue'] => BN.decimal(values.subarray(4 * index, 4 * (index + 1)));\n\n/** @ignore */\nconst getList = <T extends List>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { valueOffsets, stride } = vector;\n    return child.slice(valueOffsets[index * stride], valueOffsets[(index * stride) + 1]) as T['TValue'];\n};\n\n/** @ignore */\nconst getMap = <T extends Map_>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/** @ignore */\nconst getStruct = <T extends Struct>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number): V['TValue'] => {\n    return vector.type.mode === UnionMode.Dense ?\n        getDenseUnion(vector as VectorType<DenseUnion>, index) :\n        getSparseUnion(vector as VectorType<SparseUnion>, index);\n};\n\n/** @ignore */\nconst getDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(vector.valueOffsets[index]) : null;\n};\n\n/** @ignore */\nconst getSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(index) : null;\n};\n\n/** @ignore */\nconst getDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.getValue(vector.getKey(index)!);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = <T extends Interval>(vector: VectorType<T>, index: number): T['TValue'] =>\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? getIntervalDayTime(vector as VectorType<IntervalDayTime>, index)\n        : getIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index);\n\n/** @ignore */\nconst getIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number): T['TValue'] => values.subarray(2 * index, 2 * (index + 1));\n\n/** @ignore */\nconst getIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number): T['TValue'] => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = interval / 12 | 0; /* years */\n    int32s[1] = interval % 12 | 0; /* months */\n    return int32s;\n};\n\n/** @ignore */\nconst getFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    return child.slice(index * stride, (index + 1) * stride) as T['TValue'];\n};\n\nGetVisitor.prototype.visitNull                 =                 getNull;\nGetVisitor.prototype.visitBool                 =                 getBool;\nGetVisitor.prototype.visitInt                  =                  getInt;\nGetVisitor.prototype.visitInt8                 =              getNumeric;\nGetVisitor.prototype.visitInt16                =              getNumeric;\nGetVisitor.prototype.visitInt32                =              getNumeric;\nGetVisitor.prototype.visitInt64                =              getBigInts;\nGetVisitor.prototype.visitUint8                =              getNumeric;\nGetVisitor.prototype.visitUint16               =              getNumeric;\nGetVisitor.prototype.visitUint32               =              getNumeric;\nGetVisitor.prototype.visitUint64               =              getBigInts;\nGetVisitor.prototype.visitFloat                =                getFloat;\nGetVisitor.prototype.visitFloat16              =              getFloat16;\nGetVisitor.prototype.visitFloat32              =              getNumeric;\nGetVisitor.prototype.visitFloat64              =              getNumeric;\nGetVisitor.prototype.visitUtf8                 =                 getUtf8;\nGetVisitor.prototype.visitBinary               =               getBinary;\nGetVisitor.prototype.visitFixedSizeBinary      =      getFixedSizeBinary;\nGetVisitor.prototype.visitDate                 =                 getDate;\nGetVisitor.prototype.visitDateDay              =              getDateDay;\nGetVisitor.prototype.visitDateMillisecond      =      getDateMillisecond;\nGetVisitor.prototype.visitTimestamp            =            getTimestamp;\nGetVisitor.prototype.visitTimestampSecond      =      getTimestampSecond;\nGetVisitor.prototype.visitTimestampMillisecond = getTimestampMillisecond;\nGetVisitor.prototype.visitTimestampMicrosecond = getTimestampMicrosecond;\nGetVisitor.prototype.visitTimestampNanosecond  =  getTimestampNanosecond;\nGetVisitor.prototype.visitTime                 =                 getTime;\nGetVisitor.prototype.visitTimeSecond           =           getTimeSecond;\nGetVisitor.prototype.visitTimeMillisecond      =      getTimeMillisecond;\nGetVisitor.prototype.visitTimeMicrosecond      =      getTimeMicrosecond;\nGetVisitor.prototype.visitTimeNanosecond       =       getTimeNanosecond;\nGetVisitor.prototype.visitDecimal              =              getDecimal;\nGetVisitor.prototype.visitList                 =                 getList;\nGetVisitor.prototype.visitStruct               =               getStruct;\nGetVisitor.prototype.visitUnion                =                getUnion;\nGetVisitor.prototype.visitDenseUnion           =           getDenseUnion;\nGetVisitor.prototype.visitSparseUnion          =          getSparseUnion;\nGetVisitor.prototype.visitDictionary           =           getDictionary;\nGetVisitor.prototype.visitInterval             =             getInterval;\nGetVisitor.prototype.visitIntervalDayTime      =      getIntervalDayTime;\nGetVisitor.prototype.visitIntervalYearMonth    =    getIntervalYearMonth;\nGetVisitor.prototype.visitFixedSizeList        =        getFixedSizeList;\nGetVisitor.prototype.visitMap                  =                  getMap;\n\n/** @ignore */\nexport const instance = new GetVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { getBool, iterateBits } from '../util/bit';\nimport { createElementComparator } from '../util/vector';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IndexOfVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, value: T['TValue'] | null, index?: number): number;\n    visitMany <T extends VectorType>  (nodes: T[], values: (T['TValue'] | null)[], indices: (number | undefined)[]): number[];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, value: VectorType<T>['TValue'] | null, index?: number) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, value:         T['TValue'] | null, index?: number) => number;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitList                 <T extends List>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n}\n\n/** @ignore */\nexport class IndexOfVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullIndexOf(vector: VectorType<Null>, searchElement?: null) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && vector.length > 0 ? 0 : -1;\n}\n\n/** @ignore */\nfunction indexOfNull<T extends DataType>(vector: VectorType<T>, fromIndex?: number): number {\n    const { nullBitmap } = vector;\n    if (!nullBitmap || vector.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of iterateBits(nullBitmap, vector.data.offset + (fromIndex || 0), vector.length, nullBitmap, getBool)) {\n        if (!isValid) { return i; }\n        ++i;\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfValue<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    if (searchElement === undefined) { return -1; }\n    if (searchElement === null) { return indexOfNull(vector, fromIndex); }\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfUnion<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nIndexOfVisitor.prototype.visitNull                 =  nullIndexOf;\nIndexOfVisitor.prototype.visitBool                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt                  = indexOfValue;\nIndexOfVisitor.prototype.visitInt8                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16                = indexOfValue;\nIndexOfVisitor.prototype.visitInt32                = indexOfValue;\nIndexOfVisitor.prototype.visitInt64                = indexOfValue;\nIndexOfVisitor.prototype.visitUint8                = indexOfValue;\nIndexOfVisitor.prototype.visitUint16               = indexOfValue;\nIndexOfVisitor.prototype.visitUint32               = indexOfValue;\nIndexOfVisitor.prototype.visitUint64               = indexOfValue;\nIndexOfVisitor.prototype.visitFloat                = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64              = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8                 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary               = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary      = indexOfValue;\nIndexOfVisitor.prototype.visitDate                 = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay              = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp            = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond  = indexOfValue;\nIndexOfVisitor.prototype.visitTime                 = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond           = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond       = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal              = indexOfValue;\nIndexOfVisitor.prototype.visitList                 = indexOfValue;\nIndexOfVisitor.prototype.visitStruct               = indexOfValue;\nIndexOfVisitor.prototype.visitUnion                = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion           = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion          = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary           = indexOfValue;\nIndexOfVisitor.prototype.visitInterval             = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime      = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth    = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList        = indexOfValue;\nIndexOfVisitor.prototype.visitMap                  = indexOfValue;\n\n/** @ignore */\nexport const instance = new IndexOfVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { iterateBits } from '../util/bit';\nimport { instance as getVisitor } from './get';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IteratorVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): IterableIterator<T['TValue'] | null>;\n    visitMany <T extends VectorType>(nodes: T[]): IterableIterator<T['TValue'] | null>[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    visitNull                 <T extends Null>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt                  <T extends Int>                  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt16                <T extends Int16>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt32                <T extends Int32>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt64                <T extends Int64>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat                <T extends Float>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBinary               <T extends Binary>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDate                 <T extends Date_>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTime                 <T extends Time>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitList                 <T extends List>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitStruct               <T extends Struct>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUnion                <T extends Union>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInterval             <T extends Interval>             (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n}\n\n/** @ignore */\nexport class IteratorVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullableIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n    const getFn = getVisitor.getVisitFn(vector);\n    return iterateBits<T['TValue'] | null>(\n        vector.nullBitmap, vector.offset, vector.length, vector,\n        (vec: VectorType<T>, idx: number, nullByte: number, nullBit: number) =>\n            ((nullByte & 1 << nullBit) !== 0) ? getFn(vec, idx) : null\n    );\n}\n\n/** @ignore */\nfunction vectorIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n\n    // If nullable, iterate manually\n    if (vector.nullCount > 0) {\n        return nullableIterator<T>(vector);\n    }\n\n    const { type, typeId, length } = vector;\n\n    // Fast case, defer to native iterators if possible\n    if (vector.stride === 1 && (\n        (typeId === Type.Timestamp) ||\n        (typeId === Type.Int && (type as Int).bitWidth !== 64) ||\n        (typeId === Type.Time && (type as Time).bitWidth !== 64) ||\n        (typeId === Type.Float && (type as Float).precision > 0 /* Precision.HALF */)\n    )) {\n        return vector.values.subarray(0, length)[Symbol.iterator]();\n    }\n\n    // Otherwise, iterate manually\n    return (function* (getFn) {\n        for (let index = -1; ++index < length;) {\n            yield getFn(vector, index);\n        }\n    })(getVisitor.getVisitFn(vector));\n}\n\nIteratorVisitor.prototype.visitNull                 = vectorIterator;\nIteratorVisitor.prototype.visitBool                 = vectorIterator;\nIteratorVisitor.prototype.visitInt                  = vectorIterator;\nIteratorVisitor.prototype.visitInt8                 = vectorIterator;\nIteratorVisitor.prototype.visitInt16                = vectorIterator;\nIteratorVisitor.prototype.visitInt32                = vectorIterator;\nIteratorVisitor.prototype.visitInt64                = vectorIterator;\nIteratorVisitor.prototype.visitUint8                = vectorIterator;\nIteratorVisitor.prototype.visitUint16               = vectorIterator;\nIteratorVisitor.prototype.visitUint32               = vectorIterator;\nIteratorVisitor.prototype.visitUint64               = vectorIterator;\nIteratorVisitor.prototype.visitFloat                = vectorIterator;\nIteratorVisitor.prototype.visitFloat16              = vectorIterator;\nIteratorVisitor.prototype.visitFloat32              = vectorIterator;\nIteratorVisitor.prototype.visitFloat64              = vectorIterator;\nIteratorVisitor.prototype.visitUtf8                 = vectorIterator;\nIteratorVisitor.prototype.visitBinary               = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary      = vectorIterator;\nIteratorVisitor.prototype.visitDate                 = vectorIterator;\nIteratorVisitor.prototype.visitDateDay              = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp            = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond  = vectorIterator;\nIteratorVisitor.prototype.visitTime                 = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond           = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond       = vectorIterator;\nIteratorVisitor.prototype.visitDecimal              = vectorIterator;\nIteratorVisitor.prototype.visitList                 = vectorIterator;\nIteratorVisitor.prototype.visitStruct               = vectorIterator;\nIteratorVisitor.prototype.visitUnion                = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion           = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion          = vectorIterator;\nIteratorVisitor.prototype.visitDictionary           = vectorIterator;\nIteratorVisitor.prototype.visitInterval             = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime      = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth    = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList        = vectorIterator;\nIteratorVisitor.prototype.visitMap                  = vectorIterator;\n\n/** @ignore */\nexport const instance = new IteratorVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { instance as iteratorVisitor } from './iterator';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface ToArrayVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): T['TArray'];\n    visitMany<T extends VectorType>(nodes: T[]): T['TArray'][];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    visitNull                                    <T extends Null>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBool                                    <T extends Bool>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt                                     <T extends Int>                 (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt8                                    <T extends Int8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt16                                   <T extends Int16>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt32                                   <T extends Int32>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt64                                   <T extends Int64>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint8                                   <T extends Uint8>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint16                                  <T extends Uint16>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint32                                  <T extends Uint32>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint64                                  <T extends Uint64>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat                                   <T extends Float>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat16                                 <T extends Float16>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat32                                 <T extends Float32>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat64                                 <T extends Float64>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUtf8                                    <T extends Utf8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBinary                                  <T extends Binary>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeBinary                         <T extends FixedSizeBinary>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDate                                    <T extends Date_>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateDay                                 <T extends DateDay>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateMillisecond                         <T extends DateMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestamp                               <T extends Timestamp>           (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampSecond                         <T extends TimestampSecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMillisecond                    <T extends TimestampMillisecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMicrosecond                    <T extends TimestampMicrosecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampNanosecond                     <T extends TimestampNanosecond> (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTime                                    <T extends Time>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeSecond                              <T extends TimeSecond>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMillisecond                         <T extends TimeMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMicrosecond                         <T extends TimeMicrosecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeNanosecond                          <T extends TimeNanosecond>      (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDecimal                                 <T extends Decimal>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitList                <R extends DataType, T extends List<R>>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitStruct                                  <T extends Struct>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUnion                                   <T extends Union>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDenseUnion                              <T extends DenseUnion>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitSparseUnion                             <T extends SparseUnion>         (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDictionary          <R extends DataType, T extends Dictionary<R>>       (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInterval                                <T extends Interval>            (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalDayTime                         <T extends IntervalDayTime>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalYearMonth                       <T extends IntervalYearMonth>   (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeList       <R extends DataType, T extends FixedSizeList<R>>    (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitMap                                     <T extends Map_>                (vector: VectorType<T>): VectorType<T>['TArray'];\n}\n\n/** @ignore */\nexport class ToArrayVisitor extends Visitor {}\n\n/** @ignore */\nfunction arrayOfVector<T extends DataType>(vector: VectorType<T>): T['TArray'] {\n\n    const { type, length, stride } = vector;\n\n    // Fast case, return subarray if possible\n    switch (type.typeId) {\n        case Type.Int:\n        case Type.Float: case Type.Decimal:\n        case Type.Time: case Type.Timestamp:\n            return vector.values.subarray(0, length * stride);\n    }\n\n    // Otherwise if not primitive, slow copy\n    return [...iteratorVisitor.visit(vector)] as T['TArray'];\n}\n\nToArrayVisitor.prototype.visitNull                 = arrayOfVector;\nToArrayVisitor.prototype.visitBool                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt                  = arrayOfVector;\nToArrayVisitor.prototype.visitInt8                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt16                = arrayOfVector;\nToArrayVisitor.prototype.visitInt32                = arrayOfVector;\nToArrayVisitor.prototype.visitInt64                = arrayOfVector;\nToArrayVisitor.prototype.visitUint8                = arrayOfVector;\nToArrayVisitor.prototype.visitUint16               = arrayOfVector;\nToArrayVisitor.prototype.visitUint32               = arrayOfVector;\nToArrayVisitor.prototype.visitUint64               = arrayOfVector;\nToArrayVisitor.prototype.visitFloat                = arrayOfVector;\nToArrayVisitor.prototype.visitFloat16              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat32              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat64              = arrayOfVector;\nToArrayVisitor.prototype.visitUtf8                 = arrayOfVector;\nToArrayVisitor.prototype.visitBinary               = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeBinary      = arrayOfVector;\nToArrayVisitor.prototype.visitDate                 = arrayOfVector;\nToArrayVisitor.prototype.visitDateDay              = arrayOfVector;\nToArrayVisitor.prototype.visitDateMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestamp            = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampSecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampNanosecond  = arrayOfVector;\nToArrayVisitor.prototype.visitTime                 = arrayOfVector;\nToArrayVisitor.prototype.visitTimeSecond           = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMicrosecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeNanosecond       = arrayOfVector;\nToArrayVisitor.prototype.visitDecimal              = arrayOfVector;\nToArrayVisitor.prototype.visitList                 = arrayOfVector;\nToArrayVisitor.prototype.visitStruct               = arrayOfVector;\nToArrayVisitor.prototype.visitUnion                = arrayOfVector;\nToArrayVisitor.prototype.visitDenseUnion           = arrayOfVector;\nToArrayVisitor.prototype.visitSparseUnion          = arrayOfVector;\nToArrayVisitor.prototype.visitDictionary           = arrayOfVector;\nToArrayVisitor.prototype.visitInterval             = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalDayTime      = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalYearMonth    = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeList        = arrayOfVector;\nToArrayVisitor.prototype.visitMap                  = arrayOfVector;\n\n/** @ignore */\nexport const instance = new ToArrayVisitor();\n","/* istanbul ignore file */\n\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Type, TimeUnit } from '../enum';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n} from '../type';\n\n/** @ignore */ const sum = (x: number, y: number) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type: DataType) => `Cannot compute the byte width of variable-width column ${type}`;\n\n/** @ignore */\nexport interface ByteWidthVisitor extends Visitor {\n    visit<T extends DataType>(node: T): number;\n    visitMany<T extends DataType>(nodes: T[]): number[];\n    getVisitFn<T extends Type>    (node: T): (type: DataType<T>) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (type: T) => number;\n}\n\n/** @ignore */\nexport class ByteWidthVisitor extends Visitor {\n    public visitNull            (____: Null            ) { return 0; }\n    public visitInt             (type: Int             ) { return type.bitWidth / 8; }\n    public visitFloat           (type: Float           ) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    public visitBinary          (type: Binary          ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitUtf8            (type: Utf8            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitBool            (____: Bool            ) { return 1 / 8; }\n    public visitDecimal         (____: Decimal         ) { return 16; }\n    public visitDate            (type: Date_           ) { return (type.unit + 1) * 4; }\n    public visitTime            (type: Time            ) { return type.bitWidth / 8; }\n    public visitTimestamp       (type: Timestamp       ) { return type.unit === TimeUnit.SECOND ? 4 : 8; }\n    public visitInterval        (type: Interval        ) { return (type.unit + 1) * 4; }\n    public visitList            (type: List            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitStruct          (type: Struct          ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitUnion           (type: Union           ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitFixedSizeBinary (type: FixedSizeBinary ) { return type.byteWidth; }\n    public visitFixedSizeList   (type: FixedSizeList   ) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    public visitMap             (type: Map_            ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitDictionary      (type: Dictionary      ) { return this.visit(type.indices); }\n    public visitFields          (fields: Field[]       ) { return (fields || []).map((field) => this.visit(field.type)); }\n    public visitSchema          (schema: Schema        ) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\n\n/** @ignore */\nexport const instance = new ByteWidthVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, VectorCtor } from '../interfaces';\n\nimport { BinaryVector } from '../vector/binary';\nimport { BoolVector } from '../vector/bool';\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\nimport { DecimalVector } from '../vector/decimal';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\nimport { ListVector } from '../vector/list';\nimport { MapVector } from '../vector/map';\nimport { NullVector } from '../vector/null';\nimport { StructVector } from '../vector/struct';\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\nimport { Utf8Vector } from '../vector/utf8';\n\n/** @ignore */\nexport interface GetVectorConstructor extends Visitor {\n    visit<T extends Type>(node: T): VectorCtor<T>;\n    visitMany <T extends Type>(nodes: T[]): VectorCtor<T>[];\n    getVisitFn<T extends Type>(node: T): () => VectorCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => VectorCtor<T>;\n}\n\n/** @ignore */\nexport class GetVectorConstructor extends Visitor {\n    public visitNull                 () { return NullVector; }\n    public visitBool                 () { return BoolVector; }\n    public visitInt                  () { return IntVector; }\n    public visitInt8                 () { return Int8Vector; }\n    public visitInt16                () { return Int16Vector; }\n    public visitInt32                () { return Int32Vector; }\n    public visitInt64                () { return Int64Vector; }\n    public visitUint8                () { return Uint8Vector; }\n    public visitUint16               () { return Uint16Vector; }\n    public visitUint32               () { return Uint32Vector; }\n    public visitUint64               () { return Uint64Vector; }\n    public visitFloat                () { return FloatVector; }\n    public visitFloat16              () { return Float16Vector; }\n    public visitFloat32              () { return Float32Vector; }\n    public visitFloat64              () { return Float64Vector; }\n    public visitUtf8                 () { return Utf8Vector; }\n    public visitBinary               () { return BinaryVector; }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryVector; }\n    public visitDate                 () { return DateVector; }\n    public visitDateDay              () { return DateDayVector; }\n    public visitDateMillisecond      () { return DateMillisecondVector; }\n    public visitTimestamp            () { return TimestampVector; }\n    public visitTimestampSecond      () { return TimestampSecondVector; }\n    public visitTimestampMillisecond () { return TimestampMillisecondVector; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondVector; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondVector; }\n    public visitTime                 () { return TimeVector; }\n    public visitTimeSecond           () { return TimeSecondVector; }\n    public visitTimeMillisecond      () { return TimeMillisecondVector; }\n    public visitTimeMicrosecond      () { return TimeMicrosecondVector; }\n    public visitTimeNanosecond       () { return TimeNanosecondVector; }\n    public visitDecimal              () { return DecimalVector; }\n    public visitList                 () { return ListVector; }\n    public visitStruct               () { return StructVector; }\n    public visitUnion                () { return UnionVector; }\n    public visitDenseUnion           () { return DenseUnionVector; }\n    public visitSparseUnion          () { return SparseUnionVector; }\n    public visitDictionary           () { return DictionaryVector; }\n    public visitInterval             () { return IntervalVector; }\n    public visitIntervalDayTime      () { return IntervalDayTimeVector; }\n    public visitIntervalYearMonth    () { return IntervalYearMonthVector; }\n    public visitFixedSizeList        () { return FixedSizeListVector; }\n    public visitMap                  () { return MapVector; }\n}\n\n/** @ignore */\nexport const instance = new GetVectorConstructor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { Vector } from '../vector';\nexport { BaseVector } from './base';\nexport { BinaryVector } from './binary';\nexport { BoolVector } from './bool';\nexport { Chunked } from './chunked';\nexport { DateVector, DateDayVector, DateMillisecondVector } from './date';\nexport { DecimalVector } from './decimal';\nexport { DictionaryVector } from './dictionary';\nexport { FixedSizeBinaryVector } from './fixedsizebinary';\nexport { FixedSizeListVector } from './fixedsizelist';\nexport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from './float';\nexport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from './interval';\nexport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from './int';\nexport { ListVector } from './list';\nexport { MapVector } from './map';\nexport { NullVector } from './null';\nexport { StructVector } from './struct';\nexport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from './timestamp';\nexport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from './time';\nexport { UnionVector, DenseUnionVector, SparseUnionVector } from './union';\nexport { Utf8Vector } from './utf8';\nexport { MapRow, StructRow } from './row';\n\nimport * as fn from '../util/fn';\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { setBool } from '../util/bit';\nimport { isIterable, isAsyncIterable } from '../util/compat';\nimport { Builder, IterableBuilderOptions } from '../builder';\nimport { VectorType as V, VectorCtorArgs } from '../interfaces';\nimport { instance as getVisitor } from '../visitor/get';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as indexOfVisitor } from '../visitor/indexof';\nimport { instance as toArrayVisitor } from '../visitor/toarray';\nimport { instance as iteratorVisitor } from '../visitor/iterator';\nimport { instance as byteWidthVisitor } from '../visitor/bytewidth';\nimport { instance as getVectorConstructor } from '../visitor/vectorctor';\n\ndeclare module '../vector' {\n    namespace Vector {\n        export { newVector as new };\n        export { vectorFrom as from };\n    }\n}\n\ndeclare module './base' {\n    namespace BaseVector {\n        export { vectorFrom as from };\n    }\n    interface BaseVector<T extends DataType> {\n        get(index: number): T['TValue'] | null;\n        set(index: number, value: T['TValue'] | null): void;\n        indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n        toArray(): T['TArray'];\n        getByteWidth(): number;\n        [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n    }\n}\n\n/** @nocollapse */\nVector.new = newVector;\n\n/** @nocollapse */\nVector.from = vectorFrom;\n\n/** @ignore */\nfunction newVector<T extends DataType>(data: Data<T>, ...args: VectorCtorArgs<V<T>>): V<T> {\n    return new (getVectorConstructor.getVisitFn<T>(data)())(data, ...args) as V<T>;\n}\n\n/** @ignore */\nexport interface VectorBuilderOptions<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: Iterable<T['TValue'] | TNull>; }\n/** @ignore */\nexport interface VectorBuilderOptionsAsync<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: AsyncIterable<T['TValue'] | TNull>; }\n\n/** @ignore */\nexport function vectorFromValuesWithType<T extends DataType, TNull = any>(newDataType: () => T, input: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    if (isIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as V<T>;\n    } else if (isAsyncIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as Promise<V<T>>;\n    }\n    const {\n        'values': values = [],\n        'type': type = newDataType(),\n        'nullValues': nullValues = [null, undefined],\n    } = { ...input };\n    return isIterable(values)\n        ? Vector.from({ nullValues, ...input, type } as VectorBuilderOptions<T, TNull>)\n        : Vector.from({ nullValues, ...input, type } as VectorBuilderOptionsAsync<T, TNull>);\n}\n\n/** @ignore */\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull>): Vector<T>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Vector<T>>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input } as VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>;\n    if (isIterable<T['TValue'] | TNull>(values)) {\n        const chunks = [...Builder.throughIterable(options)(values)];\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    }\n    return (async (chunks: V<T>[]) => {\n        const transform = Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    })([]);\n}\n\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\n\nBaseVector.prototype.get = function baseVectorGet<T extends DataType>(this: BaseVector<T>, index: number): T['TValue'] | null {\n    return getVisitor.visit(this, index);\n};\n\nBaseVector.prototype.set = function baseVectorSet<T extends DataType>(this: BaseVector<T>, index: number, value: T['TValue'] | null): void {\n    return setVisitor.visit(this, index, value);\n};\n\nBaseVector.prototype.indexOf = function baseVectorIndexOf<T extends DataType>(this: BaseVector<T>, value: T['TValue'] | null, fromIndex?: number): number {\n    return indexOfVisitor.visit(this, value, fromIndex);\n};\n\nBaseVector.prototype.toArray = function baseVectorToArray<T extends DataType>(this: BaseVector<T>): T['TArray'] {\n    return toArrayVisitor.visit(this);\n};\n\nBaseVector.prototype.getByteWidth = function baseVectorGetByteWidth<T extends DataType>(this: BaseVector<T>): number {\n    return byteWidthVisitor.visit(this.type);\n};\n\nBaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator<T extends DataType>(this: BaseVector<T>): IterableIterator<T['TValue'] | null> {\n    return iteratorVisitor.visit(this);\n};\n\n(BaseVector.prototype as any)._bindDataAccessors = bindBaseVectorDataAccessors;\n\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number')\n    .filter((typeId) => typeId !== Type.NONE)\n    .forEach((typeId) => {\n        const VectorCtor = getVectorConstructor.visit(typeId);\n        VectorCtor.prototype['get'] = fn.partial1(getVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['set'] = fn.partial2(setVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['indexOf'] = fn.partial2(indexOfVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['toArray'] = fn.partial0(toArrayVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['getByteWidth'] = partialType0(byteWidthVisitor.getVisitFn(typeId));\n        VectorCtor.prototype[Symbol.iterator] = fn.partial0(iteratorVisitor.getVisitFn(typeId));\n    });\n\n/** @ignore */\nfunction partialType0<T extends Vector>(visit: (node: T['type']) => any) {\n    return function(this: T) { return visit(this.type); };\n}\n\n/** @ignore */\nfunction wrapNullableGet<T extends DataType, V extends Vector<T>, F extends (i: number) => any>(fn: F): (...args: Parameters<F>) => ReturnType<F> {\n    return function(this: V, i: number) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n\n/** @ignore */\nfunction wrapNullableSet<T extends DataType, V extends BaseVector<T>, F extends (i: number, a: any) => void>(fn: F): (...args: Parameters<F>) => void {\n    return function(this: V, i: number, a: any) {\n        if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n\n/** @ignore */\nfunction bindBaseVectorDataAccessors<T extends DataType>(this: BaseVector<T>) {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Column } from './column';\nimport { Schema, Field } from './schema';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from './recordbatch';\nimport { DataFrame } from './compute/dataframe';\nimport { RecordBatchReader } from './ipc/reader';\nimport { DataType, RowLike, Struct } from './type';\nimport { selectColumnArgs, selectArgs } from './util/args';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { isPromise, isIterable, isAsyncIterable } from './util/compat';\nimport { RecordBatchFileWriter, RecordBatchStreamWriter } from './ipc/writer';\nimport { distributeColumnsIntoRecordBatches, distributeVectorsIntoRecordBatches } from './util/recordbatch';\nimport { Vector, Chunked, StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = Data<T[keyof T]>[] | Vector<T[keyof T]>[];\ntype Columns<T extends { [key: string]: DataType }> = Column<T[keyof T]>[] | Column<T[keyof T]>[][];\n\nexport interface Table<T extends { [key: string]: DataType } = any> {\n\n    get(index: number): Struct<T>['TValue'];\n    [Symbol.iterator](): IterableIterator<RowLike<T>>;\n\n    slice(begin?: number, end?: number): Table<T>;\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    clone(chunks?: RecordBatch<T>[], offsets?: Uint32Array): Table<T>;\n\n    scan(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    scanReverse(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    countBy(name: import('./compute/predicate').Col | string): import('./compute/dataframe').CountByResult;\n    filter(predicate: import('./compute/predicate').Predicate): import('./compute/dataframe').FilteredDataFrame<T>;\n}\n\nexport class Table<T extends { [key: string]: DataType } = any>\n    extends Chunked<Struct<T>>\n    implements DataFrame<T>,\n               Clonable<Table<T>>,\n               Sliceable<Table<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    /** @nocollapse */\n    public static empty<T extends { [key: string]: DataType } = {}>(schema = new Schema<T>([])) { return new Table<T>(schema, []); }\n\n    public static from(): Table<{}>;\n    public static from<T extends { [key: string]: DataType } = any>(source: RecordBatchReader<T>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg0): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg2): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg1): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg3): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg4): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg5): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: PromiseLike<RecordBatchReader<T>>): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(input?: any) {\n\n        if (!input) { return Table.empty(); }\n\n        if (typeof input === 'object') {\n            let table = isIterable(input['values']) ? tableFromIterable<T, TNull>(input)\n                 : isAsyncIterable(input['values']) ? tableFromAsyncIterable<T, TNull>(input)\n                                                    : null;\n            if (table !== null) { return table; }\n        }\n\n        let reader = RecordBatchReader.from<T>(input) as RecordBatchReader<T> | Promise<RecordBatchReader<T>>;\n\n        if (isPromise<RecordBatchReader<T>>(reader)) {\n            return (async () => await Table.from(await reader))();\n        }\n        if (reader.isSync() && (reader = reader.open())) {\n            return !reader.schema ? Table.empty() : new Table<T>(reader.schema, [...reader]);\n        }\n        return (async (opening) => {\n            const reader = await opening;\n            const schema = reader.schema;\n            const batches: RecordBatch[] = [];\n            if (schema) {\n                for await (let batch of reader) {\n                    batches.push(batch);\n                }\n                return new Table<T>(schema, batches);\n            }\n            return Table.empty();\n        })(reader.open());\n    }\n\n    /** @nocollapse */\n    public static async fromAsync<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArgs): Promise<Table<T>> {\n        return await Table.from<T>(source as any);\n    }\n\n    /** @nocollapse */\n    public static fromStruct<T extends { [key: string]: DataType } = any>(vector: Vector<Struct<T>>) {\n        return Table.new<T>(vector.data.childData as Data<T[keyof T]>[], vector.type.children);\n    }\n\n    /**\n     * @summary Create a new Table from a collection of Columns or Vectors,\n     * with an optional list of names or Fields.\n     *\n     *\n     * `Table.new` accepts an Object of\n     * Columns or Vectors, where the keys will be used as the field names\n     * for the Schema:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new({ i32: i32s, f32: f32s });\n     * assert(table.schema.fields[0].name === 'i32');\n     * ```\n     *\n     * It also accepts a a list of Vectors with an optional list of names or\n     * Fields for the resulting Schema. If the list is omitted or a name is\n     * missing, the numeric index of each Vector will be used as the name:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new([i32s, f32s], ['i32']);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === '1');\n     * ```\n     *\n     * If the supplied arguments are Columns, `Table.new` will infer the Schema\n     * from the Columns:\n     * ```ts\n     * const i32s = Column.new('i32', Int32Vector.from([1, 2, 3]));\n     * const f32s = Column.new('f32', Float32Vector.from([.1, .2, .3]));\n     * const table = Table.new(i32s, f32s);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === 'f32');\n     * ```\n     *\n     * If the supplied Vector or Column lengths are unequal, `Table.new` will\n     * extend the lengths of the shorter Columns, allocating additional bytes\n     * to represent the additional null slots. The memory required to allocate\n     * these additional bitmaps can be computed as:\n     * ```ts\n     * let additionalBytes = 0;\n     * for (let vec in shorter_vectors) {\n     *     additionalBytes += (((longestLength - vec.length) + 63) & ~63) >> 3;\n     * }\n     * ```\n     *\n     * For example, an additional null bitmap for one million null values would require\n     * 125,000 bytes (`((1e6 + 63) & ~63) >> 3`), or approx. `0.11MiB`\n     */\n    public static new<T extends { [key: string]: DataType } = any>(...columns: Columns<T>): Table<T>;\n    public static new<T extends VectorMap = any>(children: T): Table<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Table<T>;\n    /** @nocollapse */\n    public static new(...cols: any[]) {\n        return new Table(...distributeColumnsIntoRecordBatches(selectColumnArgs(cols)));\n    }\n\n    constructor(batches: RecordBatch<T>[]);\n    constructor(...batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, ...batches: RecordBatch<T>[]);\n    constructor(...args: any[]) {\n\n        let schema: Schema<T> = null!;\n\n        if (args[0] instanceof Schema) { schema = args.shift(); }\n\n        let chunks = selectArgs<RecordBatch<T>>(RecordBatch, args);\n\n        if (!schema && !(schema = chunks[0] && chunks[0].schema)) {\n            throw new TypeError('Table must be initialized with a Schema or at least one RecordBatch');\n        }\n\n        chunks[0] || (chunks[0] = new _InternalEmptyPlaceholderRecordBatch(schema));\n\n        super(new Struct(schema.fields), chunks);\n\n        this._schema = schema;\n        this._chunks = chunks;\n    }\n\n    protected _schema: Schema<T>;\n    // List of inner RecordBatches\n    protected _chunks: RecordBatch<T>[];\n    protected _children?: Column<T[keyof T]>[];\n\n    public get schema() { return this._schema; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get numCols() { return this._numChildren; }\n\n    public clone(chunks = this._chunks) {\n        return new Table<T>(this._schema, chunks);\n    }\n\n    public getColumn<R extends keyof T>(name: R): Column<T[R]> {\n        return this.getColumnAt(this.getColumnIndex(name)) as Column<T[R]>;\n    }\n    public getColumnAt<R extends DataType = any>(index: number): Column<R> | null {\n        return this.getChildAt(index);\n    }\n    public getColumnIndex<R extends keyof T>(name: R) {\n        return this._schema.fields.findIndex((f) => f.name === name);\n    }\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n        if (index < 0 || index >= this.numChildren) { return null; }\n        let field: Field<R>, child: Column<R>;\n        const fields = (this._schema as Schema<any>).fields;\n        const columns = this._children || (this._children = []) as Column[];\n        if (child = columns[index]) { return child as Column<R>; }\n        if (field = fields[index]) {\n            const chunks = this._chunks\n                .map((chunk) => chunk.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n        return null;\n    }\n\n    // @ts-ignore\n    public serialize(encoding = 'binary', stream = true) {\n        const Writer = !stream\n            ? RecordBatchFileWriter\n            : RecordBatchStreamWriter;\n        return Writer.writeAll(this).toUint8Array(true);\n    }\n    public count(): number {\n        return this._length;\n    }\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt<K>(...columnIndices);\n        return new Table(schema, this._chunks.map(({ length, data: { childData } }) => {\n            return new RecordBatch(schema, length, columnIndices.map((i) => childData[i]).filter(Boolean));\n        }));\n    }\n    public assign<R extends { [key: string]: DataType } = any>(other: Table<R>) {\n\n        const fields = this._schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []] as number[][]);\n\n        const schema = this._schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_f, i, _fs, j = oldToNew[i]) =>\n                (j === undefined ? this.getColumnAt(i) : other.getColumnAt(j))!),\n            ...indices.map((i) => other.getColumnAt(i)!)\n        ].filter(Boolean) as Column<(T & R)[keyof T | keyof R]>[];\n\n        return new Table<T & R>(...distributeVectorsIntoRecordBatches<any>(schema, columns));\n    }\n}\n\nfunction tableFromIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptions<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return Table.fromStruct(StructVector.from(input as VectorBuilderOptions<Struct<T>, TNull>));\n    }\n    return null;\n}\n\nfunction tableFromAsyncIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return StructVector.from(input as VectorBuilderOptionsAsync<Struct<T>, TNull>).then((vector) => Table.fromStruct(vector));\n    }\n    return null;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Table } from './table';\nimport { Vector } from './vector';\nimport { Visitor } from './visitor';\nimport { Schema, Field } from './schema';\nimport { isIterable } from './util/compat';\nimport { Chunked } from './vector/chunked';\nimport { selectFieldArgs } from './util/args';\nimport { DataType, Struct, Dictionary } from './type';\nimport { ensureSameLengthData } from './util/recordbatch';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = (Data<T[keyof T]> | Vector<T[keyof T]>)[];\n\nexport interface RecordBatch<T extends { [key: string]: DataType } = any> {\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    slice(begin?: number, end?: number): RecordBatch<T>;\n    clone(data: Data<Struct<T>>, children?: Vector[]): RecordBatch<T>;\n}\n\nexport class RecordBatch<T extends { [key: string]: DataType } = any>\n    extends StructVector<T>\n    implements Clonable<RecordBatch<T>>,\n               Sliceable<RecordBatch<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull> | VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n        if (isIterable<(Struct<T>)['TValue'] | TNull>(options['values'])) {\n            return Table.from(options as VectorBuilderOptions<Struct<T>, TNull>);\n        }\n        return Table.from(options as VectorBuilderOptionsAsync<Struct<T>, TNull>);\n    }\n\n    public static new<T extends VectorMap = any>(children: T): RecordBatch<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): RecordBatch<T>;\n    /** @nocollapse */\n    public static new<T extends { [key: string]: DataType } = any>(...args: any[]) {\n        const [fs, xs] = selectFieldArgs<T>(args);\n        const vs = xs.filter((x): x is Vector<T[keyof T]> => x instanceof Vector);\n        return new RecordBatch(...ensureSameLengthData(new Schema<T>(fs), vs.map((x) => x.data)));\n    }\n\n    protected _schema: Schema;\n    protected _dictionaries?: Map<number, Vector>;\n\n    constructor(schema: Schema<T>, length: number, children: (Data | Vector)[]);\n    constructor(schema: Schema<T>, data: Data<Struct<T>>, children?: Vector[]);\n    constructor(...args: any[]) {\n        let data: Data<Struct<T>>;\n        let schema = args[0] as Schema<T>;\n        let children: Vector[] | undefined;\n        if (args[1] instanceof Data) {\n            [, data, children] = (args as [any, Data<Struct<T>>, Vector<T[keyof T]>[]?]);\n        } else {\n            const fields = schema.fields as Field<T[keyof T]>[];\n            const [, length, childData] = args as [any, number, Data<T[keyof T]>[]];\n            data = Data.Struct(new Struct<T>(fields), 0, length, 0, null, childData);\n        }\n        super(data, children);\n        this._schema = schema;\n    }\n\n    public clone(data: Data<Struct<T>>, children = this._children) {\n        return new RecordBatch<T>(this._schema, data, children);\n    }\n\n    public concat(...others: Vector<Struct<T>>[]): Table<T> {\n        const schema = this._schema, chunks = Chunked.flatten(this, ...others);\n        return new Table(schema, chunks.map(({ data }) => new RecordBatch(schema, data)));\n    }\n\n    public get schema() { return this._schema; }\n    public get numCols() { return this._schema.fields.length; }\n    public get dictionaries() {\n        return this._dictionaries || (this._dictionaries = DictionaryCollector.collect(this));\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt(...columnIndices);\n        const childData = columnIndices.map((i) => this.data.childData[i]).filter(Boolean);\n        return new RecordBatch<{ [key: string]: K }>(schema, this.length, childData);\n    }\n}\n\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nexport class _InternalEmptyPlaceholderRecordBatch<T extends { [key: string]: DataType } = any> extends RecordBatch<T> {\n    constructor(schema: Schema<T>) {\n        super(schema, 0, schema.fields.map((f) => Data.new(f.type, 0, 0, 0)));\n    }\n}\n\n/** @ignore */\nclass DictionaryCollector extends Visitor {\n    public dictionaries = new Map<number, Vector>();\n    public static collect<T extends RecordBatch>(batch: T) {\n        return new DictionaryCollector().visit(\n            batch.data, new Struct(batch.schema.fields)\n        ).dictionaries;\n    }\n    public visit(data: Data, type: DataType) {\n        if (DataType.isDictionary(type)) {\n            return this.visitDictionary(data, type);\n        } else {\n            data.childData.forEach((child, i) =>\n                this.visit(child, type.children[i].type));\n        }\n        return this;\n    }\n    public visitDictionary(data: Data, type: Dictionary) {\n        const dictionary = data.dictionary;\n        if (dictionary && dictionary.length > 0) {\n            this.dictionaries.set(type.id, dictionary);\n        }\n        return this;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { MessageHeader } from '../enum';\nimport { Footer } from './metadata/file';\nimport { Schema, Field } from '../schema';\nimport streamAdapters from '../io/adapters';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { RandomAccessFile, AsyncRandomAccessFile } from '../io/file';\nimport { VectorLoader, JSONVectorLoader } from '../visitor/vectorloader';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport {\n    FileHandle,\n    ArrowJSONLike,\n    ITERATOR_DONE,\n    ReadableInterop,\n} from '../io/interfaces';\nimport {\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    checkForMagicArrowString, magicLength, magicAndPadding, magicX2AndPadding\n} from './message';\nimport {\n    isPromise,\n    isIterable, isAsyncIterable,\n    isIteratorResult, isArrowJSON,\n    isFileHandle, isFetchResponse,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */ export type FromArg0 = ArrowJSONLike;\n/** @ignore */ export type FromArg1 = PromiseLike<ArrowJSONLike>;\n/** @ignore */ export type FromArg2 = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n/** @ignore */ export type FromArg3 = PromiseLike<Iterable<ArrayBufferViewInput> | ArrayBufferViewInput>;\n/** @ignore */ export type FromArg4 = Response | NodeJS.ReadableStream | ReadableStream<ArrayBufferViewInput> | AsyncIterable<ArrayBufferViewInput>;\n/** @ignore */ export type FromArg5 = FileHandle | PromiseLike<FileHandle> | PromiseLike<FromArg4>;\n/** @ignore */ export type FromArgs = FromArg0 | FromArg1 | FromArg2 | FromArg3 | FromArg4 | FromArg5;\n\n/** @ignore */ type OpenOptions = { autoDestroy?: boolean; };\n/** @ignore */ type RecordBatchReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n/** @ignore */ type AsyncRecordBatchReaders<T extends { [key: string]: DataType } = any> = AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>;\n/** @ignore */ type RecordBatchFileReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | AsyncRecordBatchFileReader<T>;\n/** @ignore */ type RecordBatchStreamReaders<T extends { [key: string]: DataType } = any> = RecordBatchStreamReader<T> | AsyncRecordBatchStreamReader<T>;\n\nexport class RecordBatchReader<T extends { [key: string]: DataType } = any> extends ReadableInterop<RecordBatch<T>> {\n\n    protected _impl: RecordBatchReaderImpls<T>;\n    protected constructor(impl: RecordBatchReaderImpls<T>) {\n        super();\n        this._impl = impl;\n    }\n\n    public get closed() { return this._impl.closed; }\n    public get schema() { return this._impl.schema; }\n    public get autoDestroy() { return this._impl.autoDestroy; }\n    public get dictionaries() { return this._impl.dictionaries; }\n    public get numDictionaries() { return this._impl.numDictionaries; }\n    public get numRecordBatches() { return this._impl.numRecordBatches; }\n    public get footer() { return this._impl.isFile() ? this._impl.footer : null; }\n\n    public isSync(): this is RecordBatchReaders<T> { return this._impl.isSync(); }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return this._impl.isAsync(); }\n    public isFile(): this is RecordBatchFileReaders<T> { return this._impl.isFile(); }\n    public isStream(): this is RecordBatchStreamReaders<T> { return this._impl.isStream(); }\n\n    public next() {\n        return this._impl.next();\n    }\n    public throw(value?: any) {\n        return this._impl.throw(value);\n    }\n    public return(value?: any) {\n        return this._impl.return(value);\n    }\n    public cancel() {\n        return this._impl.cancel();\n    }\n    public reset(schema?: Schema<T> | null): this {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    public open(options?: OpenOptions) {\n        const opening = this._impl.open(options);\n        return isPromise(opening) ? opening.then(() => this) : this;\n    }\n    public readRecordBatch(index: number): RecordBatch<T> | null | Promise<RecordBatch<T> | null> {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return (<IterableIterator<RecordBatch<T>>> this._impl)[Symbol.iterator]();\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return (<AsyncIterableIterator<RecordBatch<T>>> this._impl)[Symbol.asyncIterator]();\n    }\n    public toDOMStream() {\n        return streamAdapters.toDOMStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>));\n    }\n    public toNodeStream() {\n        return streamAdapters.toNodeStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>),\n            { objectMode: true });\n    }\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: ByteLengthQueuingStrategy,\n        // @ts-ignore\n        readableStrategy?: { autoDestroy: boolean }\n    ): { writable: WritableStream<Uint8Array>, readable: ReadableStream<RecordBatch<T>> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    public static from<T extends RecordBatchReader>(source: T): T;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg0): RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg1): Promise<RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg2): RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg3): Promise<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg4): Promise<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg5): Promise<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        } else if (isArrowJSON(source)) {\n            return fromArrowJSON<T>(source);\n        } else if (isFileHandle(source)) {\n            return fromFileHandle<T>(source);\n        } else if (isPromise<any>(source)) {\n            return (async () => await RecordBatchReader.from<any>(await source))();\n        } else if (isFetchResponse(source) || isReadableDOMStream(source) || isReadableNodeStream(source) || isAsyncIterable(source)) {\n            return fromAsyncByteStream<T>(new AsyncByteStream(source));\n        }\n        return fromByteStream<T>(new ByteStream(source));\n    }\n\n    public static readAll<T extends RecordBatchReader>(source: T): T extends RecordBatchReaders ? IterableIterator<T> : AsyncIterableIterator<T>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg0): IterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg1): AsyncIterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg2): IterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg3): AsyncIterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg4): AsyncIterableIterator<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg5): AsyncIterableIterator<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static readAll<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source as AsyncRecordBatchReaders<T>);\n        } else if (isArrowJSON(source) || ArrayBuffer.isView(source) || isIterable<ArrayBufferViewInput>(source) || isIteratorResult(source)) {\n            return readAllSync<T>(source) as IterableIterator<RecordBatchReaders<T>>;\n        }\n        return readAllAsync<T>(source) as AsyncIterableIterator<RecordBatchReaders<T> | AsyncRecordBatchReaders<T>>;\n    }\n}\n\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n\n/** @ignore */\nexport class RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: RecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator]() { return (this._impl as IterableIterator<RecordBatch<T>>)[Symbol.iterator](); }\n    public async *[Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> { yield* this[Symbol.iterator](); }\n}\n/** @ignore */\nexport class AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: AsyncRecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    public [Symbol.asyncIterator]() { return (this._impl as AsyncIterableIterator<RecordBatch<T>>)[Symbol.asyncIterator](); }\n}\n/** @ignore */\nexport class RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    constructor(protected _impl: RecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n/** @ignore */\nexport class AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    constructor(protected _impl: AsyncRecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n\n//\n// Now override the return types for each sync/async RecordBatchReader variant\n//\n\n/** @ignore */\nexport interface RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): this;\n    cancel(): void;\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): Promise<this>;\n    cancel(): Promise<void>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n}\n\n/** @ignore */\nexport interface RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\ntype RecordBatchReaderImpls<T extends { [key: string]: DataType } = any> =\n     RecordBatchJSONReaderImpl<T> |\n     RecordBatchFileReaderImpl<T> |\n     RecordBatchStreamReaderImpl<T> |\n     AsyncRecordBatchFileReaderImpl<T> |\n     AsyncRecordBatchStreamReaderImpl<T>;\n\n/** @ignore */\ninterface RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> {\n\n    closed: boolean;\n    schema: Schema<T>;\n    autoDestroy: boolean;\n    dictionaries: Map<number, Vector>;\n\n    isFile(): this is RecordBatchFileReaders<T>;\n    isStream(): this is RecordBatchStreamReaders<T>;\n    isSync(): this is RecordBatchReaders<T>;\n    isAsync(): this is AsyncRecordBatchReaders<T>;\n\n    reset(schema?: Schema<T> | null): this;\n}\n\n/** @ignore */\ninterface RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): this;\n    cancel(): void;\n\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n\n    [Symbol.iterator](): IterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): Promise<this>;\n    cancel(): Promise<void>;\n\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n\n    [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\nabstract class RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> implements RecordBatchReaderImpl<T> {\n\n    // @ts-ignore\n    public schema: Schema;\n    public closed = false;\n    public autoDestroy = true;\n    public dictionaries: Map<number, Vector>;\n\n    protected _dictionaryIndex = 0;\n    protected _recordBatchIndex = 0;\n    public get numDictionaries() { return this._dictionaryIndex; }\n    public get numRecordBatches() { return this._recordBatchIndex; }\n\n    constructor(dictionaries = new Map<number, Vector>()) {\n        this.dictionaries = dictionaries;\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return false; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return false; }\n    public isFile(): this is RecordBatchFileReaders<T> { return false; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return false; }\n\n    public reset(schema?: Schema<T> | null) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = <any> schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n\n    protected _loadRecordBatch(header: metadata.RecordBatch, body: any) {\n        return new RecordBatch<T>(this.schema, header.length, this._loadVectors(header, body, this.schema.fields));\n    }\n    protected _loadDictionaryBatch(header: metadata.DictionaryBatch, body: any) {\n        const { id, isDelta, data } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id)!;\n            return (dictionary && isDelta ? dictionary.concat(\n                Vector.new(this._loadVectors(data, body, [type])[0])) :\n                Vector.new(this._loadVectors(data, body, [type])[0])) as Vector;\n        }\n        return dictionary;\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n/** @ignore */\nclass RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements IterableIterator<RecordBatch<T>> {\n\n    protected _reader: MessageReader;\n    protected _handle: ByteStream | ArrowJSONLike;\n\n    constructor(source: ByteStream | ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = !isArrowJSON(source)\n            ? new MessageReader(this._handle = source)\n            : new JSONMessageReader(this._handle = source);\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return this as IterableIterator<RecordBatch<T>>;\n    }\n    public cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()!))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    public throw(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public return(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public next(): IteratorResult<RecordBatch<T>> {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return this.return();\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements AsyncIterableIterator<RecordBatch<T>> {\n\n    protected _handle: AsyncByteStream;\n    protected _reader: AsyncMessageReader;\n\n    constructor(source: AsyncByteStream, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = new AsyncMessageReader(this._handle = source);\n    }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return this as AsyncIterableIterator<RecordBatch<T>>;\n    }\n    public async cancel() {\n        if (!this.closed && (this.closed = true)) {\n            await this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public async open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = (await this._reader.readSchema())!))) {\n                await this.cancel();\n            }\n        }\n        return this;\n    }\n    public async throw(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async return(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async next() {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = await this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                await this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return await this.return();\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return await this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n\n    // @ts-ignore\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: RandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: RandomAccessFile | ArrayBufferViewInput, dictionaries?: Map<number, Vector>) {\n        super(source instanceof RandomAccessFile ? source : new RandomAccessFile(source), dictionaries);\n    }\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    public readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Message<T> | null {\n        if (!this._footer) { this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer && this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T>\n    implements AsyncRecordBatchFileReaderImpl<T> {\n\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: AsyncRandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: FileHandle, byteLength?: number, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, ...rest: any[]) {\n        const byteLength = typeof rest[0] !== 'number' ? <number> rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? <Map<number, Vector>> rest.shift() : undefined;\n        super(source instanceof AsyncRandomAccessFile ? source : new AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public async open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = await this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && await this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return await super.open(options);\n    }\n    public async readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { await this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected async _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected async _readFooter() {\n        const { _handle } = this;\n        _handle._pending && await _handle._pending;\n        const offset = _handle.size - magicAndPadding;\n        const length = await _handle.readInt32(offset);\n        const buffer = await _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Promise<Message<T> | null> {\n        if (!this._footer) { await this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && await this._handle.seek(block.offset)) {\n                return await this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass RecordBatchJSONReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    constructor(source: ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(source, dictionaries);\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n\n/** @ignore */\nfunction shouldAutoDestroy(self: { autoDestroy: boolean }, options?: OpenOptions) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n\n/** @ignore */\nfunction* readAllSync<T extends { [key: string]: DataType } = any>(source: RecordBatchReaders<T> | FromArg0 | FromArg2) {\n    const reader = RecordBatchReader.from<T>(<any> source) as RecordBatchReaders<T>;\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do { yield reader; } while (!(reader.reset().open()).closed);\n        }\n    } finally { reader.cancel(); }\n}\n\n/** @ignore */\nasync function* readAllAsync<T extends { [key: string]: DataType } = any>(source: AsyncRecordBatchReaders<T> | FromArg1 | FromArg3 | FromArg4 | FromArg5) {\n    const reader = await RecordBatchReader.from<T>(<any> source) as RecordBatchReader<T>;\n    try {\n        if (!(await reader.open({ autoDestroy: false })).closed) {\n            do { yield reader; } while (!(await reader.reset().open()).closed);\n        }\n    } finally { await reader.cancel(); }\n}\n\n/** @ignore */\nfunction fromArrowJSON<T extends { [key: string]: DataType }>(source: ArrowJSONLike) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl<T>(source));\n}\n\n/** @ignore */\nfunction fromByteStream<T extends { [key: string]: DataType }>(source: ByteStream) {\n    const bytes = source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromAsyncByteStream<T extends { [key: string]: DataType }>(source: AsyncByteStream) {\n    const bytes = await source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(await source.read()))\n        : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(async function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromFileHandle<T extends { [key: string]: DataType }>(source: FileHandle) {\n    const { size } = await source.stat();\n    const file = new AsyncRandomAccessFile(source, size);\n    if (size >= magicX2AndPadding) {\n        if (checkForMagicArrowString(await file.readAt(0, (magicLength + 7) & ~7))) {\n            return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl<T>(file));\n        }\n    }\n    return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(file));\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { Vector } from '../../vector';\nimport { VectorType as V } from '../../interfaces';\nimport { Builder, BuilderOptions } from '../../builder/index';\n\n/** @ignore */\nexport interface BuilderTransformOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    readableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    writableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport function builderThroughDOMStream<T extends DataType = any, TNull = any>(options: BuilderTransformOptions<T, TNull>) {\n    return new BuilderTransform(options);\n}\n\n/** @ignore */\nexport class BuilderTransform<T extends DataType = any, TNull = any> {\n\n    public readable: ReadableStream<V<T>>;\n    public writable: WritableStream<T['TValue'] | TNull>;\n    public _controller: ReadableStreamDefaultController<V<T>> | null;\n\n    private _numChunks = 0;\n    private _finished = false;\n    private _bufferedSize = 0;\n    private _builder: Builder<T, TNull>;\n    private _getSize: (builder: Builder<T, TNull>) => number;\n\n    constructor(options: BuilderTransformOptions<T, TNull>) {\n\n        // Access properties by string indexers to defeat closure compiler\n\n        const {\n            ['readableStrategy']: readableStrategy,\n            ['writableStrategy']: writableStrategy,\n            ['queueingStrategy']: queueingStrategy = 'count',\n            ...builderOptions\n        } = options;\n\n        this._controller = null;\n        this._builder = Builder.new<T, TNull>(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n\n        this['readable'] = new ReadableStream<V<T>>({\n            ['cancel']: ()  => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value: T['TValue'] | TNull) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n\n    private _writeValueAndReturnChunkSize(value: T['TValue'] | TNull) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n\n    private _maybeFlush(builder: Builder<T, TNull>, controller: ReadableStreamDefaultController<V<T>> | null) {\n        if (controller === null) { return; }\n        if (this._bufferedSize >= controller.desiredSize!) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n\n    private _enqueue(controller: ReadableStreamDefaultController<V<T>>, chunk: V<T> | null) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\n\n/** @ignore */ const chunkLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.length;\n/** @ignore */ const chunkByteLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.byteLength;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { RecordBatch } from '../recordbatch';\nimport { DictionaryVector } from '../vector/dictionary';\n\n/** @ignore */\nexport type ValueFunc<T> = (idx: number, cols: RecordBatch) => T | null;\n/** @ignore */\nexport type PredicateFunc = (idx: number, cols: RecordBatch) => boolean;\n\n/** @ignore */\nexport abstract class Value<T> {\n    eq(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new Equals(this, other);\n    }\n    le(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new LTeq(this, other);\n    }\n    ge(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new GTeq(this, other);\n    }\n    lt(other: Value<T> | T): Predicate {\n        return new Not(this.ge(other));\n    }\n    gt(other: Value<T> | T): Predicate {\n        return new Not(this.le(other));\n    }\n    ne(other: Value<T> | T): Predicate {\n        return new Not(this.eq(other));\n    }\n}\n\n/** @ignore */\nexport class Literal<T= any> extends Value<T> {\n    constructor(public v: T) { super(); }\n}\n\n/** @ignore */\nexport class Col<T= any> extends Value<T> {\n    // @ts-ignore\n    public vector: Vector;\n    // @ts-ignore\n    public colidx: number;\n\n    constructor(public name: string) { super(); }\n    bind(batch: RecordBatch): (idx: number, batch?: RecordBatch) => any {\n        if (!this.colidx) {\n            // Assume column index doesn't change between calls to bind\n            //this.colidx = cols.findIndex(v => v.name.indexOf(this.name) != -1);\n            this.colidx = -1;\n            const fields = batch.schema.fields;\n            for (let idx = -1; ++idx < fields.length;) {\n                if (fields[idx].name === this.name) {\n                    this.colidx = idx;\n                    break;\n                }\n            }\n            if (this.colidx < 0) { throw new Error(`Failed to bind Col \"${this.name}\"`); }\n        }\n\n        const vec = this.vector = batch.getChildAt(this.colidx)!;\n        return (idx: number) => vec.get(idx);\n    }\n}\n\n/** @ignore */\nexport abstract class Predicate {\n    abstract bind(batch: RecordBatch): PredicateFunc;\n    and(...expr: Predicate[]): And { return new And(this, ...expr); }\n    or(...expr: Predicate[]): Or { return new Or(this, ...expr); }\n    not(): Predicate { return new Not(this); }\n}\n\n/** @ignore */\nexport abstract class ComparisonPredicate<T= any> extends Predicate {\n    constructor(public readonly left: Value<T>, public readonly right: Value<T>) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        if (this.left instanceof Literal) {\n            if (this.right instanceof Literal) {\n                return this._bindLitLit(batch, this.left, this.right);\n            } else { // right is a Col\n\n                return this._bindLitCol(batch, this.left, this.right as Col);\n            }\n        } else { // left is a Col\n            if (this.right instanceof Literal) {\n                return this._bindColLit(batch, this.left as Col, this.right);\n            } else { // right is a Col\n                return this._bindColCol(batch, this.left as Col, this.right as Col);\n            }\n        }\n    }\n\n    protected abstract _bindLitLit(batch: RecordBatch, left: Literal, right: Literal): PredicateFunc;\n    protected abstract _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc;\n    protected abstract _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc;\n    protected abstract _bindLitCol(batch: RecordBatch, lit: Literal, col: Col): PredicateFunc;\n}\n\n/** @ignore */\nexport abstract class CombinationPredicate extends Predicate {\n    readonly children: Predicate[];\n    constructor(...children: Predicate[]) {\n        super();\n        this.children = children;\n    }\n}\n// add children to prototype so it doesn't get mangled in es2015/umd\n(<any> CombinationPredicate.prototype).children = Object.freeze([]); // freeze for safety\n\n/** @ignore */\nexport class And extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ands\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof And ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.every((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Or extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ors\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof Or ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.some((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Equals extends ComparisonPredicate {\n    // Helpers used to cache dictionary reverse lookups between calls to bind\n    private lastDictionary: Vector|undefined;\n    private lastKey: number|undefined;\n\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v == right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, batch: RecordBatch) => left_func(idx, batch) == right_func(idx, batch);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        if (col.vector instanceof DictionaryVector) {\n            let key: any;\n            const vector = col.vector as DictionaryVector;\n            if (vector.dictionary !== this.lastDictionary) {\n                key = vector.reverseLookup(lit.v);\n                this.lastDictionary = vector.dictionary;\n                this.lastKey = key;\n            } else {\n                key = this.lastKey;\n            }\n\n            if (key === -1) {\n                // the value doesn't exist in the dictionary - always return\n                // false\n                // TODO: special-case of PredicateFunc that encapsulates this\n                // \"always false\" behavior. That way filtering operations don't\n                // have to bother checking\n                return () => false;\n            } else {\n                return (idx: number) => {\n                    return vector.getKey(idx) === key;\n                };\n            }\n        } else {\n            return (idx: number, cols: RecordBatch) => col_func(idx, cols) == lit.v;\n        }\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        // Equals is commutative\n        return this._bindColLit(batch, col, lit);\n    }\n}\n\n/** @ignore */\nexport class LTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v <= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) <= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) <= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v <= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class GTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v >= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) >= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) >= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v >= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class Not extends Predicate {\n    constructor(public readonly child: Predicate) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        const func = this.child.bind(batch);\n        return (idx: number, batch: RecordBatch) => !func(idx, batch);\n    }\n}\n\n/** @ignore */\nexport class CustomPredicate extends Predicate {\n    constructor(private next: PredicateFunc, private bind_: (batch: RecordBatch) => void) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        this.bind_(batch);\n        return this.next;\n    }\n}\n\nexport function lit(v: any): Value<any> { return new Literal(v); }\nexport function col(n: string): Col<any> { return new Col(n); }\nexport function and(...p: Predicate[]): And { return new And(...p); }\nexport function or(...p: Predicate[]): Or { return new Or(...p); }\nexport function custom(next: PredicateFunc, bind: (batch: RecordBatch) => void) {\n    return new CustomPredicate(next, bind);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { Vector } from '../vector';\nimport { IntVector } from '../vector/int';\nimport { Field, Schema } from '../schema';\nimport { Predicate, Col } from './predicate';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { DataType, Int, Struct, Dictionary } from '../type';\n\n/** @ignore */\nexport type BindFunc = (batch: RecordBatch) => void;\n/** @ignore */\nexport type NextFunc = (idx: number, batch: RecordBatch) => void;\n\nTable.prototype.countBy = function(this: Table, name: Col | string) { return new DataFrame(this.chunks).countBy(name); };\nTable.prototype.scan = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scan(next, bind); };\nTable.prototype.scanReverse = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scanReverse(next, bind); };\nTable.prototype.filter = function(this: Table, predicate: Predicate): FilteredDataFrame { return new DataFrame(this.chunks).filter(predicate); };\n\nexport class DataFrame<T extends { [key: string]: DataType } = any> extends Table<T> {\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(this.chunks, predicate);\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                next(index, batch);\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                next(index, batch);\n            }\n        }\n    }\n    public countBy(name: Col | string) {\n        const batches = this.chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n\n/** @ignore */\nexport class CountByResult<T extends DataType = any, TCount extends Int = Int> extends Table<{ values: T,  counts: TCount }> {\n    constructor(values: Vector<T>, counts: V<TCount>) {\n        type R = { values: T, counts: TCount };\n        const schema = new Schema<R>([\n            new Field('values', values.type),\n            new Field('counts', counts.type)\n        ]);\n        super(new RecordBatch<R>(schema, counts.length, [values, counts]));\n    }\n    public toJSON(): Object {\n        const values = this.getColumnAt(0)!;\n        const counts = this.getColumnAt(1)!;\n        const result = {} as { [k: string]: number | null };\n        for (let i = -1; ++i < this.length;) {\n            result[values.get(i)] = counts.get(i);\n        }\n        return result;\n    }\n}\n\n/** @ignore */\nexport class FilteredDataFrame<T extends { [key: string]: DataType } = any> extends DataFrame<T> {\n    private _predicate: Predicate;\n    constructor (batches: RecordBatch<T>[], predicate: Predicate) {\n        super(batches);\n        this._predicate = predicate;\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public count(): number {\n        // inlined version of this:\n        // let sum = 0;\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) ++sum;\n        // });\n        // return sum;\n        let sum = 0;\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { ++sum; }\n            }\n        }\n        return sum;\n    }\n    public *[Symbol.iterator](): IterableIterator<Struct<T>['TValue']> {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // TODO: bind batches lazily\n            // If predicate doesn't match anything in the batch we don't need\n            // to bind the callback\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { yield batch.get(index) as any; }\n            }\n        }\n    }\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(\n            this._chunks,\n            this._predicate.and(predicate)\n        );\n    }\n    public countBy(name: Col | string) {\n        const batches = this._chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null && predicate(index, batch)) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType } from './enum';\nexport { Data } from './data';\nexport {\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n} from './type';\n\nexport { Table } from './table';\nexport { Column } from './column';\nexport { Visitor } from './visitor';\nexport { Schema, Field } from './schema';\nexport {\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n} from './vector/index';\n\nexport {\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './builder/index';\n\nexport { ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink } from './io/stream';\nexport { RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader } from './ipc/reader';\nexport { RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter } from './ipc/writer';\nexport { MessageReader, AsyncMessageReader, JSONMessageReader } from './ipc/message';\nexport { Message } from './ipc/metadata/message';\nexport { RecordBatch } from './recordbatch';\nexport { ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions } from './io/interfaces';\nexport { DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc } from './compute/dataframe';\n\nimport * as util_bn_ from './util/bn';\nimport * as util_int_ from './util/int';\nimport * as util_bit_ from './util/bit';\nimport * as util_math_ from './util/math';\nimport * as util_buffer_ from './util/buffer';\nimport * as util_vector_ from './util/vector';\nimport * as predicate from './compute/predicate';\n\nexport { predicate };\n/** @ignore */\nexport const util = {\n    ...util_bn_,\n    ...util_int_,\n    ...util_bit_,\n    ...util_math_,\n    ...util_buffer_,\n    ...util_vector_\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './io/adapters';\nimport { Builder } from './builder/index';\nimport { RecordBatchReader } from './ipc/reader';\nimport { RecordBatchWriter } from './ipc/writer';\nimport { toDOMStream } from './io/whatwg/iterable';\nimport { builderThroughDOMStream } from './io/whatwg/builder';\nimport { recordBatchReaderThroughDOMStream } from './io/whatwg/reader';\nimport { recordBatchWriterThroughDOMStream } from './io/whatwg/writer';\n\nstreamAdapters.toDOMStream = toDOMStream;\nBuilder['throughDOM'] = builderThroughDOMStream;\nRecordBatchReader['throughDOM'] = recordBatchReaderThroughDOMStream;\nRecordBatchWriter['throughDOM'] = recordBatchWriterThroughDOMStream;\n\nexport {\n    ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType,\n    Data,\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n    Table,\n    Column,\n    Schema, Field,\n    Visitor,\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n    ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink,\n    RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader,\n    RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter,\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    Message,\n    RecordBatch,\n    ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions,\n    DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc,\n    predicate,\n    util,\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './Arrow';\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from '../../util/buffer';\nimport { ReadableDOMStreamOptions } from '../../io/interfaces';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n\n/** @ignore */\nexport function toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n    if (isAsyncIterable<T>(source)) { return asyncIterableAsReadableDOMStream(source, options); }\n    if (isIterable<T>(source)) { return iterableAsReadableDOMStream(source, options); }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\n\n/** @ignore */\nfunction iterableAsReadableDOMStream<T>(source: Iterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: Iterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    function next(controller: ReadableStreamDefaultController<T>, it: Iterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream<T>(source: AsyncIterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: AsyncIterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]())); },\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    async function next(controller: ReadableStreamDefaultController<T>, it: AsyncIterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = await it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteQueue } from '../../io/stream';\nimport { RecordBatchReader } from '../../ipc/reader';\n\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream<T extends { [key: string]: DataType } = any>(writableStrategy?: ByteLengthQueuingStrategy, readableStrategy?: { autoDestroy: boolean }) {\n\n    const queue = new AsyncByteQueue();\n    let reader: RecordBatchReader<T> | null = null;\n\n    const readable = new ReadableStream<RecordBatch<T>>({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n\n    async function open() {\n        return await (await RecordBatchReader.from<T>(queue)).open(readableStrategy);\n    }\n\n    async function next(controller: ReadableStreamDefaultController<RecordBatch<T>>, reader: RecordBatchReader<T>) {\n        let size = controller.desiredSize;\n        let r: IteratorResult<RecordBatch<T>> | null = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteStream } from '../../io/stream';\nimport { RecordBatchWriter } from '../../ipc/writer';\n\n/** @ignore */\nexport function recordBatchWriterThroughDOMStream<T extends { [key: string]: DataType } = any>(\n    this: typeof RecordBatchWriter,\n    writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n    readableStrategy?: { highWaterMark?: number, size?: any }\n) {\n\n    const writer = new this<T>(writableStrategy);\n    const reader = new AsyncByteStream(writer);\n    const readable = new ReadableStream({\n        type: 'bytes',\n        async cancel() { await reader.cancel(); },\n        async pull(controller) { await next(controller); },\n        async start(controller) { await next(controller); },\n    }, { 'highWaterMark': 2 ** 14, ...readableStrategy });\n\n    return { writable: new WritableStream(writer, writableStrategy), readable };\n\n    async function next(controller: ReadableStreamDefaultController<Uint8Array>) {\n        let buf: Uint8Array | null = null;\n        let size = controller.desiredSize;\n        while (buf = await reader.read(size || null)) {\n            controller.enqueue(buf);\n            if (size != null && (size -= buf.byteLength) <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Table, Type } from \"apache-arrow\";\nvar ArrowTable = /** @class */ (function () {\n    function ArrowTable(dataBuffer, indexBuffer, columnsBuffer, styler) {\n        var _this = this;\n        this.getCell = function (rowIndex, columnIndex) {\n            var isBlankCell = rowIndex < _this.headerRows && columnIndex < _this.headerColumns;\n            var isIndexCell = rowIndex >= _this.headerRows && columnIndex < _this.headerColumns;\n            var isColumnsCell = rowIndex < _this.headerRows && columnIndex >= _this.headerColumns;\n            if (isBlankCell) {\n                var classNames = [\"blank\"];\n                if (columnIndex > 0) {\n                    classNames.push(\"level\" + rowIndex);\n                }\n                return {\n                    type: \"blank\",\n                    classNames: classNames.join(\" \"),\n                    content: \"\"\n                };\n            }\n            else if (isColumnsCell) {\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"col_heading\",\n                    \"level\" + rowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                return {\n                    type: \"columns\",\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.columnsTable, dataColumnIndex, rowIndex)\n                };\n            }\n            else if (isIndexCell) {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var classNames = [\n                    \"row_heading\",\n                    \"level\" + columnIndex,\n                    \"row\" + dataRowIndex\n                ];\n                return {\n                    type: \"index\",\n                    id: \"T_\" + _this.uuid + \"level\" + columnIndex + \"_row\" + dataRowIndex,\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.indexTable, dataRowIndex, columnIndex)\n                };\n            }\n            else {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"data\",\n                    \"row\" + dataRowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                var content = _this.styler\n                    ? _this.getContent(_this.styler.displayValuesTable, dataRowIndex, dataColumnIndex)\n                    : _this.getContent(_this.dataTable, dataRowIndex, dataColumnIndex);\n                return {\n                    type: \"data\",\n                    id: \"T_\" + _this.uuid + \"row\" + dataRowIndex + \"_col\" + dataColumnIndex,\n                    classNames: classNames.join(\" \"),\n                    content: content\n                };\n            }\n        };\n        this.getContent = function (table, rowIndex, columnIndex) {\n            var column = table.getColumnAt(columnIndex);\n            if (column === null) {\n                return \"\";\n            }\n            var columnTypeId = _this.getColumnTypeId(table, columnIndex);\n            switch (columnTypeId) {\n                case Type.Timestamp: {\n                    return _this.nanosToDate(column.get(rowIndex));\n                }\n                default: {\n                    return column.get(rowIndex);\n                }\n            }\n        };\n        this.dataTable = Table.from(dataBuffer);\n        this.indexTable = Table.from(indexBuffer);\n        this.columnsTable = Table.from(columnsBuffer);\n        this.styler = styler\n            ? {\n                caption: styler.caption,\n                displayValuesTable: Table.from(styler.displayValues),\n                styles: styler.styles,\n                uuid: styler.uuid\n            }\n            : undefined;\n    }\n    Object.defineProperty(ArrowTable.prototype, \"rows\", {\n        get: function () {\n            return this.indexTable.length + this.columnsTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columns\", {\n        get: function () {\n            return this.indexTable.numCols + this.columnsTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerRows\", {\n        get: function () {\n            return this.rows - this.dataRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerColumns\", {\n        get: function () {\n            return this.columns - this.dataColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataRows\", {\n        get: function () {\n            return this.dataTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataColumns\", {\n        get: function () {\n            return this.dataTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"uuid\", {\n        get: function () {\n            return this.styler && this.styler.uuid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"caption\", {\n        get: function () {\n            return this.styler && this.styler.caption;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"styles\", {\n        get: function () {\n            return this.styler && this.styler.styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"table\", {\n        get: function () {\n            return this.dataTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"index\", {\n        get: function () {\n            return this.indexTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columnTable\", {\n        get: function () {\n            return this.columnsTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Serialize arrow table.\n     */\n    ArrowTable.prototype.serialize = function () {\n        return {\n            data: this.dataTable.serialize(),\n            index: this.indexTable.serialize(),\n            columns: this.columnsTable.serialize()\n        };\n    };\n    /**\n     * Returns apache-arrow specific typeId of column.\n     */\n    ArrowTable.prototype.getColumnTypeId = function (table, columnIndex) {\n        return table.schema.fields[columnIndex].type.typeId;\n    };\n    ArrowTable.prototype.nanosToDate = function (nanos) {\n        return new Date(nanos / 1e6);\n    };\n    return ArrowTable;\n}());\nexport { ArrowTable };\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Safari doesn't support the EventTarget class, so we use a shim.\nimport { EventTarget } from \"event-target-shim\";\nimport { ArrowTable } from \"./ArrowTable\";\n/** Messages from Component -> Streamlit */\nvar ComponentMessageType;\n(function (ComponentMessageType) {\n    // A component sends this message when it's ready to receive messages\n    // from Streamlit. Streamlit won't send any messages until it gets this.\n    // Data: { apiVersion: number }\n    ComponentMessageType[\"COMPONENT_READY\"] = \"streamlit:componentReady\";\n    // The component has a new widget value. Send it back to Streamlit, which\n    // will then re-run the app.\n    // Data: { value: any }\n    ComponentMessageType[\"SET_COMPONENT_VALUE\"] = \"streamlit:setComponentValue\";\n    // The component has a new height for its iframe.\n    // Data: { height: number }\n    ComponentMessageType[\"SET_FRAME_HEIGHT\"] = \"streamlit:setFrameHeight\";\n})(ComponentMessageType || (ComponentMessageType = {}));\n/**\n * Streamlit communication API.\n *\n * Components can send data to Streamlit via the functions defined here,\n * and receive data from Streamlit via the `events` property.\n */\nvar Streamlit = /** @class */ (function () {\n    function Streamlit() {\n    }\n    /**\n     * The Streamlit component API version we're targetting.\n     * There's currently only 1!\n     */\n    Streamlit.API_VERSION = 1;\n    Streamlit.RENDER_EVENT = \"streamlit:render\";\n    /** Dispatches events received from Streamlit. */\n    Streamlit.events = new EventTarget();\n    Streamlit.registeredMessageListener = false;\n    /**\n     * Tell Streamlit that the component is ready to start receiving data.\n     * Streamlit will defer emitting RENDER events until it receives the\n     * COMPONENT_READY message.\n     */\n    Streamlit.setComponentReady = function () {\n        if (!Streamlit.registeredMessageListener) {\n            // Register for message events if we haven't already\n            window.addEventListener(\"message\", Streamlit.onMessageEvent);\n            Streamlit.registeredMessageListener = true;\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.COMPONENT_READY, {\n            apiVersion: Streamlit.API_VERSION\n        });\n    };\n    /**\n     * Report the component's height to Streamlit.\n     * This should be called every time the component changes its DOM - that is,\n     * when it's first loaded, and any time it updates.\n     */\n    Streamlit.setFrameHeight = function (height) {\n        if (height === undefined) {\n            // `height` is optional. If undefined, it defaults to scrollHeight,\n            // which is the entire height of the element minus its border,\n            // scrollbar, and margin.\n            height = document.body.scrollHeight;\n        }\n        if (height === Streamlit.lastFrameHeight) {\n            // Don't bother updating if our height hasn't changed.\n            return;\n        }\n        Streamlit.lastFrameHeight = height;\n        Streamlit.sendBackMsg(ComponentMessageType.SET_FRAME_HEIGHT, { height: height });\n    };\n    /**\n     * Set the component's value. This value will be returned to the Python\n     * script, and the script will be re-run.\n     *\n     * For example:\n     *\n     * JavaScript:\n     * Streamlit.setComponentValue(\"ahoy!\")\n     *\n     * Python:\n     * value = st.my_component(...)\n     * st.write(value) # -> \"ahoy!\"\n     *\n     * The value must be an ArrowTable, a typed array, an ArrayBuffer, or be\n     * serializable to JSON.\n     */\n    Streamlit.setComponentValue = function (value) {\n        var dataType;\n        if (value instanceof ArrowTable) {\n            dataType = \"dataframe\";\n            value = value.serialize();\n        }\n        else if (isTypedArray(value)) {\n            // All typed arrays get sent as Uint8Array, because that's what our\n            // protobuf library uses for the \"bytes\" field type.\n            dataType = \"bytes\";\n            value = new Uint8Array(value.buffer);\n        }\n        else if (value instanceof ArrayBuffer) {\n            dataType = \"bytes\";\n            value = new Uint8Array(value);\n        }\n        else {\n            dataType = \"json\";\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.SET_COMPONENT_VALUE, {\n            value: value,\n            dataType: dataType\n        });\n    };\n    /** Receive a ForwardMsg from the Streamlit app */\n    Streamlit.onMessageEvent = function (event) {\n        var type = event.data[\"type\"];\n        switch (type) {\n            case Streamlit.RENDER_EVENT:\n                Streamlit.onRenderMessage(event.data);\n                break;\n        }\n    };\n    /**\n     * Handle an untyped Streamlit render event and redispatch it as a\n     * StreamlitRenderEvent.\n     */\n    Streamlit.onRenderMessage = function (data) {\n        var args = data[\"args\"];\n        if (args == null) {\n            console.error(\"Got null args in onRenderMessage. This should never happen\");\n            args = {};\n        }\n        // Parse our dataframe arguments with arrow, and merge them into our args dict\n        var dataframeArgs = data[\"dfs\"] && data[\"dfs\"].length > 0\n            ? Streamlit.argsDataframeToObject(data[\"dfs\"])\n            : {};\n        args = __assign(__assign({}, args), dataframeArgs);\n        var disabled = Boolean(data[\"disabled\"]);\n        var theme = data[\"theme\"];\n        if (theme) {\n            _injectTheme(theme);\n        }\n        // Dispatch a render event!\n        var eventData = { disabled: disabled, args: args, theme: theme };\n        var event = new CustomEvent(Streamlit.RENDER_EVENT, {\n            detail: eventData\n        });\n        Streamlit.events.dispatchEvent(event);\n    };\n    Streamlit.argsDataframeToObject = function (argsDataframe) {\n        var argsDataframeArrow = argsDataframe.map(function (_a) {\n            var key = _a.key, value = _a.value;\n            return [key, Streamlit.toArrowTable(value)];\n        });\n        return Object.fromEntries(argsDataframeArrow);\n    };\n    Streamlit.toArrowTable = function (df) {\n        var _a = df.data, data = _a.data, index = _a.index, columns = _a.columns, styler = _a.styler;\n        return new ArrowTable(data, index, columns, styler);\n    };\n    /** Post a message to the Streamlit app. */\n    Streamlit.sendBackMsg = function (type, data) {\n        window.parent.postMessage(__assign({ isStreamlitMessage: true, type: type }, data), \"*\");\n    };\n    return Streamlit;\n}());\nexport { Streamlit };\nvar _injectTheme = function (theme) {\n    var style = document.createElement(\"style\");\n    document.head.appendChild(style);\n    style.innerHTML = \"\\n    :root {\\n      --primary-color: \" + theme.primaryColor + \";\\n      --background-color: \" + theme.backgroundColor + \";\\n      --secondary-background-color: \" + theme.secondaryBackgroundColor + \";\\n      --text-color: \" + theme.textColor + \";\\n      --font: \" + theme.font + \";\\n    }\\n\\n    body {\\n      background-color: var(--background-color);\\n      color: var(--text-color);\\n    }\\n  \";\n};\n/** True if the value is a TypedArray. */\nfunction isTypedArray(value) {\n    var isBigIntArray = false;\n    try {\n        isBigIntArray =\n            value instanceof BigInt64Array || value instanceof BigUint64Array;\n    }\n    catch (e) {\n        // Ignore cause Safari does not support this\n        // https://caniuse.com/mdn-javascript_builtins_bigint64array\n    }\n    return (value instanceof Int8Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint8ClampedArray ||\n        value instanceof Int16Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        isBigIntArray);\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport React from \"react\";\nimport { Streamlit } from \"./streamlit\";\n/**\n * Optional Streamlit React-based component base class.\n *\n * You are not required to extend this base class to create a Streamlit\n * component. If you decide not to extend it, you should implement the\n * `componentDidMount` and `componentDidUpdate` functions in your own class,\n * so that your plugin properly resizes.\n */\nvar StreamlitComponentBase = /** @class */ (function (_super) {\n    __extends(StreamlitComponentBase, _super);\n    function StreamlitComponentBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StreamlitComponentBase.prototype.componentDidMount = function () {\n        // After we're rendered for the first time, tell Streamlit that our height\n        // has changed.\n        Streamlit.setFrameHeight();\n    };\n    StreamlitComponentBase.prototype.componentDidUpdate = function () {\n        // After we're updated, tell Streamlit that our height may have changed.\n        Streamlit.setFrameHeight();\n    };\n    return StreamlitComponentBase;\n}(React.PureComponent));\nexport { StreamlitComponentBase };\n/**\n * Wrapper for React-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\nexport function withStreamlitConnection(WrappedComponent) {\n    var ComponentWrapper = /** @class */ (function (_super) {\n        __extends(ComponentWrapper, _super);\n        function ComponentWrapper(props) {\n            var _this = _super.call(this, props) || this;\n            _this.componentDidMount = function () {\n                // Set up event listeners, and signal to Streamlit that we're ready.\n                // We won't render the component until we receive the first RENDER_EVENT.\n                Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n                Streamlit.setComponentReady();\n            };\n            _this.componentDidUpdate = function () {\n                // If our child threw an error, we display it in render(). In this\n                // case, the child won't be mounted and therefore won't call\n                // `setFrameHeight` on its own. We do it here so that the rendered\n                // error will be visible.\n                if (_this.state.componentError != null) {\n                    Streamlit.setFrameHeight();\n                }\n            };\n            _this.componentWillUnmount = function () {\n                Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n            };\n            /**\n             * Streamlit is telling this component to redraw.\n             * We save the render data in State, so that it can be passed to the\n             * component in our own render() function.\n             */\n            _this.onRenderEvent = function (event) {\n                // Update our state with the newest render data\n                var renderEvent = event;\n                _this.setState({ renderData: renderEvent.detail });\n            };\n            _this.render = function () {\n                // If our wrapped component threw an error, display it.\n                if (_this.state.componentError != null) {\n                    return (React.createElement(\"div\", null,\n                        React.createElement(\"h1\", null, \"Component Error\"),\n                        React.createElement(\"span\", null, _this.state.componentError.message)));\n                }\n                // Don't render until we've gotten our first RENDER_EVENT from Streamlit.\n                if (_this.state.renderData == null) {\n                    return null;\n                }\n                return (React.createElement(WrappedComponent, { width: window.innerWidth, disabled: _this.state.renderData.disabled, args: _this.state.renderData.args, theme: _this.state.renderData.theme }));\n            };\n            _this.state = {\n                renderData: undefined,\n                componentError: undefined\n            };\n            return _this;\n        }\n        /**\n         * Error boundary function. This will be called if our wrapped\n         * component throws an error. We store the caught error in our state,\n         * and display it in the next render().\n         */\n        ComponentWrapper.getDerivedStateFromError = function (error) {\n            return { componentError: error };\n        };\n        return ComponentWrapper;\n    }(React.PureComponent));\n    return hoistNonReactStatics(ComponentWrapper, WrappedComponent);\n}\n","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","// Some functions take a variable number of arguments, or a few expected\n// arguments at the beginning and then a variable number of values to operate\n// on. This helper accumulates all remaining arguments past the function’s\n// argument length (or an explicit `startIndex`), into an array that becomes\n// the last argument. Similar to ES6’s \"rest parameter\".\nexport default function restArguments(func, startIndex) {\n  startIndex = startIndex == null ? func.length - 1 : +startIndex;\n  return function() {\n    var length = Math.max(arguments.length - startIndex, 0),\n        rest = Array(length),\n        index = 0;\n    for (; index < length; index++) {\n      rest[index] = arguments[index + startIndex];\n    }\n    switch (startIndex) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, arguments[0], rest);\n      case 2: return func.call(this, arguments[0], arguments[1], rest);\n    }\n    var args = Array(startIndex + 1);\n    for (index = 0; index < startIndex; index++) {\n      args[index] = arguments[index];\n    }\n    args[startIndex] = rest;\n    return func.apply(this, args);\n  };\n}\n","// Is a given variable an object?\nexport default function isObject(obj) {\n  var type = typeof obj;\n  return type === 'function' || (type === 'object' && !!obj);\n}\n","// Is a given value equal to null?\nexport default function isNull(obj) {\n  return obj === null;\n}\n","// Is a given variable undefined?\nexport default function isUndefined(obj) {\n  return obj === void 0;\n}\n","import { toString } from './_setup.js';\n\n// Is a given value a boolean?\nexport default function isBoolean(obj) {\n  return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n}\n","// Is a given value a DOM element?\nexport default function isElement(obj) {\n  return !!(obj && obj.nodeType === 1);\n}\n","import { toString } from './_setup.js';\n\n// Internal function for creating a `toString`-based type tester.\nexport default function tagTester(name) {\n  var tag = '[object ' + name + ']';\n  return function(obj) {\n    return toString.call(obj) === tag;\n  };\n}\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('String');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Number');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Date');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('RegExp');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Error');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Symbol');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('ArrayBuffer');\n","import tagTester from './_tagTester.js';\nimport { root } from './_setup.js';\n\nvar isFunction = tagTester('Function');\n\n// Optimize `isFunction` if appropriate. Work around some `typeof` bugs in old\n// v8, IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\nvar nodelist = root.document && root.document.childNodes;\nif (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n  isFunction = function(obj) {\n    return typeof obj == 'function' || false;\n  };\n}\n\nexport default isFunction;\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Object');\n","import { supportsDataView } from './_setup.js';\nimport hasObjectTag from './_hasObjectTag.js';\n\n// In IE 10 - Edge 13, `DataView` has string tag `'[object Object]'`.\n// In IE 11, the most common among them, this problem also applies to\n// `Map`, `WeakMap` and `Set`.\nexport var hasStringTagBug = (\n      supportsDataView && hasObjectTag(new DataView(new ArrayBuffer(8)))\n    ),\n    isIE11 = (typeof Map !== 'undefined' && hasObjectTag(new Map));\n","import tagTester from './_tagTester.js';\nimport isFunction from './isFunction.js';\nimport isArrayBuffer from './isArrayBuffer.js';\nimport { hasStringTagBug } from './_stringTagBug.js';\n\nvar isDataView = tagTester('DataView');\n\n// In IE 10 - Edge 13, we need a different heuristic\n// to determine whether an object is a `DataView`.\nfunction ie10IsDataView(obj) {\n  return obj != null && isFunction(obj.getInt8) && isArrayBuffer(obj.buffer);\n}\n\nexport default (hasStringTagBug ? ie10IsDataView : isDataView);\n","import { nativeIsArray } from './_setup.js';\nimport tagTester from './_tagTester.js';\n\n// Is a given value an array?\n// Delegates to ECMA5's native `Array.isArray`.\nexport default nativeIsArray || tagTester('Array');\n","import { hasOwnProperty } from './_setup.js';\n\n// Internal function to check whether `key` is an own property name of `obj`.\nexport default function has(obj, key) {\n  return obj != null && hasOwnProperty.call(obj, key);\n}\n","import tagTester from './_tagTester.js';\nimport has from './_has.js';\n\nvar isArguments = tagTester('Arguments');\n\n// Define a fallback version of the method in browsers (ahem, IE < 9), where\n// there isn't any inspectable \"Arguments\" type.\n(function() {\n  if (!isArguments(arguments)) {\n    isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n}());\n\nexport default isArguments;\n","import { _isFinite } from './_setup.js';\nimport isSymbol from './isSymbol.js';\n\n// Is a given object a finite number?\nexport default function isFinite(obj) {\n  return !isSymbol(obj) && _isFinite(obj) && !isNaN(parseFloat(obj));\n}\n","import { _isNaN } from './_setup.js';\nimport isNumber from './isNumber.js';\n\n// Is the given value `NaN`?\nexport default function isNaN(obj) {\n  return isNumber(obj) && _isNaN(obj);\n}\n","// Predicate-generating function. Often useful outside of Underscore.\nexport default function constant(value) {\n  return function() {\n    return value;\n  };\n}\n","import { MAX_ARRAY_INDEX } from './_setup.js';\n\n// Common internal logic for `isArrayLike` and `isBufferLike`.\nexport default function createSizePropertyCheck(getSizeProperty) {\n  return function(collection) {\n    var sizeProperty = getSizeProperty(collection);\n    return typeof sizeProperty == 'number' && sizeProperty >= 0 && sizeProperty <= MAX_ARRAY_INDEX;\n  }\n}\n","// Internal helper to generate a function to obtain property `key` from `obj`.\nexport default function shallowProperty(key) {\n  return function(obj) {\n    return obj == null ? void 0 : obj[key];\n  };\n}\n","import shallowProperty from './_shallowProperty.js';\n\n// Internal helper to obtain the `byteLength` property of an object.\nexport default shallowProperty('byteLength');\n","import createSizePropertyCheck from './_createSizePropertyCheck.js';\nimport getByteLength from './_getByteLength.js';\n\n// Internal helper to determine whether we should spend extensive checks against\n// `ArrayBuffer` et al.\nexport default createSizePropertyCheck(getByteLength);\n","import { supportsArrayBuffer, nativeIsView, toString } from './_setup.js';\nimport isDataView from './isDataView.js';\nimport constant from './constant.js';\nimport isBufferLike from './_isBufferLike.js';\n\n// Is a given value a typed array?\nvar typedArrayPattern = /\\[object ((I|Ui)nt(8|16|32)|Float(32|64)|Uint8Clamped|Big(I|Ui)nt64)Array\\]/;\nfunction isTypedArray(obj) {\n  // `ArrayBuffer.isView` is the most future-proof, so use it when available.\n  // Otherwise, fall back on the above regular expression.\n  return nativeIsView ? (nativeIsView(obj) && !isDataView(obj)) :\n                isBufferLike(obj) && typedArrayPattern.test(toString.call(obj));\n}\n\nexport default supportsArrayBuffer ? isTypedArray : constant(false);\n","import shallowProperty from './_shallowProperty.js';\n\n// Internal helper to obtain the `length` property of an object.\nexport default shallowProperty('length');\n","import { nonEnumerableProps, ObjProto } from './_setup.js';\nimport isFunction from './isFunction.js';\nimport has from './_has.js';\n\n// Internal helper to create a simple lookup structure.\n// `collectNonEnumProps` used to depend on `_.contains`, but this led to\n// circular imports. `emulatedSet` is a one-off solution that only works for\n// arrays of strings.\nfunction emulatedSet(keys) {\n  var hash = {};\n  for (var l = keys.length, i = 0; i < l; ++i) hash[keys[i]] = true;\n  return {\n    contains: function(key) { return hash[key] === true; },\n    push: function(key) {\n      hash[key] = true;\n      return keys.push(key);\n    }\n  };\n}\n\n// Internal helper. Checks `keys` for the presence of keys in IE < 9 that won't\n// be iterated by `for key in ...` and thus missed. Extends `keys` in place if\n// needed.\nexport default function collectNonEnumProps(obj, keys) {\n  keys = emulatedSet(keys);\n  var nonEnumIdx = nonEnumerableProps.length;\n  var constructor = obj.constructor;\n  var proto = (isFunction(constructor) && constructor.prototype) || ObjProto;\n\n  // Constructor is a special case.\n  var prop = 'constructor';\n  if (has(obj, prop) && !keys.contains(prop)) keys.push(prop);\n\n  while (nonEnumIdx--) {\n    prop = nonEnumerableProps[nonEnumIdx];\n    if (prop in obj && obj[prop] !== proto[prop] && !keys.contains(prop)) {\n      keys.push(prop);\n    }\n  }\n}\n","import isObject from './isObject.js';\nimport { nativeKeys, hasEnumBug } from './_setup.js';\nimport has from './_has.js';\nimport collectNonEnumProps from './_collectNonEnumProps.js';\n\n// Retrieve the names of an object's own properties.\n// Delegates to **ECMAScript 5**'s native `Object.keys`.\nexport default function keys(obj) {\n  if (!isObject(obj)) return [];\n  if (nativeKeys) return nativeKeys(obj);\n  var keys = [];\n  for (var key in obj) if (has(obj, key)) keys.push(key);\n  // Ahem, IE < 9.\n  if (hasEnumBug) collectNonEnumProps(obj, keys);\n  return keys;\n}\n","import getLength from './_getLength.js';\nimport isArray from './isArray.js';\nimport isString from './isString.js';\nimport isArguments from './isArguments.js';\nimport keys from './keys.js';\n\n// Is a given array, string, or object empty?\n// An \"empty\" object has no enumerable own-properties.\nexport default function isEmpty(obj) {\n  if (obj == null) return true;\n  // Skip the more expensive `toString`-based type checks if `obj` has no\n  // `.length`.\n  var length = getLength(obj);\n  if (typeof length == 'number' && (\n    isArray(obj) || isString(obj) || isArguments(obj)\n  )) return length === 0;\n  return getLength(keys(obj)) === 0;\n}\n","import keys from './keys.js';\n\n// Returns whether an object has a given set of `key:value` pairs.\nexport default function isMatch(object, attrs) {\n  var _keys = keys(attrs), length = _keys.length;\n  if (object == null) return !length;\n  var obj = Object(object);\n  for (var i = 0; i < length; i++) {\n    var key = _keys[i];\n    if (attrs[key] !== obj[key] || !(key in obj)) return false;\n  }\n  return true;\n}\n","import { VERSION } from './_setup.js';\n\n// If Underscore is called as a function, it returns a wrapped object that can\n// be used OO-style. This wrapper holds altered versions of all functions added\n// through `_.mixin`. Wrapped objects may be chained.\nexport default function _(obj) {\n  if (obj instanceof _) return obj;\n  if (!(this instanceof _)) return new _(obj);\n  this._wrapped = obj;\n}\n\n_.VERSION = VERSION;\n\n// Extracts the result from a wrapped and chained object.\n_.prototype.value = function() {\n  return this._wrapped;\n};\n\n// Provide unwrapping proxies for some methods used in engine operations\n// such as arithmetic and JSON stringification.\n_.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n_.prototype.toString = function() {\n  return String(this._wrapped);\n};\n","import getByteLength from './_getByteLength.js';\n\n// Internal function to wrap or shallow-copy an ArrayBuffer,\n// typed array or DataView to a new view, reusing the buffer.\nexport default function toBufferView(bufferSource) {\n  return new Uint8Array(\n    bufferSource.buffer || bufferSource,\n    bufferSource.byteOffset || 0,\n    getByteLength(bufferSource)\n  );\n}\n","import _ from './underscore.js';\nimport { toString, SymbolProto } from './_setup.js';\nimport getByteLength from './_getByteLength.js';\nimport isTypedArray from './isTypedArray.js';\nimport isFunction from './isFunction.js';\nimport { hasStringTagBug }  from './_stringTagBug.js';\nimport isDataView from './isDataView.js';\nimport keys from './keys.js';\nimport has from './_has.js';\nimport toBufferView from './_toBufferView.js';\n\n// We use this string twice, so give it a name for minification.\nvar tagDataView = '[object DataView]';\n\n// Internal recursive comparison function for `_.isEqual`.\nfunction eq(a, b, aStack, bStack) {\n  // Identical objects are equal. `0 === -0`, but they aren't identical.\n  // See the [Harmony `egal` proposal](https://wiki.ecmascript.org/doku.php?id=harmony:egal).\n  if (a === b) return a !== 0 || 1 / a === 1 / b;\n  // `null` or `undefined` only equal to itself (strict comparison).\n  if (a == null || b == null) return false;\n  // `NaN`s are equivalent, but non-reflexive.\n  if (a !== a) return b !== b;\n  // Exhaust primitive checks\n  var type = typeof a;\n  if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n  return deepEq(a, b, aStack, bStack);\n}\n\n// Internal recursive comparison function for `_.isEqual`.\nfunction deepEq(a, b, aStack, bStack) {\n  // Unwrap any wrapped objects.\n  if (a instanceof _) a = a._wrapped;\n  if (b instanceof _) b = b._wrapped;\n  // Compare `[[Class]]` names.\n  var className = toString.call(a);\n  if (className !== toString.call(b)) return false;\n  // Work around a bug in IE 10 - Edge 13.\n  if (hasStringTagBug && className == '[object Object]' && isDataView(a)) {\n    if (!isDataView(b)) return false;\n    className = tagDataView;\n  }\n  switch (className) {\n    // These types are compared by value.\n    case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n    case '[object String]':\n      // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n      // equivalent to `new String(\"5\")`.\n      return '' + a === '' + b;\n    case '[object Number]':\n      // `NaN`s are equivalent, but non-reflexive.\n      // Object(NaN) is equivalent to NaN.\n      if (+a !== +a) return +b !== +b;\n      // An `egal` comparison is performed for other numeric values.\n      return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n    case '[object Date]':\n    case '[object Boolean]':\n      // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n      // millisecond representations. Note that invalid dates with millisecond representations\n      // of `NaN` are not equivalent.\n      return +a === +b;\n    case '[object Symbol]':\n      return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    case '[object ArrayBuffer]':\n    case tagDataView:\n      // Coerce to typed array so we can fall through.\n      return deepEq(toBufferView(a), toBufferView(b), aStack, bStack);\n  }\n\n  var areArrays = className === '[object Array]';\n  if (!areArrays && isTypedArray(a)) {\n      var byteLength = getByteLength(a);\n      if (byteLength !== getByteLength(b)) return false;\n      if (a.buffer === b.buffer && a.byteOffset === b.byteOffset) return true;\n      areArrays = true;\n  }\n  if (!areArrays) {\n    if (typeof a != 'object' || typeof b != 'object') return false;\n\n    // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n    // from different frames are.\n    var aCtor = a.constructor, bCtor = b.constructor;\n    if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\n                             isFunction(bCtor) && bCtor instanceof bCtor)\n                        && ('constructor' in a && 'constructor' in b)) {\n      return false;\n    }\n  }\n  // Assume equality for cyclic structures. The algorithm for detecting cyclic\n  // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n  // Initializing stack of traversed objects.\n  // It's done here since we only need them for objects and arrays comparison.\n  aStack = aStack || [];\n  bStack = bStack || [];\n  var length = aStack.length;\n  while (length--) {\n    // Linear search. Performance is inversely proportional to the number of\n    // unique nested structures.\n    if (aStack[length] === a) return bStack[length] === b;\n  }\n\n  // Add the first object to the stack of traversed objects.\n  aStack.push(a);\n  bStack.push(b);\n\n  // Recursively compare objects and arrays.\n  if (areArrays) {\n    // Compare array lengths to determine if a deep comparison is necessary.\n    length = a.length;\n    if (length !== b.length) return false;\n    // Deep compare the contents, ignoring non-numeric properties.\n    while (length--) {\n      if (!eq(a[length], b[length], aStack, bStack)) return false;\n    }\n  } else {\n    // Deep compare objects.\n    var _keys = keys(a), key;\n    length = _keys.length;\n    // Ensure that both objects contain the same number of properties before comparing deep equality.\n    if (keys(b).length !== length) return false;\n    while (length--) {\n      // Deep compare each member\n      key = _keys[length];\n      if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n    }\n  }\n  // Remove the first object from the stack of traversed objects.\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\n// Perform a deep comparison to check if two objects are equal.\nexport default function isEqual(a, b) {\n  return eq(a, b);\n}\n","import isObject from './isObject.js';\nimport { hasEnumBug } from './_setup.js';\nimport collectNonEnumProps from './_collectNonEnumProps.js';\n\n// Retrieve all the enumerable property names of an object.\nexport default function allKeys(obj) {\n  if (!isObject(obj)) return [];\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  // Ahem, IE < 9.\n  if (hasEnumBug) collectNonEnumProps(obj, keys);\n  return keys;\n}\n","import getLength from './_getLength.js';\nimport isFunction from './isFunction.js';\nimport allKeys from './allKeys.js';\n\n// Since the regular `Object.prototype.toString` type tests don't work for\n// some types in IE 11, we use a fingerprinting heuristic instead, based\n// on the methods. It's not great, but it's the best we got.\n// The fingerprint method lists are defined below.\nexport function ie11fingerprint(methods) {\n  var length = getLength(methods);\n  return function(obj) {\n    if (obj == null) return false;\n    // `Map`, `WeakMap` and `Set` have no enumerable keys.\n    var keys = allKeys(obj);\n    if (getLength(keys)) return false;\n    for (var i = 0; i < length; i++) {\n      if (!isFunction(obj[methods[i]])) return false;\n    }\n    // If we are testing against `WeakMap`, we need to ensure that\n    // `obj` doesn't have a `forEach` method in order to distinguish\n    // it from a regular `Map`.\n    return methods !== weakMapMethods || !isFunction(obj[forEachName]);\n  };\n}\n\n// In the interest of compact minification, we write\n// each string in the fingerprints only once.\nvar forEachName = 'forEach',\n    hasName = 'has',\n    commonInit = ['clear', 'delete'],\n    mapTail = ['get', hasName, 'set'];\n\n// `Map`, `WeakMap` and `Set` each have slightly different\n// combinations of the above sublists.\nexport var mapMethods = commonInit.concat(forEachName, mapTail),\n    weakMapMethods = commonInit.concat(mapTail),\n    setMethods = ['add'].concat(commonInit, forEachName, hasName);\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, mapMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(mapMethods) : tagTester('Map');\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, weakMapMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(weakMapMethods) : tagTester('WeakMap');\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, setMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(setMethods) : tagTester('Set');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('WeakSet');\n","import keys from './keys.js';\n\n// Retrieve the values of an object's properties.\nexport default function values(obj) {\n  var _keys = keys(obj);\n  var length = _keys.length;\n  var values = Array(length);\n  for (var i = 0; i < length; i++) {\n    values[i] = obj[_keys[i]];\n  }\n  return values;\n}\n","import keys from './keys.js';\n\n// Convert an object into a list of `[key, value]` pairs.\n// The opposite of `_.object` with one argument.\nexport default function pairs(obj) {\n  var _keys = keys(obj);\n  var length = _keys.length;\n  var pairs = Array(length);\n  for (var i = 0; i < length; i++) {\n    pairs[i] = [_keys[i], obj[_keys[i]]];\n  }\n  return pairs;\n}\n","import keys from './keys.js';\n\n// Invert the keys and values of an object. The values must be serializable.\nexport default function invert(obj) {\n  var result = {};\n  var _keys = keys(obj);\n  for (var i = 0, length = _keys.length; i < length; i++) {\n    result[obj[_keys[i]]] = _keys[i];\n  }\n  return result;\n}\n","import isFunction from './isFunction.js';\n\n// Return a sorted list of the function names available on the object.\nexport default function functions(obj) {\n  var names = [];\n  for (var key in obj) {\n    if (isFunction(obj[key])) names.push(key);\n  }\n  return names.sort();\n}\n","// An internal function for creating assigner functions.\nexport default function createAssigner(keysFunc, defaults) {\n  return function(obj) {\n    var length = arguments.length;\n    if (defaults) obj = Object(obj);\n    if (length < 2 || obj == null) return obj;\n    for (var index = 1; index < length; index++) {\n      var source = arguments[index],\n          keys = keysFunc(source),\n          l = keys.length;\n      for (var i = 0; i < l; i++) {\n        var key = keys[i];\n        if (!defaults || obj[key] === void 0) obj[key] = source[key];\n      }\n    }\n    return obj;\n  };\n}\n","import createAssigner from './_createAssigner.js';\nimport allKeys from './allKeys.js';\n\n// Extend a given object with all the properties in passed-in object(s).\nexport default createAssigner(allKeys);\n","import createAssigner from './_createAssigner.js';\nimport keys from './keys.js';\n\n// Assigns a given object with all the own properties in the passed-in\n// object(s).\n// (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\nexport default createAssigner(keys);\n","import createAssigner from './_createAssigner.js';\nimport allKeys from './allKeys.js';\n\n// Fill in a given object with default properties.\nexport default createAssigner(allKeys, true);\n","import isObject from './isObject.js';\nimport { nativeCreate } from './_setup.js';\n\n// Create a naked function reference for surrogate-prototype-swapping.\nfunction ctor() {\n  return function(){};\n}\n\n// An internal function for creating a new object that inherits from another.\nexport default function baseCreate(prototype) {\n  if (!isObject(prototype)) return {};\n  if (nativeCreate) return nativeCreate(prototype);\n  var Ctor = ctor();\n  Ctor.prototype = prototype;\n  var result = new Ctor;\n  Ctor.prototype = null;\n  return result;\n}\n","import baseCreate from './_baseCreate.js';\nimport extendOwn from './extendOwn.js';\n\n// Creates an object that inherits from the given prototype object.\n// If additional properties are provided then they will be added to the\n// created object.\nexport default function create(prototype, props) {\n  var result = baseCreate(prototype);\n  if (props) extendOwn(result, props);\n  return result;\n}\n","import isObject from './isObject.js';\nimport isArray from './isArray.js';\nimport extend from './extend.js';\n\n// Create a (shallow-cloned) duplicate of an object.\nexport default function clone(obj) {\n  if (!isObject(obj)) return obj;\n  return isArray(obj) ? obj.slice() : extend({}, obj);\n}\n","// Invokes `interceptor` with the `obj` and then returns `obj`.\n// The primary purpose of this method is to \"tap into\" a method chain, in\n// order to perform operations on intermediate results within the chain.\nexport default function tap(obj, interceptor) {\n  interceptor(obj);\n  return obj;\n}\n","import _ from './underscore.js';\nimport isArray from './isArray.js';\n\n// Normalize a (deep) property `path` to array.\n// Like `_.iteratee`, this function can be customized.\nexport default function toPath(path) {\n  return isArray(path) ? path : [path];\n}\n_.toPath = toPath;\n","import _ from './underscore.js';\nimport './toPath.js';\n\n// Internal wrapper for `_.toPath` to enable minification.\n// Similar to `cb` for `_.iteratee`.\nexport default function toPath(path) {\n  return _.toPath(path);\n}\n","// Internal function to obtain a nested property in `obj` along `path`.\nexport default function deepGet(obj, path) {\n  var length = path.length;\n  for (var i = 0; i < length; i++) {\n    if (obj == null) return void 0;\n    obj = obj[path[i]];\n  }\n  return length ? obj : void 0;\n}\n","import toPath from './_toPath.js';\nimport deepGet from './_deepGet.js';\nimport isUndefined from './isUndefined.js';\n\n// Get the value of the (deep) property on `path` from `object`.\n// If any property in `path` does not exist or if the value is\n// `undefined`, return `defaultValue` instead.\n// The `path` is normalized through `_.toPath`.\nexport default function get(object, path, defaultValue) {\n  var value = deepGet(object, toPath(path));\n  return isUndefined(value) ? defaultValue : value;\n}\n","import _has from './_has.js';\nimport toPath from './_toPath.js';\n\n// Shortcut function for checking if an object has a given property directly on\n// itself (in other words, not on a prototype). Unlike the internal `has`\n// function, this public version can also traverse nested properties.\nexport default function has(obj, path) {\n  path = toPath(path);\n  var length = path.length;\n  for (var i = 0; i < length; i++) {\n    var key = path[i];\n    if (!_has(obj, key)) return false;\n    obj = obj[key];\n  }\n  return !!length;\n}\n","// Keep the identity function around for default iteratees.\nexport default function identity(value) {\n  return value;\n}\n","import extendOwn from './extendOwn.js';\nimport isMatch from './isMatch.js';\n\n// Returns a predicate for checking whether an object has a given set of\n// `key:value` pairs.\nexport default function matcher(attrs) {\n  attrs = extendOwn({}, attrs);\n  return function(obj) {\n    return isMatch(obj, attrs);\n  };\n}\n","import deepGet from './_deepGet.js';\nimport toPath from './_toPath.js';\n\n// Creates a function that, when passed an object, will traverse that object’s\n// properties down the given `path`, specified as an array of keys or indices.\nexport default function property(path) {\n  path = toPath(path);\n  return function(obj) {\n    return deepGet(obj, path);\n  };\n}\n","// Internal function that returns an efficient (for current engines) version\n// of the passed-in callback, to be repeatedly applied in other Underscore\n// functions.\nexport default function optimizeCb(func, context, argCount) {\n  if (context === void 0) return func;\n  switch (argCount == null ? 3 : argCount) {\n    case 1: return function(value) {\n      return func.call(context, value);\n    };\n    // The 2-argument case is omitted because we’re not using it.\n    case 3: return function(value, index, collection) {\n      return func.call(context, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(context, accumulator, value, index, collection);\n    };\n  }\n  return function() {\n    return func.apply(context, arguments);\n  };\n}\n","import identity from './identity.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isArray from './isArray.js';\nimport matcher from './matcher.js';\nimport property from './property.js';\nimport optimizeCb from './_optimizeCb.js';\n\n// An internal function to generate callbacks that can be applied to each\n// element in a collection, returning the desired result — either `_.identity`,\n// an arbitrary callback, a property matcher, or a property accessor.\nexport default function baseIteratee(value, context, argCount) {\n  if (value == null) return identity;\n  if (isFunction(value)) return optimizeCb(value, context, argCount);\n  if (isObject(value) && !isArray(value)) return matcher(value);\n  return property(value);\n}\n","import _ from './underscore.js';\nimport baseIteratee from './_baseIteratee.js';\n\n// External wrapper for our callback generator. Users may customize\n// `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n// This abstraction hides the internal-only `argCount` argument.\nexport default function iteratee(value, context) {\n  return baseIteratee(value, context, Infinity);\n}\n_.iteratee = iteratee;\n","import _ from './underscore.js';\nimport baseIteratee from './_baseIteratee.js';\nimport iteratee from './iteratee.js';\n\n// The function we call internally to generate a callback. It invokes\n// `_.iteratee` if overridden, otherwise `baseIteratee`.\nexport default function cb(value, context, argCount) {\n  if (_.iteratee !== iteratee) return _.iteratee(value, context);\n  return baseIteratee(value, context, argCount);\n}\n","import cb from './_cb.js';\nimport keys from './keys.js';\n\n// Returns the results of applying the `iteratee` to each element of `obj`.\n// In contrast to `_.map` it returns an object.\nexport default function mapObject(obj, iteratee, context) {\n  iteratee = cb(iteratee, context);\n  var _keys = keys(obj),\n      length = _keys.length,\n      results = {};\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys[index];\n    results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n  }\n  return results;\n}\n","// Predicate-generating function. Often useful outside of Underscore.\nexport default function noop(){}\n","import noop from './noop.js';\nimport get from './get.js';\n\n// Generates a function for a given object that returns a given property.\nexport default function propertyOf(obj) {\n  if (obj == null) return noop;\n  return function(path) {\n    return get(obj, path);\n  };\n}\n","import optimizeCb from './_optimizeCb.js';\n\n// Run a function **n** times.\nexport default function times(n, iteratee, context) {\n  var accum = Array(Math.max(0, n));\n  iteratee = optimizeCb(iteratee, context, 1);\n  for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n  return accum;\n}\n","// Return a random integer between `min` and `max` (inclusive).\nexport default function random(min, max) {\n  if (max == null) {\n    max = min;\n    min = 0;\n  }\n  return min + Math.floor(Math.random() * (max - min + 1));\n}\n","// A (possibly faster) way to get the current timestamp as an integer.\nexport default Date.now || function() {\n  return new Date().getTime();\n};\n","import keys from './keys.js';\n\n// Internal helper to generate functions for escaping and unescaping strings\n// to/from HTML interpolation.\nexport default function createEscaper(map) {\n  var escaper = function(match) {\n    return map[match];\n  };\n  // Regexes for identifying a key that needs to be escaped.\n  var source = '(?:' + keys(map).join('|') + ')';\n  var testRegexp = RegExp(source);\n  var replaceRegexp = RegExp(source, 'g');\n  return function(string) {\n    string = string == null ? '' : '' + string;\n    return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n  };\n}\n","// Internal list of HTML entities for escaping.\nexport default {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;'\n};\n","import createEscaper from './_createEscaper.js';\nimport escapeMap from './_escapeMap.js';\n\n// Function for escaping strings to HTML interpolation.\nexport default createEscaper(escapeMap);\n","import createEscaper from './_createEscaper.js';\nimport unescapeMap from './_unescapeMap.js';\n\n// Function for unescaping strings from HTML interpolation.\nexport default createEscaper(unescapeMap);\n","import invert from './invert.js';\nimport escapeMap from './_escapeMap.js';\n\n// Internal list of HTML entities for unescaping.\nexport default invert(escapeMap);\n","import _ from './underscore.js';\n\n// By default, Underscore uses ERB-style template delimiters. Change the\n// following template settings to use alternative delimiters.\nexport default _.templateSettings = {\n  evaluate: /<%([\\s\\S]+?)%>/g,\n  interpolate: /<%=([\\s\\S]+?)%>/g,\n  escape: /<%-([\\s\\S]+?)%>/g\n};\n","import defaults from './defaults.js';\nimport _ from './underscore.js';\nimport './templateSettings.js';\n\n// When customizing `_.templateSettings`, if you don't want to define an\n// interpolation, evaluation or escaping regex, we need one that is\n// guaranteed not to match.\nvar noMatch = /(.)^/;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar escapes = {\n  \"'\": \"'\",\n  '\\\\': '\\\\',\n  '\\r': 'r',\n  '\\n': 'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction escapeChar(match) {\n  return '\\\\' + escapes[match];\n}\n\n// In order to prevent third-party code injection through\n// `_.templateSettings.variable`, we test it against the following regular\n// expression. It is intentionally a bit more liberal than just matching valid\n// identifiers, but still prevents possible loopholes through defaults or\n// destructuring assignment.\nvar bareIdentifier = /^\\s*(\\w|\\$)+\\s*$/;\n\n// JavaScript micro-templating, similar to John Resig's implementation.\n// Underscore templating handles arbitrary delimiters, preserves whitespace,\n// and correctly escapes quotes within interpolated code.\n// NB: `oldSettings` only exists for backwards compatibility.\nexport default function template(text, settings, oldSettings) {\n  if (!settings && oldSettings) settings = oldSettings;\n  settings = defaults({}, settings, _.templateSettings);\n\n  // Combine delimiters into one regular expression via alternation.\n  var matcher = RegExp([\n    (settings.escape || noMatch).source,\n    (settings.interpolate || noMatch).source,\n    (settings.evaluate || noMatch).source\n  ].join('|') + '|$', 'g');\n\n  // Compile the template source, escaping string literals appropriately.\n  var index = 0;\n  var source = \"__p+='\";\n  text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n    source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n    index = offset + match.length;\n\n    if (escape) {\n      source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n    } else if (interpolate) {\n      source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n    } else if (evaluate) {\n      source += \"';\\n\" + evaluate + \"\\n__p+='\";\n    }\n\n    // Adobe VMs need the match returned to produce the correct offset.\n    return match;\n  });\n  source += \"';\\n\";\n\n  var argument = settings.variable;\n  if (argument) {\n    // Insure against third-party code injection. (CVE-2021-23358)\n    if (!bareIdentifier.test(argument)) throw new Error(\n      'variable is not a bare identifier: ' + argument\n    );\n  } else {\n    // If a variable is not specified, place data values in local scope.\n    source = 'with(obj||{}){\\n' + source + '}\\n';\n    argument = 'obj';\n  }\n\n  source = \"var __t,__p='',__j=Array.prototype.join,\" +\n    \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n    source + 'return __p;\\n';\n\n  var render;\n  try {\n    render = new Function(argument, '_', source);\n  } catch (e) {\n    e.source = source;\n    throw e;\n  }\n\n  var template = function(data) {\n    return render.call(this, data, _);\n  };\n\n  // Provide the compiled source as a convenience for precompilation.\n  template.source = 'function(' + argument + '){\\n' + source + '}';\n\n  return template;\n}\n","import isFunction from './isFunction.js';\nimport toPath from './_toPath.js';\n\n// Traverses the children of `obj` along `path`. If a child is a function, it\n// is invoked with its parent as context. Returns the value of the final\n// child, or `fallback` if any child is undefined.\nexport default function result(obj, path, fallback) {\n  path = toPath(path);\n  var length = path.length;\n  if (!length) {\n    return isFunction(fallback) ? fallback.call(obj) : fallback;\n  }\n  for (var i = 0; i < length; i++) {\n    var prop = obj == null ? void 0 : obj[path[i]];\n    if (prop === void 0) {\n      prop = fallback;\n      i = length; // Ensure we don't continue iterating.\n    }\n    obj = isFunction(prop) ? prop.call(obj) : prop;\n  }\n  return obj;\n}\n","// Generate a unique integer id (unique within the entire client session).\n// Useful for temporary DOM ids.\nvar idCounter = 0;\nexport default function uniqueId(prefix) {\n  var id = ++idCounter + '';\n  return prefix ? prefix + id : id;\n}\n","import _ from './underscore.js';\n\n// Start chaining a wrapped Underscore object.\nexport default function chain(obj) {\n  var instance = _(obj);\n  instance._chain = true;\n  return instance;\n}\n","import baseCreate from './_baseCreate.js';\nimport isObject from './isObject.js';\n\n// Internal function to execute `sourceFunc` bound to `context` with optional\n// `args`. Determines whether to execute a function as a constructor or as a\n// normal function.\nexport default function executeBound(sourceFunc, boundFunc, context, callingContext, args) {\n  if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n  var self = baseCreate(sourceFunc.prototype);\n  var result = sourceFunc.apply(self, args);\n  if (isObject(result)) return result;\n  return self;\n}\n","import restArguments from './restArguments.js';\nimport executeBound from './_executeBound.js';\nimport _ from './underscore.js';\n\n// Partially apply a function by creating a version that has had some of its\n// arguments pre-filled, without changing its dynamic `this` context. `_` acts\n// as a placeholder by default, allowing any combination of arguments to be\n// pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\nvar partial = restArguments(function(func, boundArgs) {\n  var placeholder = partial.placeholder;\n  var bound = function() {\n    var position = 0, length = boundArgs.length;\n    var args = Array(length);\n    for (var i = 0; i < length; i++) {\n      args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n    }\n    while (position < arguments.length) args.push(arguments[position++]);\n    return executeBound(func, bound, this, this, args);\n  };\n  return bound;\n});\n\npartial.placeholder = _;\nexport default partial;\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport executeBound from './_executeBound.js';\n\n// Create a function bound to a given object (assigning `this`, and arguments,\n// optionally).\nexport default restArguments(function(func, context, args) {\n  if (!isFunction(func)) throw new TypeError('Bind must be called on a function');\n  var bound = restArguments(function(callArgs) {\n    return executeBound(func, bound, context, this, args.concat(callArgs));\n  });\n  return bound;\n});\n","import createSizePropertyCheck from './_createSizePropertyCheck.js';\nimport getLength from './_getLength.js';\n\n// Internal helper for collection methods to determine whether a collection\n// should be iterated as an array or as an object.\n// Related: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n// Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\nexport default createSizePropertyCheck(getLength);\n","import getLength from './_getLength.js';\nimport isArrayLike from './_isArrayLike.js';\nimport isArray from './isArray.js';\nimport isArguments from './isArguments.js';\n\n// Internal implementation of a recursive `flatten` function.\nexport default function flatten(input, depth, strict, output) {\n  output = output || [];\n  if (!depth && depth !== 0) {\n    depth = Infinity;\n  } else if (depth <= 0) {\n    return output.concat(input);\n  }\n  var idx = output.length;\n  for (var i = 0, length = getLength(input); i < length; i++) {\n    var value = input[i];\n    if (isArrayLike(value) && (isArray(value) || isArguments(value))) {\n      // Flatten current level of array or arguments object.\n      if (depth > 1) {\n        flatten(value, depth - 1, strict, output);\n        idx = output.length;\n      } else {\n        var j = 0, len = value.length;\n        while (j < len) output[idx++] = value[j++];\n      }\n    } else if (!strict) {\n      output[idx++] = value;\n    }\n  }\n  return output;\n}\n","import restArguments from './restArguments.js';\nimport flatten from './_flatten.js';\nimport bind from './bind.js';\n\n// Bind a number of an object's methods to that object. Remaining arguments\n// are the method names to be bound. Useful for ensuring that all callbacks\n// defined on an object belong to it.\nexport default restArguments(function(obj, keys) {\n  keys = flatten(keys, false, false);\n  var index = keys.length;\n  if (index < 1) throw new Error('bindAll must be passed function names');\n  while (index--) {\n    var key = keys[index];\n    obj[key] = bind(obj[key], obj);\n  }\n  return obj;\n});\n","import has from './_has.js';\n\n// Memoize an expensive function by storing its results.\nexport default function memoize(func, hasher) {\n  var memoize = function(key) {\n    var cache = memoize.cache;\n    var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n    if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n    return cache[address];\n  };\n  memoize.cache = {};\n  return memoize;\n}\n","import restArguments from './restArguments.js';\n\n// Delays a function for the given number of milliseconds, and then calls\n// it with the arguments supplied.\nexport default restArguments(function(func, wait, args) {\n  return setTimeout(function() {\n    return func.apply(null, args);\n  }, wait);\n});\n","import partial from './partial.js';\nimport delay from './delay.js';\nimport _ from './underscore.js';\n\n// Defers a function, scheduling it to run after the current call stack has\n// cleared.\nexport default partial(delay, _, 1);\n","import now from './now.js';\n\n// Returns a function, that, when invoked, will only be triggered at most once\n// during a given window of time. Normally, the throttled function will run\n// as much as it can, without ever going more than once per `wait` duration;\n// but if you'd like to disable the execution on the leading edge, pass\n// `{leading: false}`. To disable execution on the trailing edge, ditto.\nexport default function throttle(func, wait, options) {\n  var timeout, context, args, result;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function() {\n    var _now = now();\n    if (!previous && options.leading === false) previous = _now;\n    var remaining = wait - (_now - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = _now;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n\n  throttled.cancel = function() {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n","import restArguments from './restArguments.js';\nimport now from './now.js';\n\n// When a sequence of calls of the returned function ends, the argument\n// function is triggered. The end of a sequence is defined by the `wait`\n// parameter. If `immediate` is passed, the argument function will be\n// triggered at the beginning of the sequence instead of at the end.\nexport default function debounce(func, wait, immediate) {\n  var timeout, previous, args, result, context;\n\n  var later = function() {\n    var passed = now() - previous;\n    if (wait > passed) {\n      timeout = setTimeout(later, wait - passed);\n    } else {\n      timeout = null;\n      if (!immediate) result = func.apply(context, args);\n      // This check is needed because `func` can recursively invoke `debounced`.\n      if (!timeout) args = context = null;\n    }\n  };\n\n  var debounced = restArguments(function(_args) {\n    context = this;\n    args = _args;\n    previous = now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n      if (immediate) result = func.apply(context, args);\n    }\n    return result;\n  });\n\n  debounced.cancel = function() {\n    clearTimeout(timeout);\n    timeout = args = context = null;\n  };\n\n  return debounced;\n}\n","import partial from './partial.js';\n\n// Returns the first function passed as an argument to the second,\n// allowing you to adjust arguments, run code before and after, and\n// conditionally execute the original function.\nexport default function wrap(func, wrapper) {\n  return partial(wrapper, func);\n}\n","// Returns a negated version of the passed-in predicate.\nexport default function negate(predicate) {\n  return function() {\n    return !predicate.apply(this, arguments);\n  };\n}\n","// Returns a function that is the composition of a list of functions, each\n// consuming the return value of the function that follows.\nexport default function compose() {\n  var args = arguments;\n  var start = args.length - 1;\n  return function() {\n    var i = start;\n    var result = args[start].apply(this, arguments);\n    while (i--) result = args[i].call(this, result);\n    return result;\n  };\n}\n","// Returns a function that will only be executed on and after the Nth call.\nexport default function after(times, func) {\n  return function() {\n    if (--times < 1) {\n      return func.apply(this, arguments);\n    }\n  };\n}\n","// Returns a function that will only be executed up to (but not including) the\n// Nth call.\nexport default function before(times, func) {\n  var memo;\n  return function() {\n    if (--times > 0) {\n      memo = func.apply(this, arguments);\n    }\n    if (times <= 1) func = null;\n    return memo;\n  };\n}\n","import partial from './partial.js';\nimport before from './before.js';\n\n// Returns a function that will be executed at most one time, no matter how\n// often you call it. Useful for lazy initialization.\nexport default partial(before, 2);\n","import cb from './_cb.js';\nimport keys from './keys.js';\n\n// Returns the first key on an object that passes a truth test.\nexport default function findKey(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = keys(obj), key;\n  for (var i = 0, length = _keys.length; i < length; i++) {\n    key = _keys[i];\n    if (predicate(obj[key], key, obj)) return key;\n  }\n}\n","import cb from './_cb.js';\nimport getLength from './_getLength.js';\n\n// Internal function to generate `_.findIndex` and `_.findLastIndex`.\nexport default function createPredicateIndexFinder(dir) {\n  return function(array, predicate, context) {\n    predicate = cb(predicate, context);\n    var length = getLength(array);\n    var index = dir > 0 ? 0 : length - 1;\n    for (; index >= 0 && index < length; index += dir) {\n      if (predicate(array[index], index, array)) return index;\n    }\n    return -1;\n  };\n}\n","import createPredicateIndexFinder from './_createPredicateIndexFinder.js';\n\n// Returns the first index on an array-like that passes a truth test.\nexport default createPredicateIndexFinder(1);\n","import createPredicateIndexFinder from './_createPredicateIndexFinder.js';\n\n// Returns the last index on an array-like that passes a truth test.\nexport default createPredicateIndexFinder(-1);\n","import cb from './_cb.js';\nimport getLength from './_getLength.js';\n\n// Use a comparator function to figure out the smallest index at which\n// an object should be inserted so as to maintain order. Uses binary search.\nexport default function sortedIndex(array, obj, iteratee, context) {\n  iteratee = cb(iteratee, context, 1);\n  var value = iteratee(obj);\n  var low = 0, high = getLength(array);\n  while (low < high) {\n    var mid = Math.floor((low + high) / 2);\n    if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n  }\n  return low;\n}\n","import getLength from './_getLength.js';\nimport { slice } from './_setup.js';\nimport isNaN from './isNaN.js';\n\n// Internal function to generate the `_.indexOf` and `_.lastIndexOf` functions.\nexport default function createIndexFinder(dir, predicateFind, sortedIndex) {\n  return function(array, item, idx) {\n    var i = 0, length = getLength(array);\n    if (typeof idx == 'number') {\n      if (dir > 0) {\n        i = idx >= 0 ? idx : Math.max(idx + length, i);\n      } else {\n        length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n      }\n    } else if (sortedIndex && idx && length) {\n      idx = sortedIndex(array, item);\n      return array[idx] === item ? idx : -1;\n    }\n    if (item !== item) {\n      idx = predicateFind(slice.call(array, i, length), isNaN);\n      return idx >= 0 ? idx + i : -1;\n    }\n    for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n      if (array[idx] === item) return idx;\n    }\n    return -1;\n  };\n}\n","import sortedIndex from './sortedIndex.js';\nimport findIndex from './findIndex.js';\nimport createIndexFinder from './_createIndexFinder.js';\n\n// Return the position of the first occurrence of an item in an array,\n// or -1 if the item is not included in the array.\n// If the array is large and already in sort order, pass `true`\n// for **isSorted** to use binary search.\nexport default createIndexFinder(1, findIndex, sortedIndex);\n","import findLastIndex from './findLastIndex.js';\nimport createIndexFinder from './_createIndexFinder.js';\n\n// Return the position of the last occurrence of an item in an array,\n// or -1 if the item is not included in the array.\nexport default createIndexFinder(-1, findLastIndex);\n","import isArrayLike from './_isArrayLike.js';\nimport findIndex from './findIndex.js';\nimport findKey from './findKey.js';\n\n// Return the first value which passes a truth test.\nexport default function find(obj, predicate, context) {\n  var keyFinder = isArrayLike(obj) ? findIndex : findKey;\n  var key = keyFinder(obj, predicate, context);\n  if (key !== void 0 && key !== -1) return obj[key];\n}\n","import find from './find.js';\nimport matcher from './matcher.js';\n\n// Convenience version of a common use case of `_.find`: getting the first\n// object containing specific `key:value` pairs.\nexport default function findWhere(obj, attrs) {\n  return find(obj, matcher(attrs));\n}\n","import optimizeCb from './_optimizeCb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// The cornerstone for collection functions, an `each`\n// implementation, aka `forEach`.\n// Handles raw objects in addition to array-likes. Treats all\n// sparse array-likes as if they were dense.\nexport default function each(obj, iteratee, context) {\n  iteratee = optimizeCb(iteratee, context);\n  var i, length;\n  if (isArrayLike(obj)) {\n    for (i = 0, length = obj.length; i < length; i++) {\n      iteratee(obj[i], i, obj);\n    }\n  } else {\n    var _keys = keys(obj);\n    for (i = 0, length = _keys.length; i < length; i++) {\n      iteratee(obj[_keys[i]], _keys[i], obj);\n    }\n  }\n  return obj;\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Return the results of applying the iteratee to each element.\nexport default function map(obj, iteratee, context) {\n  iteratee = cb(iteratee, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length,\n      results = Array(length);\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    results[index] = iteratee(obj[currentKey], currentKey, obj);\n  }\n  return results;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\nimport optimizeCb from './_optimizeCb.js';\n\n// Internal helper to create a reducing function, iterating left or right.\nexport default function createReduce(dir) {\n  // Wrap code that reassigns argument variables in a separate function than\n  // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n  var reducer = function(obj, iteratee, memo, initial) {\n    var _keys = !isArrayLike(obj) && keys(obj),\n        length = (_keys || obj).length,\n        index = dir > 0 ? 0 : length - 1;\n    if (!initial) {\n      memo = obj[_keys ? _keys[index] : index];\n      index += dir;\n    }\n    for (; index >= 0 && index < length; index += dir) {\n      var currentKey = _keys ? _keys[index] : index;\n      memo = iteratee(memo, obj[currentKey], currentKey, obj);\n    }\n    return memo;\n  };\n\n  return function(obj, iteratee, memo, context) {\n    var initial = arguments.length >= 3;\n    return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n  };\n}\n","import createReduce from './_createReduce.js';\n\n// **Reduce** builds up a single result from a list of values, aka `inject`,\n// or `foldl`.\nexport default createReduce(1);\n","import createReduce from './_createReduce.js';\n\n// The right-associative version of reduce, also known as `foldr`.\nexport default createReduce(-1);\n","import cb from './_cb.js';\nimport each from './each.js';\n\n// Return all the elements that pass a truth test.\nexport default function filter(obj, predicate, context) {\n  var results = [];\n  predicate = cb(predicate, context);\n  each(obj, function(value, index, list) {\n    if (predicate(value, index, list)) results.push(value);\n  });\n  return results;\n}\n","import filter from './filter.js';\nimport negate from './negate.js';\nimport cb from './_cb.js';\n\n// Return all the elements for which a truth test fails.\nexport default function reject(obj, predicate, context) {\n  return filter(obj, negate(cb(predicate)), context);\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Determine whether all of the elements pass a truth test.\nexport default function every(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length;\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    if (!predicate(obj[currentKey], currentKey, obj)) return false;\n  }\n  return true;\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Determine if at least one element in the object passes a truth test.\nexport default function some(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length;\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    if (predicate(obj[currentKey], currentKey, obj)) return true;\n  }\n  return false;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport indexOf from './indexOf.js';\n\n// Determine if the array or object contains a given item (using `===`).\nexport default function contains(obj, item, fromIndex, guard) {\n  if (!isArrayLike(obj)) obj = values(obj);\n  if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n  return indexOf(obj, item, fromIndex) >= 0;\n}\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport map from './map.js';\nimport deepGet from './_deepGet.js';\nimport toPath from './_toPath.js';\n\n// Invoke a method (with arguments) on every item in a collection.\nexport default restArguments(function(obj, path, args) {\n  var contextPath, func;\n  if (isFunction(path)) {\n    func = path;\n  } else {\n    path = toPath(path);\n    contextPath = path.slice(0, -1);\n    path = path[path.length - 1];\n  }\n  return map(obj, function(context) {\n    var method = func;\n    if (!method) {\n      if (contextPath && contextPath.length) {\n        context = deepGet(context, contextPath);\n      }\n      if (context == null) return void 0;\n      method = context[path];\n    }\n    return method == null ? method : method.apply(context, args);\n  });\n});\n","import map from './map.js';\nimport property from './property.js';\n\n// Convenience version of a common use case of `_.map`: fetching a property.\nexport default function pluck(obj, key) {\n  return map(obj, property(key));\n}\n","import filter from './filter.js';\nimport matcher from './matcher.js';\n\n// Convenience version of a common use case of `_.filter`: selecting only\n// objects containing specific `key:value` pairs.\nexport default function where(obj, attrs) {\n  return filter(obj, matcher(attrs));\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport cb from './_cb.js';\nimport each from './each.js';\n\n// Return the maximum element (or element-based computation).\nexport default function max(obj, iteratee, context) {\n  var result = -Infinity, lastComputed = -Infinity,\n      value, computed;\n  if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null)) {\n    obj = isArrayLike(obj) ? obj : values(obj);\n    for (var i = 0, length = obj.length; i < length; i++) {\n      value = obj[i];\n      if (value != null && value > result) {\n        result = value;\n      }\n    }\n  } else {\n    iteratee = cb(iteratee, context);\n    each(obj, function(v, index, list) {\n      computed = iteratee(v, index, list);\n      if (computed > lastComputed || (computed === -Infinity && result === -Infinity)) {\n        result = v;\n        lastComputed = computed;\n      }\n    });\n  }\n  return result;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport cb from './_cb.js';\nimport each from './each.js';\n\n// Return the minimum element (or element-based computation).\nexport default function min(obj, iteratee, context) {\n  var result = Infinity, lastComputed = Infinity,\n      value, computed;\n  if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null)) {\n    obj = isArrayLike(obj) ? obj : values(obj);\n    for (var i = 0, length = obj.length; i < length; i++) {\n      value = obj[i];\n      if (value != null && value < result) {\n        result = value;\n      }\n    }\n  } else {\n    iteratee = cb(iteratee, context);\n    each(obj, function(v, index, list) {\n      computed = iteratee(v, index, list);\n      if (computed < lastComputed || (computed === Infinity && result === Infinity)) {\n        result = v;\n        lastComputed = computed;\n      }\n    });\n  }\n  return result;\n}\n","import isArray from './isArray.js';\nimport { slice } from './_setup.js';\nimport isString from './isString.js';\nimport isArrayLike from './_isArrayLike.js';\nimport map from './map.js';\nimport identity from './identity.js';\nimport values from './values.js';\n\n// Safely create a real, live array from anything iterable.\nvar reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\nexport default function toArray(obj) {\n  if (!obj) return [];\n  if (isArray(obj)) return slice.call(obj);\n  if (isString(obj)) {\n    // Keep surrogate pair characters together.\n    return obj.match(reStrSymbol);\n  }\n  if (isArrayLike(obj)) return map(obj, identity);\n  return values(obj);\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport getLength from './_getLength.js';\nimport random from './random.js';\nimport toArray from './toArray.js';\n\n// Sample **n** random values from a collection using the modern version of the\n// [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n// If **n** is not specified, returns a single random element.\n// The internal `guard` argument allows it to work with `_.map`.\nexport default function sample(obj, n, guard) {\n  if (n == null || guard) {\n    if (!isArrayLike(obj)) obj = values(obj);\n    return obj[random(obj.length - 1)];\n  }\n  var sample = toArray(obj);\n  var length = getLength(sample);\n  n = Math.max(Math.min(n, length), 0);\n  var last = length - 1;\n  for (var index = 0; index < n; index++) {\n    var rand = random(index, last);\n    var temp = sample[index];\n    sample[index] = sample[rand];\n    sample[rand] = temp;\n  }\n  return sample.slice(0, n);\n}\n","import sample from './sample.js';\n\n// Shuffle a collection.\nexport default function shuffle(obj) {\n  return sample(obj, Infinity);\n}\n","import cb from './_cb.js';\nimport pluck from './pluck.js';\nimport map from './map.js';\n\n// Sort the object's values by a criterion produced by an iteratee.\nexport default function sortBy(obj, iteratee, context) {\n  var index = 0;\n  iteratee = cb(iteratee, context);\n  return pluck(map(obj, function(value, key, list) {\n    return {\n      value: value,\n      index: index++,\n      criteria: iteratee(value, key, list)\n    };\n  }).sort(function(left, right) {\n    var a = left.criteria;\n    var b = right.criteria;\n    if (a !== b) {\n      if (a > b || a === void 0) return 1;\n      if (a < b || b === void 0) return -1;\n    }\n    return left.index - right.index;\n  }), 'value');\n}\n","import cb from './_cb.js';\nimport each from './each.js';\n\n// An internal function used for aggregate \"group by\" operations.\nexport default function group(behavior, partition) {\n  return function(obj, iteratee, context) {\n    var result = partition ? [[], []] : {};\n    iteratee = cb(iteratee, context);\n    each(obj, function(value, index) {\n      var key = iteratee(value, index, obj);\n      behavior(result, value, key);\n    });\n    return result;\n  };\n}\n","import group from './_group.js';\nimport has from './_has.js';\n\n// Groups the object's values by a criterion. Pass either a string attribute\n// to group by, or a function that returns the criterion.\nexport default group(function(result, value, key) {\n  if (has(result, key)) result[key].push(value); else result[key] = [value];\n});\n","import group from './_group.js';\n\n// Indexes the object's values by a criterion, similar to `_.groupBy`, but for\n// when you know that your index values will be unique.\nexport default group(function(result, value, key) {\n  result[key] = value;\n});\n","import group from './_group.js';\nimport has from './_has.js';\n\n// Counts instances of an object that group by a certain criterion. Pass\n// either a string attribute to count by, or a function that returns the\n// criterion.\nexport default group(function(result, value, key) {\n  if (has(result, key)) result[key]++; else result[key] = 1;\n});\n","import group from './_group.js';\n\n// Split a collection into two arrays: one whose elements all pass the given\n// truth test, and one whose elements all do not pass the truth test.\nexport default group(function(result, value, pass) {\n  result[pass ? 0 : 1].push(value);\n}, true);\n","import isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Return the number of elements in a collection.\nexport default function size(obj) {\n  if (obj == null) return 0;\n  return isArrayLike(obj) ? obj.length : keys(obj).length;\n}\n","// Internal `_.pick` helper function to determine whether `key` is an enumerable\n// property name of `obj`.\nexport default function keyInObj(value, key, obj) {\n  return key in obj;\n}\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport optimizeCb from './_optimizeCb.js';\nimport allKeys from './allKeys.js';\nimport keyInObj from './_keyInObj.js';\nimport flatten from './_flatten.js';\n\n// Return a copy of the object only containing the allowed properties.\nexport default restArguments(function(obj, keys) {\n  var result = {}, iteratee = keys[0];\n  if (obj == null) return result;\n  if (isFunction(iteratee)) {\n    if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n    keys = allKeys(obj);\n  } else {\n    iteratee = keyInObj;\n    keys = flatten(keys, false, false);\n    obj = Object(obj);\n  }\n  for (var i = 0, length = keys.length; i < length; i++) {\n    var key = keys[i];\n    var value = obj[key];\n    if (iteratee(value, key, obj)) result[key] = value;\n  }\n  return result;\n});\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport negate from './negate.js';\nimport map from './map.js';\nimport flatten from './_flatten.js';\nimport contains from './contains.js';\nimport pick from './pick.js';\n\n// Return a copy of the object without the disallowed properties.\nexport default restArguments(function(obj, keys) {\n  var iteratee = keys[0], context;\n  if (isFunction(iteratee)) {\n    iteratee = negate(iteratee);\n    if (keys.length > 1) context = keys[1];\n  } else {\n    keys = map(flatten(keys, false, false), String);\n    iteratee = function(value, key) {\n      return !contains(keys, key);\n    };\n  }\n  return pick(obj, iteratee, context);\n});\n","import { slice } from './_setup.js';\n\n// Returns everything but the last entry of the array. Especially useful on\n// the arguments object. Passing **n** will return all the values in\n// the array, excluding the last N.\nexport default function initial(array, n, guard) {\n  return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n}\n","import initial from './initial.js';\n\n// Get the first element of an array. Passing **n** will return the first N\n// values in the array. The **guard** check allows it to work with `_.map`.\nexport default function first(array, n, guard) {\n  if (array == null || array.length < 1) return n == null || guard ? void 0 : [];\n  if (n == null || guard) return array[0];\n  return initial(array, array.length - n);\n}\n","import { slice } from './_setup.js';\n\n// Returns everything but the first entry of the `array`. Especially useful on\n// the `arguments` object. Passing an **n** will return the rest N values in the\n// `array`.\nexport default function rest(array, n, guard) {\n  return slice.call(array, n == null || guard ? 1 : n);\n}\n","import rest from './rest.js';\n\n// Get the last element of an array. Passing **n** will return the last N\n// values in the array.\nexport default function last(array, n, guard) {\n  if (array == null || array.length < 1) return n == null || guard ? void 0 : [];\n  if (n == null || guard) return array[array.length - 1];\n  return rest(array, Math.max(0, array.length - n));\n}\n","import filter from './filter.js';\n\n// Trim out all falsy values from an array.\nexport default function compact(array) {\n  return filter(array, Boolean);\n}\n","import _flatten from './_flatten.js';\n\n// Flatten out an array, either recursively (by default), or up to `depth`.\n// Passing `true` or `false` as `depth` means `1` or `Infinity`, respectively.\nexport default function flatten(array, depth) {\n  return _flatten(array, depth, false);\n}\n","import restArguments from './restArguments.js';\nimport flatten from './_flatten.js';\nimport filter from './filter.js';\nimport contains from './contains.js';\n\n// Take the difference between one array and a number of other arrays.\n// Only the elements present in just the first array will remain.\nexport default restArguments(function(array, rest) {\n  rest = flatten(rest, true, true);\n  return filter(array, function(value){\n    return !contains(rest, value);\n  });\n});\n","import restArguments from './restArguments.js';\nimport difference from './difference.js';\n\n// Return a version of the array that does not contain the specified value(s).\nexport default restArguments(function(array, otherArrays) {\n  return difference(array, otherArrays);\n});\n","import isBoolean from './isBoolean.js';\nimport cb from './_cb.js';\nimport getLength from './_getLength.js';\nimport contains from './contains.js';\n\n// Produce a duplicate-free version of the array. If the array has already\n// been sorted, you have the option of using a faster algorithm.\n// The faster algorithm will not work with an iteratee if the iteratee\n// is not a one-to-one function, so providing an iteratee will disable\n// the faster algorithm.\nexport default function uniq(array, isSorted, iteratee, context) {\n  if (!isBoolean(isSorted)) {\n    context = iteratee;\n    iteratee = isSorted;\n    isSorted = false;\n  }\n  if (iteratee != null) iteratee = cb(iteratee, context);\n  var result = [];\n  var seen = [];\n  for (var i = 0, length = getLength(array); i < length; i++) {\n    var value = array[i],\n        computed = iteratee ? iteratee(value, i, array) : value;\n    if (isSorted && !iteratee) {\n      if (!i || seen !== computed) result.push(value);\n      seen = computed;\n    } else if (iteratee) {\n      if (!contains(seen, computed)) {\n        seen.push(computed);\n        result.push(value);\n      }\n    } else if (!contains(result, value)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n","import restArguments from './restArguments.js';\nimport uniq from './uniq.js';\nimport flatten from './_flatten.js';\n\n// Produce an array that contains the union: each distinct element from all of\n// the passed-in arrays.\nexport default restArguments(function(arrays) {\n  return uniq(flatten(arrays, true, true));\n});\n","import getLength from './_getLength.js';\nimport contains from './contains.js';\n\n// Produce an array that contains every item shared between all the\n// passed-in arrays.\nexport default function intersection(array) {\n  var result = [];\n  var argsLength = arguments.length;\n  for (var i = 0, length = getLength(array); i < length; i++) {\n    var item = array[i];\n    if (contains(result, item)) continue;\n    var j;\n    for (j = 1; j < argsLength; j++) {\n      if (!contains(arguments[j], item)) break;\n    }\n    if (j === argsLength) result.push(item);\n  }\n  return result;\n}\n","import max from './max.js';\nimport getLength from './_getLength.js';\nimport pluck from './pluck.js';\n\n// Complement of zip. Unzip accepts an array of arrays and groups\n// each array's elements on shared indices.\nexport default function unzip(array) {\n  var length = (array && max(array, getLength).length) || 0;\n  var result = Array(length);\n\n  for (var index = 0; index < length; index++) {\n    result[index] = pluck(array, index);\n  }\n  return result;\n}\n","import restArguments from './restArguments.js';\nimport unzip from './unzip.js';\n\n// Zip together multiple lists into a single array -- elements that share\n// an index go together.\nexport default restArguments(unzip);\n","import getLength  from './_getLength.js';\n\n// Converts lists into objects. Pass either a single array of `[key, value]`\n// pairs, or two parallel arrays of the same length -- one of keys, and one of\n// the corresponding values. Passing by pairs is the reverse of `_.pairs`.\nexport default function object(list, values) {\n  var result = {};\n  for (var i = 0, length = getLength(list); i < length; i++) {\n    if (values) {\n      result[list[i]] = values[i];\n    } else {\n      result[list[i][0]] = list[i][1];\n    }\n  }\n  return result;\n}\n","// Generate an integer Array containing an arithmetic progression. A port of\n// the native Python `range()` function. See\n// [the Python documentation](https://docs.python.org/library/functions.html#range).\nexport default function range(start, stop, step) {\n  if (stop == null) {\n    stop = start || 0;\n    start = 0;\n  }\n  if (!step) {\n    step = stop < start ? -1 : 1;\n  }\n\n  var length = Math.max(Math.ceil((stop - start) / step), 0);\n  var range = Array(length);\n\n  for (var idx = 0; idx < length; idx++, start += step) {\n    range[idx] = start;\n  }\n\n  return range;\n}\n","import { slice } from './_setup.js';\n\n// Chunk a single array into multiple arrays, each containing `count` or fewer\n// items.\nexport default function chunk(array, count) {\n  if (count == null || count < 1) return [];\n  var result = [];\n  var i = 0, length = array.length;\n  while (i < length) {\n    result.push(slice.call(array, i, i += count));\n  }\n  return result;\n}\n","import _ from './underscore.js';\n\n// Helper function to continue chaining intermediate results.\nexport default function chainResult(instance, obj) {\n  return instance._chain ? _(obj).chain() : obj;\n}\n","import _ from './underscore.js';\nimport each from './each.js';\nimport functions from './functions.js';\nimport { push } from './_setup.js';\nimport chainResult from './_chainResult.js';\n\n// Add your own custom functions to the Underscore object.\nexport default function mixin(obj) {\n  each(functions(obj), function(name) {\n    var func = _[name] = obj[name];\n    _.prototype[name] = function() {\n      var args = [this._wrapped];\n      push.apply(args, arguments);\n      return chainResult(this, func.apply(_, args));\n    };\n  });\n  return _;\n}\n","import _ from './underscore.js';\nimport each from './each.js';\nimport { ArrayProto } from './_setup.js';\nimport chainResult from './_chainResult.js';\n\n// Add all mutator `Array` functions to the wrapper.\neach(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n  var method = ArrayProto[name];\n  _.prototype[name] = function() {\n    var obj = this._wrapped;\n    if (obj != null) {\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) {\n        delete obj[0];\n      }\n    }\n    return chainResult(this, obj);\n  };\n});\n\n// Add all accessor `Array` functions to the wrapper.\neach(['concat', 'join', 'slice'], function(name) {\n  var method = ArrayProto[name];\n  _.prototype[name] = function() {\n    var obj = this._wrapped;\n    if (obj != null) obj = method.apply(obj, arguments);\n    return chainResult(this, obj);\n  };\n});\n\nexport default _;\n","// Default Export\n// ==============\n// In this module, we mix our bundled exports into the `_` object and export\n// the result. This is analogous to setting `module.exports = _` in CommonJS.\n// Hence, this module is also the entry point of our UMD bundle and the package\n// entry point for CommonJS and AMD users. In other words, this is (the source\n// of) the module you are interfacing with when you do any of the following:\n//\n// ```js\n// // CommonJS\n// var _ = require('underscore');\n//\n// // AMD\n// define(['underscore'], function(_) {...});\n//\n// // UMD in the browser\n// // _ is available as a global variable\n// ```\nimport * as allExports from './index.js';\nimport { mixin } from './index.js';\n\n// Add all of the Underscore functions to the wrapper object.\nvar _ = mixin(allExports);\n// Legacy Node.js API.\n_._ = _;\n// Export the Underscore API.\nexport default _;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/** @license React v16.14.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var l=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113,z=n?Symbol.for(\"react.memo\"):60115,A=n?Symbol.for(\"react.lazy\"):\n60116,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}\nfunction N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),k=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(C(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function V(a,b,c){return null==a?0:T(a,\"\",b,c)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+c)),e.push(a))}function X(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(P,\"$&/\")+\"/\");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}\nvar ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};\nexports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,\nkey:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;\nexports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version=\"16.14.0\";\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}